{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/admin.routing.ts","webpack:///./src/app/admin/apimodels/changepasswordapimodel.ts","webpack:///./src/app/admin/apimodels/daterangeapimodel.ts","webpack:///./src/app/admin/apimodels/manageuserapimodel.ts","webpack:///./src/app/admin/apimodels/manageuserroleapimodel.ts","webpack:///./src/app/admin/apimodels/userloginapimodel.ts","webpack:///./src/app/admin/changeuserpassword/changeuserpassword.component.css","webpack:///./src/app/admin/changeuserpassword/changeuserpassword.component.html","webpack:///./src/app/admin/changeuserpassword/changeuserpassword.component.ts","webpack:///./src/app/admin/container/container.component.css","webpack:///./src/app/admin/container/container.component.html","webpack:///./src/app/admin/container/container.component.ts","webpack:///./src/app/admin/dashboard/dashboard.component.css","webpack:///./src/app/admin/dashboard/dashboard.component.html","webpack:///./src/app/admin/dashboard/dashboard.component.ts","webpack:///./src/app/admin/getnewuserprofile/getnewuserprofile.component.css","webpack:///./src/app/admin/getnewuserprofile/getnewuserprofile.component.html","webpack:///./src/app/admin/getnewuserprofile/getnewuserprofile.component.ts","webpack:///./src/app/admin/login/login.component.css","webpack:///./src/app/admin/login/login.component.html","webpack:///./src/app/admin/login/login.component.ts","webpack:///./src/app/admin/manageuserprofile/manageuserprofile.component.css","webpack:///./src/app/admin/manageuserprofile/manageuserprofile.component.html","webpack:///./src/app/admin/manageuserprofile/manageuserprofile.component.ts","webpack:///./src/app/admin/manageuserrole/manageuserrole.component.css","webpack:///./src/app/admin/manageuserrole/manageuserrole.component.html","webpack:///./src/app/admin/manageuserrole/manageuserrole.component.ts","webpack:///./src/app/admin/pipes/transaction.pipe.ts","webpack:///./src/app/admin/pipes/user.pipe.ts","webpack:///./src/app/admin/report/report.component.css","webpack:///./src/app/admin/report/report.component.html","webpack:///./src/app/admin/report/report.component.ts","webpack:///./src/app/admin/roles/roles.component.css","webpack:///./src/app/admin/roles/roles.component.html","webpack:///./src/app/admin/roles/roles.component.ts","webpack:///./src/app/admin/services/auth.service.ts","webpack:///./src/app/admin/services/general.service.ts","webpack:///./src/app/admin/services/userAccess.ts","webpack:///./src/app/admin/status/status.component.css","webpack:///./src/app/admin/status/status.component.html","webpack:///./src/app/admin/status/status.component.ts","webpack:///./src/app/admin/transactiontype/transactiontype.component.css","webpack:///./src/app/admin/transactiontype/transactiontype.component.html","webpack:///./src/app/admin/transactiontype/transactiontype.component.ts","webpack:///./src/app/admin/users/users.component.css","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication/apimodels/userloginapimodel.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/authentication.routing.ts","webpack:///./src/app/authentication/container/container.component.css","webpack:///./src/app/authentication/container/container.component.html","webpack:///./src/app/authentication/container/container.component.ts","webpack:///./src/app/authentication/getnewuserprofile/getnewuserprofile.component.css","webpack:///./src/app/authentication/getnewuserprofile/getnewuserprofile.component.html","webpack:///./src/app/authentication/getnewuserprofile/getnewuserprofile.component.ts","webpack:///./src/app/authentication/login/login.component.css","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/services/auth.service.ts","webpack:///./src/app/auto-generated/auto-generated.component.css","webpack:///./src/app/auto-generated/auto-generated.component.html","webpack:///./src/app/auto-generated/auto-generated.component.ts","webpack:///./src/app/config.ts","webpack:///./src/app/domainmodel/interfaces/transaction.ts","webpack:///./src/app/domainmodel/queueittransaction.ts","webpack:///./src/app/domainmodel/role.ts","webpack:///./src/app/domainmodel/status.ts","webpack:///./src/app/domainmodel/transactiontype.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/operations/apimodels/transactionapimodel.ts","webpack:///./src/app/operations/apimodels/userloginapimodel.ts","webpack:///./src/app/operations/collections/collections.component.css","webpack:///./src/app/operations/collections/collections.component.html","webpack:///./src/app/operations/collections/collections.component.ts","webpack:///./src/app/operations/container/container.component.css","webpack:///./src/app/operations/container/container.component.html","webpack:///./src/app/operations/container/container.component.ts","webpack:///./src/app/operations/footer/footer.component.css","webpack:///./src/app/operations/footer/footer.component.html","webpack:///./src/app/operations/footer/footer.component.ts","webpack:///./src/app/operations/getnewuserprofile/getnewuserprofile.component.css","webpack:///./src/app/operations/getnewuserprofile/getnewuserprofile.component.html","webpack:///./src/app/operations/getnewuserprofile/getnewuserprofile.component.ts","webpack:///./src/app/operations/job/job.component.css","webpack:///./src/app/operations/job/job.component.html","webpack:///./src/app/operations/job/job.component.ts","webpack:///./src/app/operations/login/login.component.css","webpack:///./src/app/operations/login/login.component.html","webpack:///./src/app/operations/login/login.component.ts","webpack:///./src/app/operations/operations.module.ts","webpack:///./src/app/operations/operations.routing.ts","webpack:///./src/app/operations/pipes/tellertransaction.pipe.ts","webpack:///./src/app/operations/pipes/transaction.pipe.ts","webpack:///./src/app/operations/processtransactions/processtransactions.component.css","webpack:///./src/app/operations/processtransactions/processtransactions.component.html","webpack:///./src/app/operations/processtransactions/processtransactions.component.ts","webpack:///./src/app/operations/services/auth.service.ts","webpack:///./src/app/operations/services/operations.service.ts","webpack:///./src/app/operations/services/transaction.service.ts","webpack:///./src/app/operations/services/userAccess.ts","webpack:///./src/app/operations/statusreportbar/statusreportbar.component.css","webpack:///./src/app/operations/statusreportbar/statusreportbar.component.html","webpack:///./src/app/operations/statusreportbar/statusreportbar.component.ts","webpack:///./src/app/services/admin/displaymodels/telleractivitybreakdown.ts","webpack:///./src/app/services/admin/reportsfacade.ts","webpack:///./src/app/services/admin/rolefacade.ts","webpack:///./src/app/services/admin/statusfacade.ts","webpack:///./src/app/services/admin/storehelpers/tellerreportsystem.ts","webpack:///./src/app/services/admin/storehelpers/tellertransactionitem.ts","webpack:///./src/app/services/admin/transactiontypefacade.ts","webpack:///./src/app/services/admin/userfacade.ts","webpack:///./src/app/services/authentication/usersAccess.ts","webpack:///./src/app/services/operations/operationsfacade.ts","webpack:///./src/app/shared/_directives/alert.component.html","webpack:///./src/app/shared/_directives/alert.component.ts","webpack:///./src/app/shared/_directives/index.ts","webpack:///./src/app/shared/_models/alert.ts","webpack:///./src/app/shared/_models/index.ts","webpack:///./src/app/shared/_services/alert.service.ts","webpack:///./src/app/shared/_services/index.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/store/operations/teller.ts","webpack:///./src/app/store/operations/transaction.ts","webpack:///./src/app/valueobjects/accountvo.ts","webpack:///./src/app/valueobjects/customerVO.ts","webpack:///./src/app/valueobjects/userVO.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ByC;AACM;AACsB;AAC3B;AAC2B;AACtB;AACwC;AAC9B;AACA;AACG;AACA;AAClB;AACc;AACU;AACR;AAEI;AACkB;AACd;AACf;AAC4B;AAChB;AAEJ;AACkC;AACG;AACZ;AAC1B;AACb;AACU;AACD;AACG;AACN;AAC0C;AA2C7F;IAAA;IAA2B,CAAC;IAAf,WAAW;QAzCvB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iFAAkB;gBAClB,iFAAkB;gBAClB,mGAAwB;gBACxB,qEAAc;gBACd,qEAAc;gBACd,yEAAe;gBACf,yEAAe;gBACf,wEAAe;gBACf,0GAA0B;gBAC1B,6GAA2B;gBAC3B,iGAAuB;gBACvB,0DAAQ;gBACR,sEAAc;gBACd,0GAA0B;aAC3B;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAgB;gBAChB,6FAAuB;gBACvB,4DAAY;gBACZ,mEAAmB;gBACnB,mEAAmB;gBACnB,oEAAc;gBACd,mEAAY;gBACZ,2DAAW;gBACX,sDAAO;aACR;YACD,SAAS,EAAE;gBACT,sDAAa;gBACb,sEAAU;gBACV,0EAAY;gBACZ,4FAAqB;gBACrB,2EAAY;gBACZ,gEAAU;gBACV,sEAAU;gBACV,8DAAiB;aAClB;YACD,OAAO,EAAC,CAAC,6DAAgB,CAAC;SAC3B,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC5ExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEc;AACA;AACZ;AACG;AAC2B;AAC3B;AACiC;AACT;AACY;AACvC;AACoC;AAE7F,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,iFAAkB;QAE7B,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,0GAA0B,EAAE;YACpE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,mGAAwB,EAAE;YACjE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC1D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,yGAA0B,EAAE;YACtE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,gGAAuB,EAAE;YAChE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,4GAA2B,EAAE;SAC3E;KACJ;CACJ,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACnC1E;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACJD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;ACHD,+DAA+D,mL;;;;;;;;;;;ACA/D,smF;;;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AACS;AAChB;AACb;AAOhD;IAIE,qCAAoB,eAA+B,EAAU,OAA0B;QAAnE,oBAAe,GAAf,eAAe,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAmB;QACrF,IAAI,CAAC,sBAAsB,GAAG,IAAI,wDAAS,CAAC;YAC1C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,8CAAQ,GAAR;IACA,CAAC;IAED,wDAAkB,GAAlB;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,wFAAsB,EAAE,CAAC;QACzC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC7D,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QACzE,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAEvF,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACxC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACT,CAAC;IA3BU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,gJAAkD;;SAEnD,CAAC;+EAKqC,wEAAc,EAAmB,6DAAiB;OAJ5E,2BAA2B,CA4BvC;IAAD,kCAAC;CAAA;AA5BuC;;;;;;;;;;;;ACXxC,2BAA2B,oBAAoB,KAAK,+CAA+C,mU;;;;;;;;;;;ACAnG,6iBAA6iB,2BAA2B,MAAM,QAAQ,0BAA0B,6+CAA6+C,2BAA2B,MAAM,QAAQ,0BAA0B,6KAA6K,2BAA2B,MAAM,QAAQ,0BAA0B,mxOAAmxO,+K;;;;;;;;;;;;;;;;;;;;ACAzlT;AACpB;AACY;AACzB;AASzC;IACE,4BAAmB,UAAsB,EAAU,WAAwB,EACjE,OAAe;QADN,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QACjE,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE9B,qCAAQ,GAAR;IACA,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACzC,CAAC;IAXU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qHAAyC;YACzC,eAAe,EAAE,qEAAuB,CAAC,MAAM;;SAEhD,CAAC;+EAE+B,+DAAU,EAAuB,+EAAW;YACxD,sDAAM;OAFd,kBAAkB,CAY9B;IAAD,yBAAC;CAAA;AAZ8B;;;;;;;;;;;;ACZ/B,wBAAwB,oBAAoB,KAAK,mBAAmB,gCAAgC,KAAK,eAAe,qCAAqC,KAAK,+CAA+C,mhB;;;;;;;;;;;ACAjN,2jCAA2jC,uCAAuC,wuBAAwuB,4CAA4C,mvBAAmvB,0CAA0C,gvBAAgvB,sCAAsC,0sBAA0sB,uCAAuC,8tBAA8tB,sCAAsC,0jCAA0jC,+PAA+P,mBAAmB,MAAM,MAAM,mkCAAmkC,oCAAoC,eAAe,8CAA8C,OAAO,+CAA+C,yBAAyB,+CAA+C,iBAAiB,+CAA+C,gBAAgB,+CAA+C,0BAA0B,o1CAAo1C,mcAAmc,+tB;;;;;;;;;;;;;;;;;;;;;;;;;ACAt5S;AACoB;AACvB;AACiC;AACZ;AAEP;AACL;AACW;AAEnB;AAOhD;IAUE,4BAAoB,cAA6B,EAAS,gBAAkC,EACnF,YAA0B,EAAU,eAA+B,EACnE,OAA0B;QAFf,mBAAc,GAAd,cAAc,CAAe;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QACnF,iBAAY,GAAZ,YAAY,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAgB;QACnE,YAAO,GAAP,OAAO,CAAmB;QARnC,WAAM,GAAY,KAAK,CAAC;QAExB,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC;QAM5D,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC;YACjC,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IAEH,mDAAsB,GAAtB;QAAA,iBAeC;QAdC,IAAI,OAAO,GAAG,IAAI,oEAAoB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAEjG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,sBAAsB,EAAE,cAAI;YACjD,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAChF,KAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAC/E,KAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YACnF,KAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YACrF,KAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAChF,KAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACnE,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAC3F,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,uDAA0B,GAA1B;QACE,IAAI,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAC3F,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;IACvC,CAAC;IAED,yDAA4B,GAA5B;QACE,IAAI,CAAC,YAAY,CAAC,qCAAqC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAC5F,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;IACxC,CAAC;IAED,2DAA8B,GAA9B;QACE,IAAI,CAAC,YAAY,CAAC,uCAAuC,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAC9F,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC;IAC3C,CAAC;IAED,6CAAgB,GAAhB;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,SAAS,GAAG,IAAI,8EAAiB,EAAE,CAAC;QACxC,IAAI,MAAM,GAAW,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAE5D,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC;QAC5B,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,SAAS,CAAC;aACrD,SAAS,CAAC,UAAC,IAA0B;YACpC,IAAG,IAAI,EAAC;gBACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAC7C,KAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBACnF,KAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBACnF,KAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBAElF,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACT,CAAC;IA5EU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,qHAAyC;;SAE1C,CAAC;+EAWoC,4DAAa,EAA2B,6FAAgB;YACrE,iFAAY,EAA2B,wEAAc;YAC1D,6DAAiB;OAZxB,kBAAkB,CA6E9B;IAAD,yBAAC;CAAA;AA7E8B;;;;;;;;;;;;ACjB/B,uCAAuC,oBAAoB,qBAAqB,KAAK,qBAAqB,yBAAyB,KAAK,+CAA+C,2gB;;;;;;;;;;;ACAvL,qTAAqT,gEAAgE,cAAc,mhCAAmhC,wGAAwG,KAAK,2BAA2B,MAAM,QAAQ,0BAA0B,2OAA2O,KAAK,MAAM,8nB;;;;;;;;;;;;;;;;;;;;;;ACAjvD;AACP;AACd;AACN;AACO;AAGC;AAQxD;IAKE,oCAAmB,UAAsB,EAAU,OAA0B,EACnE,WAAwB,EAAS,YAA0B;QADlD,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QACnE,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAHrE,cAAS,GAAY,KAAK,CAAC;QAIzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,wDAAS,CAAC;YACzC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR;IACA,CAAC;IAED,sDAAiB,GAAjB;QAAA,iBAsBC;QArBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aACzD,SAAS,CAAC,UAAC,IAAI;YACd,IAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,EAAC;gBACnC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;gBACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sDAAsD,CAAC;aAClF;iBACG;gBACF,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,4DAA4D,CAAC,CAAC;aACvF;QACH,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAc,GAAd;QAAA,iBAyBC;QAxBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACrC,SAAS,CAAC,UAAC,IAAc;YACxB,IAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,EAAC;gBACnC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;oBAClC,KAAK,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK;iBAClC,CAAC,CAAC;aACJ;iBAAI;gBACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;aACtF;QACL,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;IAhEU,0BAA0B;QANtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,6IAAiD;;SAElD,CAAC;+EAM+B,+DAAU,EAAmB,6DAAiB;YACtD,kEAAW,EAAuB,oEAAY;OAN1D,0BAA0B,CAkEtC;IAAD,iCAAC;CAAA;AAlEsC;;;;;;;;;;;;ACfvC,uCAAuC,oBAAoB,qBAAqB,KAAK,qBAAqB,yBAAyB,SAAS,oBAAoB,yBAAyB,KAAK,+CAA+C,mjB;;;;;;;;;;;ACA7O,67BAA67B,mIAAmI,kBAAkB,0IAA0I,MAAM,udAAud,oEAAoE,cAAc,w0CAAw0C,MAAM,8L;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhhG;AAChC;AAE+B;AACW;AAE5B;AACY;AACC;AACd;AACN;AACQ;AAWxD;IAcE,wBAAoB,OAAe,EAAU,kBAAqC,EACzE,gBAAkC,EAAU,YAAyB,EACrE,UAAsB,EAAU,OAA0B,EAAS,YAA0B;QAFlF,YAAO,GAAP,OAAO,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QACzE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QACrE,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QARtG,cAAS,GAAY,KAAK,CAAC;QASvB,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,yCAAyC;QACzC,wDAAwD;QACxD,uDAAuD;QACvD,MAAM;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC,EAEtC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,GAAG,IAAI,wDAAS,CAAC;YACzC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAEH,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAEK,8BAAK,GAAX;;;;;;;wBACG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBACjB,KAAK,GAAG,IAAI,8EAAiB,EAAE,CAAC;wBACpC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBACtD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBAEtD,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;iCACjC,SAAS,CAAC,UAAC,IAAe;gCACzB,IAAG,IAAI,CAAC,aAAa,EAAC;oCAClB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oCACvB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;iCACvB;qCACG;oCACF,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oCACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;iCACtF;4BACH,CAAC,EACD,UAAC,GAAsB;gCACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gCACpB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;4BAC3E,CAAC,CACF;;wBAfD,SAeC,CAAC;wBAEF,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;6BAC9C,SAAS,CAAC,UAAC,IAA0B;wBAEtC,CAAC,CAAC,CAAC;;;;;KAEJ;IAEK,oCAAW,GAAjB,UAAkB,QAAoB;;;;;4BACpC,qBAAM,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;6BAChD,SAAS,CAAC,UAAC,WAAmB;4BAC7B,IAAG,WAAW,CAAC,QAAQ,EAAC;gCACtB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gCACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;gCACrD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gCAC/C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;gCACvD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;gCACrD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gCAC/C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gCACvC;;mCAEG;gCACH,IAAI,oBAAoB,GAAG,KAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gCAC5F,IAAG,oBAAoB,EAAC;oCACtB,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;iCAC/C;qCACG;oCACF,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;oCAC5B,IAAI,KAAK,GAAU,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oCAClF,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iCAChC;6BACF;iCACG;gCACF,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6EAA6E,CAAC,CAAC;6BACxG;wBACL,CAAC,CAAC;;wBA1BF,SA0BE,CAAC;;;;;KACJ;IAED,0CAAiB,GAAjB;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1D,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;YACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sDAAsD,CAAC;QACnF,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAc,GAAd;QAAA,iBAoBC;QAnBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACrC,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;gBAClC,KAAK,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK;aAClC,CAAC,CAAC;QACP,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACP,CAAC;IAxIqC;QAArC,+DAAS,CAAC,yBAAyB,CAAC;wEAAqB,wDAAU;8DAAC;IACtC;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;wEAAsB,wDAAU;+DAAC;IAC3B;QAAnC,+DAAS,CAAC,wBAAwB,CAAC;wEAA8B,wDAAU;wEAAC;IAZlE,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yGAAqC;;SAEtC,CAAC;+EAe6B,sDAAM,EAA8B,gGAAiB;YACvD,qFAAgB,EAAwB,kEAAW;YACzD,+DAAU,EAAmB,6DAAiB,EAAuB,qEAAY;OAhB3F,cAAc,CAoJ1B;IAAD,qBAAC;CAAA;AApJ0B;;;;;;;;;;;;ACtB3B,+DAA+D,mL;;;;;;;;;;;ACA/D,8tFAA8tF,6PAA6P,yTAAyT,sLAAsL,gBAAgB,kPAAkP,WAAW,8DAA8D,aAAa,4EAA4E,mCAAmC,qDAAqD,sNAAsN,mCAAmC,gBAAgB,MAAM,QAAQ,eAAe,MAAM,MAAM,QAAQ,MAAM,cAAc,MAAM,yNAAyN,wJAAwJ,ulB;;;;;;;;;;;;;;;;;;;;;;;;ACAhkJ;AACP;AACP;AACE;AAEM;AAEN;AAEP;AACR;AAQhD;IASE,oCAAoB,eAA+B,EAAS,UAAsB,EACxE,UAAsB,EAAS,YAA0B,EACxD,OAA0B;QAFjB,oBAAe,GAAf,eAAe,CAAgB;QAAS,eAAU,GAAV,UAAU,CAAY;QACxE,eAAU,GAAV,UAAU,CAAY;QAAS,iBAAY,GAAZ,YAAY,CAAc;QACxD,YAAO,GAAP,OAAO,CAAmB;QATrC,eAAU,GAAW,cAAc,CAAC;QAEpC,cAAS,GAAY,IAAI,CAAC;QAE1B,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAKxC,IAAI,CAAC,cAAc,GAAG,IAAI,wDAAS,CAAC;YAClC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aAC1B,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aAC5B,SAAS,CAAC,UAAC,IAAY;YACpB,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;QACjC,CAAC,EACD,UAAC,GAAsB;YACnB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;QACjC,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,4CAAO,GAAP;QAAA,iBA2BC;QA1BC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,gFAAkB,EAAE,CAAC;QACrC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC7D,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC3D,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACrD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE3D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC/B,SAAS,CAAC,UAAC,IAAI;YACd,IAAG,IAAI,EAAC;gBACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;gBACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC9C,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAEjD,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,+BAA+B,CAAC;aAClI;QACH,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACpE,CAAC,CACF,CAAC;IACN,CAAC;IAED,6CAAQ,GAAR,UAAS,EAAO;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC1B,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS;YACzC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ;YACvC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK;YACjC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ;YACjC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IAClC,CAAC;IAED,mDAAc,GAAd,UAAe,EAAU;QAAzB,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aAClC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACvC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,OAAO,CAAC;YAChC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAc,GAAd,UAAe,EAAO;QAAtB,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aAClC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YAC3D,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACvC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAU,GAAV;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,gFAAkB,EAAE,CAAC;QACrC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC7D,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC3D,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACrD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC;aACjC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QAC3E,CAAC,CACF,CAAC;QAEJ,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;IACnC,CAAC;IApIU,0BAA0B;QANtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,6IAAiD;;SAElD,CAAC;+EAUqC,wEAAc,EAAqB,4EAAU;YAC5D,4EAAU,EAAuB,oEAAY;YAC/C,6DAAiB;OAX1B,0BAA0B,CAqItC;IAAD,iCAAC;CAAA;AArIsC;;;;;;;;;;;;AClBvC,gCAAgC,oBAAoB,oBAAoB,OAAO,+CAA+C,+Y;;;;;;;;;;;ACA9H,4kEAA4kE,WAAW,8XAA8X,MAAM,+ZAA+Z,sLAAsL,gBAAgB,+NAA+N,WAAW,8DAA8D,aAAa,4EAA4E,mCAAmC,qDAAqD,sNAAsN,mCAAmC,gBAAgB,MAAM,QAAQ,eAAe,MAAM,MAAM,QAAQ,MAAM,cAAc,MAAM,2jB;;;;;;;;;;;;;;;;;;;;;;;;ACA3zH;AACW;AAEE;AAEc;AACT;AACpB;AACe;AAEP;AAOxD;IAOE,iCAAoB,eAA+B,EAAS,UAAsB,EACxE,OAA0B,EAAS,UAAsB,EACzD,YAA0B;QAFhB,oBAAe,GAAf,eAAe,CAAgB;QAAS,eAAU,GAAV,UAAU,CAAY;QACxE,YAAO,GAAP,OAAO,CAAmB;QAAS,eAAU,GAAV,UAAU,CAAY;QACzD,iBAAY,GAAZ,YAAY,CAAc;QALpC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAKxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aAC1B,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;aACxB,SAAS,CAAC,UAAC,IAAY;YACtB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;QACjC,CAAC,EACD,UAAC,GAAsB;YACnB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;QACjC,CAAC,CACJ,CAAC;IACN,CAAC;IAED,0CAAQ,GAAR,UAAS,EAAO;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAC9B,gBAAgB;YAChB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK;YACjC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ;SACnC,CAAC,CAAC;IACL,CAAC;IAED,+CAAa,GAAb;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,wFAAsB,EAAE,CAAC;QACzC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACzD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE/D,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC;aACpC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QAC9D,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;QAC7E,CAAC,CACA,CAAC;IACR,CAAC;IAED,oDAAkB,GAAlB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,wFAAsB,EAAE,CAAC;QACzC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACzD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE/D,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACzC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QACvD,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACtE,CAAC,CACA,CAAC;IACR,CAAC;IA/EU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oIAA8C;;SAE/C,CAAC;+EAQqC,wEAAc,EAAqB,4EAAU;YAC/D,6DAAiB,EAAqB,4EAAU;YAC3C,oEAAY;OATzB,uBAAuB,CAgFnC;IAAD,8BAAC;CAAA;AAhFmC;;;;;;;;;;;;;;;;;;ACjBgB;AAMpD;IAAA;IAYA,CAAC;IAXC,mCAAS,GAAT,UAAU,YAAkC,EAAE,UAAe;QAC3D,IAAG,UAAU,IAAI,IAAI;YACjB,OAAO,YAAY,CAAC;QAExB,OAAO,YAAY,CAAC,MAAM,CAAC,UAAS,WAAW;YAC7C,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC7F,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBACxF,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC9E,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,eAAe;QAH3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;;;;;;;ACNwB;AAMpD;IAAA;IAaA,CAAC;IAXC,4BAAS,GAAT,UAAU,KAAe,EAAE,UAAe;QACxC,IAAG,UAAU,IAAI,IAAI;YACjB,OAAO,KAAK,CAAC;QAEjB,OAAO,KAAK,CAAC,MAAM,CAAC,UAAS,IAAI;YAC7B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC;mBACxE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC;mBACnE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,QAAQ;QAHpB,0DAAI,CAAC;YACJ,IAAI,EAAE,MAAM;SACb,CAAC;OACW,QAAQ,CAapB;IAAD,eAAC;CAAA;AAboB;;;;;;;;;;;;ACNrB,0CAA0C,mBAAmB,kBAAkB,mBAAmB,KAAK,kDAAkD,2BAA2B,oBAAoB,mCAAmC,KAAK,kCAAkC,2BAA2B,+BAA+B,+CAA+C,mzB;;;;;;;;;;;ACA3X,0rDAA0rD,+oBAA+oB,moCAAmoC,qNAAqN,QAAQ,gDAAgD,yHAAyH,QAAQ,gDAAgD,wHAAwH,QAAQ,+CAA+C,qHAAqH,QAAQ,0CAA0C,wbAAwb,2OAA2O,qBAAqB,GAAG,uBAAuB,GAAG,sBAAsB,0CAA0C,WAAW,qCAAqC,mBAAmB,GAAG,qBAAqB,GAAG,oBAAoB,ggCAAggC,mCAAmC,eAAe,2CAA2C,OAAO,6CAA6C,oCAAoC,MAAM,MAAM,QAAQ,mCAAmC,8CAA8C,yBAAyB,6CAA6C,oBAAoB,6CAA6C,6BAA6B,6CAA6C,2CAA2C,6CAA6C,2CAA2C,0UAA0U,2DAA2D,sBAAsB,6OAA6O,8CAA8C,6CAA6C,iCAAiC,QAAQ,gCAAgC,4RAA4R,+DAA+D,kBAAkB,QAAQ,iBAAiB,2PAA2P,oBAAoB,8b;;;;;;;;;;;;;;;;;;;;;;ACA3kQ;AACP;AACD;AACN;AAEO;AACpB;AAShD;IAUE,yBAAoB,eAA+B,EAAS,YAA0B,EAC5E,OAA0B;QADhB,oBAAe,GAAf,eAAe,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAC5E,YAAO,GAAP,OAAO,CAAmB;QAJpC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC;QAIxD,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE,CAAC;IAC/C,CAAC;IAED,+CAAqB,GAArB;QAAA,iBA2BC;QA1BC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,SAAS,GAAG,IAAI,8EAAiB,EAAE,CAAC;QACxC,IAAI,QAAQ,GAAW,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAC7D,IAAI,MAAM,GAAW,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAEzD,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC9B,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAE5B,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,SAAS,CAAC;aACrD,SAAS,CAAC,UAAC,IAA0B;YAClC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAC7C,KAAI,CAAC,YAAY,CAAC,kCAAkC,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;YAC5F,KAAI,CAAC,YAAY,CAAC,kCAAkC,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;YAC5F,KAAI,CAAC,YAAY,CAAC,iCAAiC,CAAC,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC/F,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;QAC/B,CAAC,CACA,CAAC;QACN,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAC7C,CAAC;IAjDU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,4GAAsC;;SAEvC,CAAC;+EAWqC,wEAAc,EAAuB,iFAAY;YACnE,6DAAiB;OAXzB,eAAe,CAkD3B;IAAD,sBAAC;CAAA;AAlD2B;;;;;;;;;;;;ACf5B,oCAAoC,oBAAoB,+BAA+B,8BAA8B,KAAK,gBAAgB,4EAA4E,KAAK,+CAA+C,+kB;;;;;;;;;;;ACA1Q,23DAA23D,uPAAuP,oVAAoV,omBAAomB,mCAAmC,eAAe,2FAA2F,OAAO,mCAAmC,WAAW,ylC;;;;;;;;;;;;;;;;;;;;;;;ACAjqG;AACd;AAEb;AACoB;AACL;AACf;AACQ;AAQxD;IAQE,wBAAmB,UAAsB,EAAU,eAA+B,EACxE,OAA0B,EAAS,YAA0B;QADpD,eAAU,GAAV,UAAU,CAAY;QAAU,oBAAe,GAAf,eAAe,CAAgB;QACxE,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAPvE,eAAU,GAAW,UAAU,CAAC;QAGhC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAIxC,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAY;QAApB,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC;aACjC,SAAS,CAAC,UAAC,IAAU;YACpB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,gCAAgC,CAAC;YAC9E,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,EACD,UAAC,GAAsB;YACrB,uBAAuB;YACvB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR,UAAS,EAAO;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACpB,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI;SACrC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IAClC,CAAC;IAED,mCAAU,GAAV;QAAA,iBAoBC;QAnBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,GAAG,IAAI,6DAAI,EAAE,CAAC;QACtB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEhD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC;aAClC,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QACtD,CAAC,EACG,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;QACpE,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IA9DU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,yGAAqC;;SAEtC,CAAC;+EAS+B,4EAAU,EAA2B,wEAAc;YAC/D,6DAAiB,EAAuB,oEAAY;OAT5D,cAAc,CAgE1B;IAAD,qBAAC;CAAA;AAhE0B;;;;;;;;;;;;;;;;;;;;;;;;ACfgB;AAEI;AAGgB;AACZ;AAClB;AAES;AAK1C;IAIE,qBAAoB,UAAsB,EAAU,cAA6B,EAAU,KAAiB;QAAxF,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAAU,UAAK,GAAL,KAAK,CAAY;QAHpG,aAAQ,GAAG,KAAK,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QAGf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,EAAE;aACtB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,2BAAK,GAAL,UAAM,KAAwB;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACzI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,oCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC5H,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,mCAAa,GAAb,UAAc,KAAwB;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACjJ,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACrI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC3I,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,gCAAU,GAAV,UAAW,UAAU;QACjB,IAAM,SAAS,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAC/D,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAE,CAAC;IAC7E,CAAC;IAED,mCAAa,GAAb;QACI,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzC,OAAO,mCAAM,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAU,GAAV;QACI,OAAO,mCAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,iCAAW,GAAX;QACI,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAnEU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKgC,sDAAU,EAA0B,4DAAa,EAAiB,+DAAU;OAJjG,WAAW,CAqEvB;IAAD,kBAAC;CAAA;AArEuB;;;;;;;;;;;;;;;;;;;;;ACdmB;AACI;AACgB;AACZ;AAcnD;IAIE,wBAAoB,KAAiB,EAAU,cAA6B;QAAxD,UAAK,GAAL,KAAK,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAF5E,gBAAW,GAAG,EAAE,CAAC;QAGf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,EAAE;aACpB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,gCAAO,GAAP,UAAQ,QAAgB;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC5H,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACpH,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,iCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;aACnG,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAa,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;aACvG,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAU,GAAV,UAAW,IAAU;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAO,IAAI,CAAC,cAAc,CAAC,qBAAqB;YACpE,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAClD,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,kCAAS,GAAT,UAAU,UAAkB;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAChI,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,kCAAS,GAAT,UAAU,EAAU;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,WAAW,EAAE,IAAI,CAAC,SAAS,CAAE,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACzH,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,sCAAa,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CACpB,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC;aACzE,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,iCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;aACrG,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAY,GAAZ,UAAa,MAAc;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACvH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAkB,GAAlB,UAAmB,mBAA2B;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAClJ,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAU,GAAV,UAAW,KAAyB;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC3H,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC5H,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC5H,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,sCAAa,GAAb,UAAc,KAA6B;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACtI,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAkB,GAAlB,UAAmB,KAA6B;QAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACnI,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,0CAAiB,GAAjB,UAAkB,KAA6B;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACnI,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAyB;QAChC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACzH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAkB,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1I,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,4CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAkB,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,EAAE,IAAI,CAAC,WAAW,CAAC;aACzH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,8CAAqB,GAArB,UAAsB,eAAgC;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAkB,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1J,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,mDAA0B,GAA1B,UAA2B,KAAwB;QACjD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACpI,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAhIU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK2B,+DAAU,EAA0B,4DAAa;OAJjE,cAAc,CAiI1B;IAAD,qBAAC;CAAA;AAjI0B;;;;;;;;;;;;;;;;;;;;ACjBgB;AACD;AACW;AAErD,gEAAU,EAAE;AACZ;IASI;QAFY,SAAI,GAAY,KAAK,CAAC;QAG9B,IAAI,CAAC,IAAI,GAAG,IAAI,kEAAM,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,yCAAoB,GAApB,UAAqB,KAAe;QAChC,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,oCAAe,GAAf,UAAgB,IAAY;QAChC,IAAG,IAAI,IAAI,OAAO,EAAC;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,iBAAiB,CAAC;SAC5B;aACI,IAAG,IAAI,IAAI,eAAe,EAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,iCAAiC,CAAC;SAC5C;aACI,IAAI,IAAI,IAAI,QAAQ,EAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;aACI,IAAI,IAAI,IAAI,sBAAsB,EAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,OAAO,yBAAyB,CAAC;SACpC;aACG;YACA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;IACL,CAAC;IA7CW;QAAX,+CAAU;;6CAAiB;IAChB;QAAX,+CAAU;wEAAO,kEAAM;4CAAC;IACb;QAAX,+CAAU;;+CAAkB;IACjB;QAAX,+CAAU;;gDAAmB;IAClB;QAAX,+CAAU;;6DAAgC;IAC/B;QAAX,+CAAU;;sDAAyB;IACxB;QAAX,+CAAU;;4CAAuB;IAkB1B;QAAP,2CAAM;;;;qDAqBN;IACL,iBAAC;CAAA;AA/CsB;;;;;;;;;;;;ACLvB,oCAAoC,oBAAoB,+BAA+B,8BAA8B,KAAK,gBAAgB,4EAA4E,KAAK,+CAA+C,mlB;;;;;;;;;;;ACA1Q,k0DAAk0D,0PAA0P,2UAA2U,olBAAolB,mCAAmC,eAAe,yFAAyF,OAAO,iCAAiC,aAAa,sjC;;;;;;;;;;;;;;;;;;;;;;;ACAzmG;AACiB;AACN;AACO;AAChB;AAEI;AACR;AACQ;AAQxD;IAQE,yBAAmB,YAA0B,EAAU,eAA+B,EAC5E,OAA0B,EAAU,YAA0B;QADrD,iBAAY,GAAZ,YAAY,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAC5E,YAAO,GAAP,OAAO,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAPxE,eAAU,GAAW,YAAY,CAAC;QAGlC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAI/C,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAED,mCAAS,GAAT;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC;aACrC,SAAS,CAAC,UAAC,IAAY;YACtB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,kCAAkC,CAAC;QAC5F,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC;QAC5E,CAAC,CACE,CAAC;IACR,CAAC;IAED,oCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACtB,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;IACpC,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAkBC;QAjBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,MAAM,GAAG,IAAI,iEAAM,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACxC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC;aACtC,SAAS,CAAC,UAAC,IAAY;YACtB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QACzD,CAAC,EACG,UAAC,GAAsB;YACnB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACtE,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;IACjC,CAAC;IA5DU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,4GAAsC;;SAEvC,CAAC;+EASiC,gFAAY,EAA2B,wEAAc;YACnE,6DAAiB,EAAwB,oEAAY;OAT7D,eAAe,CA6D3B;IAAD,sBAAC;CAAA;AA7D2B;;;;;;;;;;;;AChB5B,oCAAoC,oBAAoB,+BAA+B,8BAA8B,KAAK,gBAAgB,4EAA4E,KAAK,+CAA+C,moB;;;;;;;;;;;ACA1Q,u5DAAu5D,2OAA2O,6VAA6V,gpBAAgpB,mCAAmC,eAAe,yFAAyF,OAAO,iCAAiC,sBAAsB,omC;;;;;;;;;;;;;;;;;;;;;;;ACA7uG;AACQ;AACf;AACA;AACP;AAEb;AACQ;AAQxD;IAQE,kCAAmB,qBAA4C,EAAU,eAA+B,EAC9F,OAA0B,EAAU,YAA0B;QADrD,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAC9F,YAAO,GAAP,OAAO,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAPxE,eAAU,GAAW,qBAAqB,CAAC;QAG3C,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAI9D,IAAI,CAAC,mBAAmB,GAAG,IAAI,wDAAS,CAAC;YACvC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR;IAEA,CAAC;IAED,qDAAkB,GAAlB,UAAmB,IAAY;QAA/B,iBAYC;QAXC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC;aACxC,SAAS,CAAC,UAAC,IAAqB;YAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,GAAO,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,SAAE,IAAI,EAAC,CAAC;YACrG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,2CAA2C,CAAC,CAAC;QAChG,CAAC,EACD,UAAC,GAAsB;YACrB,+BAA+B;YAC/B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wDAAwD,CAAC;QACrF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAmB,GAAnB,UAAoB,EAAO;QACzB,IAAI,CAAC,qBAAqB,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;QAC/F,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YAC/B,mBAAmB,EAAE,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI;SACtE,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,wBAAwB,CAAC;IAC7C,CAAC;IAED,wDAAqB,GAArB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,eAAe,GAAG,IAAI,4EAAe,EAAE,CAAC;QAC5C,eAAe,CAAC,EAAE,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,EAAE,CAAC;QACnE,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,eAAe,CAAC;aACxD,SAAS,CAAC,UAAC,IAAqB;YAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACvD,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAClE,CAAC,EACG,UAAC,GAAsB;YACnB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAChF,CAAC,CACJ,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC;IAC1C,CAAC;IA1DU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,uIAA+C;;SAEhD,CAAC;+EAS0C,2FAAqB,EAA2B,wEAAc;YACrF,6DAAiB,EAAwB,oEAAY;OAT7D,wBAAwB,CA2DpC;IAAD,+BAAC;CAAA;AA3DoC;;;;;;;;;;;;ACfrC,+DAA+D,mJ;;;;;;;;;;;ACA/D,8C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yGAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA;AAAuD;AAEvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,kCAAkC,EAAE;IACnE,EAAE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,iDAAiD,EAAE;CACxF,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;ACTzE,+DAA+D,+H;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAGE;QAFA,UAAK,GAAG,WAAW,CAAC;IAIpB,CAAC;IAED,+BAAQ,GAAR;IAEA,CAAC;IATU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;;OACW,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACO;AAElB;AACoC;AACpC;AACI;AAC2B;AAC7B;AACiB;AACA;AACZ;AACY;AACZ;AACQ;AACJ;AA0B1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,+FAAsB;gBACtB,+EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,8DAAiB;gBACjB,4DAAgB;gBAChB,oEAAc;gBACd,2DAAO;gBACP,+DAAW;gBACX,0FAAoB;gBACpB,+EAAgB;gBAChB,mEAAY;gBACZ,4EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAE,OAAO,EAAE,sEAAW,CAAC,UAAU,EAAE,CAAC;aACpF;YACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;YACjC,SAAS,EAAE;gBACT,6DAAiB;aAClB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACzCtB;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHwC;AACM;AACsB;AACZ;AACN;AACe;AACE;AACyB;AAC3B;AACX;AAcvD;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAZhC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iFAAkB,EAAE,qEAAc,EAAE,yGAA0B,EAAE;YAC/E,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,4DAAgB;gBAChB,mEAAY;gBACZ,+DAAO;aACR;YACD,SAAS,EAAE,CAAC,+EAAU,EAAE,6DAAiB,CAAC;SAC3C,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;ACvBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEc;AACZ;AACoC;AAE7F,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,iFAAkB;QAE7B,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,yGAA0B,EAAE;SACnE;KACJ;CACJ,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;ACnB1E,+DAA+D,uK;;;;;;;;;;;ACA/D,2Y;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;IAClD,CAAC;IANU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,8HAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAQ9B;IAAD,yBAAC;CAAA;AAR8B;;;;;;;;;;;;ACP/B,uCAAuC,oBAAoB,qBAAqB,KAAK,qBAAqB,yBAAyB,KAAK,+CAA+C,miB;;;;;;;;;;;ACAvL,4oCAA4oC,wGAAwG,KAAK,2BAA2B,MAAM,QAAQ,0BAA0B,2OAA2O,KAAK,MAAM,8nB;;;;;;;;;;;;;;;;;;;;;;ACAv+C;AACP;AACK;AACzB;AACO;AAGC;AAQxD;IAKE,oCAAmB,UAAsB,EAAU,OAA0B,EACnE,WAAwB,EAAS,YAA0B;QADlD,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QACnE,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAHrE,cAAS,GAAY,KAAK,CAAC;QAIzB,IAAI,CAAC,qBAAqB,GAAG,IAAI,wDAAS,CAAC;YACzC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR;IACA,CAAC;IAED,sDAAiB,GAAjB;QAAA,iBAgBC;QAfC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aACzD,SAAS,CAAC,UAAC,IAAI;YACd,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;YACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sDAAsD,CAAC;QACnF,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAc,GAAd;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC;aACpC,SAAS,CAAC,UAAC,IAAc;YACxB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;gBAClC,KAAK,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK;aAClC,CAAC,CAAC;QACP,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACP,CAAC;IAtDU,0BAA0B;QANtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,sJAAiD;;SAElD,CAAC;+EAM+B,sFAAU,EAAmB,6DAAiB;YACtD,kEAAW,EAAuB,oEAAY;OAN1D,0BAA0B,CAwDtC;IAAD,iCAAC;CAAA;AAxDsC;;;;;;;;;;;;ACfvC,uCAAuC,oBAAoB,qBAAqB,KAAK,qBAAqB,yBAAyB,SAAS,+CAA+C,ue;;;;;;;;;;;ACA3L,0wBAA0wB,mIAAmI,kBAAkB,0IAA0I,MAAM,uxDAAuxD,MAAM,oI;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnwF;AAChC;AAE+B;AACW;AAE5B;AACY;AACC;AACK;AACzB;AACQ;AASxD;IASE,wBAAoB,OAAe,EAAU,kBAAqC,EACzE,gBAAkC,EAAU,YAAyB,EACrE,UAAsB,EAAU,OAA0B,EAAS,YAA0B;QAFlF,YAAO,GAAP,OAAO,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QACzE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QACrE,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAClG,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC,EAEtC,CAAC,CAAC;IACL,CAAC;IAEH,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAEK,8BAAK,GAAX;;;;;;;wBACG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBACjB,KAAK,GAAG,IAAI,8EAAiB,EAAE,CAAC;wBACpC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBACtD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBAEtD,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;iCACjC,SAAS,CAAC,UAAC,IAAI;gCACd,IAAG,IAAI,EAAC;oCACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oCACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oCAC9C,IAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAC;wCAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;wCACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wCACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wCAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;wCAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wCACxC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wCACnC;;2CAEG;wCACH,IAAI,oBAAoB,GAAG,KAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wCAC5F,IAAG,oBAAoB,EAAC;4CACtB,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;yCAC/C;6CACG;4CACF,IAAI,KAAK,GAAU,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4CAClF,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4CACnB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;yCAChC;qCACF;yCACG;wCACF,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6EAA6E,CAAC,CAAC;qCACxG;iCACF;4BACH,CAAC,EACD,UAAC,GAAsB;gCACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gCACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;gCAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;4BACvF,CAAC,CACF;;wBAnCD,SAmCC,CAAC;wBAEF,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;6BAC9C,SAAS,CAAC,UAAC,IAA0B;wBAEtC,CAAC,CAAC,CAAC;;;;;KAEJ;IA7E8B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;wEAAqB,wDAAU;8DAAC;IAC/B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;wEAAsB,wDAAU;+DAAC;IAPpD,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kHAAqC;;SAEtC,CAAC;+EAU6B,sDAAM,EAA8B,gGAAiB;YACvD,qFAAgB,EAAwB,kEAAW;YACzD,sFAAU,EAAmB,6DAAiB,EAAuB,qEAAY;OAX3F,cAAc,CAqF1B;IAAD,qBAAC;CAAA;AArF0B;;;;;;;;;;;;;;;;;;;;;;;ACpBgB;AAEI;AAGgB;AACZ;AAClB;AAMjC;IAIE,qBAAoB,cAA6B,EAAU,KAAiB;QAAxD,mBAAc,GAAd,cAAc,CAAe;QAAU,UAAK,GAAL,KAAK,CAAY;QAHpE,aAAQ,GAAG,KAAK,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QAGf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,EAAE;aACtB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,2BAAK,GAAL,UAAM,KAAwB;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACzI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACrI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC3I,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,gCAAU,GAAV,UAAW,UAAU;QACjB,IAAM,SAAS,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAC/D,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAE,CAAC;IAC7E,CAAC;IAED,mCAAa,GAAb;QACI,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzC,OAAO,mCAAM,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAU,GAAV;QACI,OAAO,mCAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,iCAAW,GAAX;QACI,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAzDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKoC,4DAAa,EAAiB,+DAAU;OAJjE,WAAW,CA2DvB;IAAD,kBAAC;CAAA;AA3DuB;;;;;;;;;;;;ACbxB,+DAA+D,mK;;;;;;;;;;;ACA/D,uD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8HAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;;;;;;;ACPQ;AAG3C;IADA;QAEW,cAAS,GAAW,wBAAwB,CAAC;QAC7C,iBAAY,GAAW,yBAAyB,CAAC;QACxD,kEAAkE;QAClE,0DAA0D;QAC1D,2DAA2D;QACpD,uBAAkB,GAAW,6BAA6B,CAAC;QAC3D,iCAA4B,GAAW,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEnF,gBAAW,GAAW,0BAA0B,CAAC;QACjD,0BAAqB,GAAW,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QAErE,qBAAgB,GAAW,sBAAsB,CAAC;QAClD,+BAA0B,GAAW,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC1F,CAAC;IAdY,aAAa;QADzB,gEAAU,EAAE;OACA,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;;;;;;ACA1B;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACXsD;AAIvD;IAAwC,4EAAW;IAclD;QAAA,YACC,iBAAO,SAMP;QALA,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;IACtB,CAAC;IACF,yBAAC;AAAD,CAAC,CAtBuC,mEAAW,GAsBlD;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;IAAA;IAOA,CAAC;IAHG,6BAAc,GAAd,UAAe,IAAY;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;IAAA;IAOA,CAAC;IAHG,2BAAU,GAAV,UAAW,IAAY;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;ACHD,+DAA+D,mJ;;;;;;;;;;;ACA/D,iD;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;ACJ9B;AAAA;AAAA;IAAA;IAmBA,CAAC;IAAD,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;ACHD,4CAA4C,2BAA2B,+BAA+B,sBAAsB,kBAAkB,cAAc,eAAe,EAAE,+CAA+C,2kB;;;;;;;;;;;ACA5N,+vCAA+vC,aAAa,oiBAAoiB,sBAAsB,oWAAoW,iBAAiB,wQAAwQ,qiCAAqiC,oCAAoC,eAAe,oDAAoD,OAAO,qCAAqC,oCAAoC,MAAM,QAAQ,mCAAmC,qCAAqC,6BAA6B,qCAAqC,yBAAyB,qCAAqC,gDAAgD,iFAAiF,sPAAsP,uDAAuD,4BAA4B,gbAAgb,gCAAgC,gDAAgD,uZAAuZ,mDAAmD,kBAAkB,MAAM,QAAQ,iBAAiB,gMAAgM,oBAAoB,iwC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn8K;AACL;AACvB;AACoB;AAEE;AACrB;AAGmB;AAEkB;AAEL;AACxB;AACiB;AAQzE;IAOE,8BAAmB,gBAAkC,EAAU,cAA6B,EAClF,kBAAqC,EAAU,mBAAuC,EACvF,YAA0B,EAAS,qBAA4C,EAC9E,OAA0B,EAAS,YAA0B,EAC7D,UAAsB;QAJb,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAe;QAClF,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvF,iBAAY,GAAZ,YAAY,CAAc;QAAS,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9E,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAC7D,eAAU,GAAV,UAAU,CAAY;QAPhC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAMnB,CAAC;IAErC,qDAAsB,GAAtB;QAAA,iBASC;QARC,IAAI,OAAO,GAAG,IAAI,oEAAoB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAEjG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,sBAAsB,EAAE,cAAI;YACjD,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACnE,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;aAC9C,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAC/B,CAAC;IAED,kDAAmB,GAAnB,UAAoB,EAAU;QAA9B,iBAiBC;QAhBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACrE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7D,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,mDAAmD,CAAC;QAChF,CAAC,CACF,CAAC;IACN,CAAC;IAED,gDAAiB,GAAjB,UAAkB,EAAU;QAA5B,iBAiBC;QAhBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,iDAAiD,CAAC;QAC9E,CAAC,CACF,CAAC;IACN,CAAC;IAED,kDAAmB,GAAnB,UAAoB,EAAU;QAA9B,iBAgBC;QAfC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,mDAAmD,CAAC;QAChF,CAAC,CACJ,CAAC;IACJ,CAAC;IAvFU,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,gIAA2C;;SAE5C,CAAC;+EAQqC,6FAAgB,EAA0B,4DAAa;YAC9D,8EAAiB,EAA+B,gFAAkB;YACzE,gFAAY,EAAgC,kGAAqB;YACrE,6DAAiB,EAAuB,qEAAY;YACjD,uFAAU;OAXrB,oBAAoB,CAwFhC;IAAD,2BAAC;CAAA;AAxFgC;;;;;;;;;;;;ACvBjC,6BAA6B,8BAA8B,kBAAkB,mBAAmB,yBAAyB,OAAO,uBAAuB,oBAAoB,OAAO,yBAAyB,uBAAuB,qBAAqB,2BAA2B,qBAAqB,8BAA8B,OAAO,+BAA+B,yCAAyC,OAAO,+CAA+C,2+B;;;;;;;;;;;ACA1c,8GAA8G,0+G;;;;;;;;;;;;;;;;;;;;ACA5D;AACa;AACR;AACd;AAOzC;IAIE,4BAAmB,UAAsB,EAAU,WAAwB,EAAU,OAAe;QAAjF,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAEzG,qCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACzC,CAAC;IAdU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;;SAE1C,CAAC;+EAK+B,qEAAU,EAAuB,kEAAW,EAAmB,sDAAM;OAJzF,kBAAkB,CAgB9B;IAAD,yBAAC;CAAA;AAhB8B;;;;;;;;;;;;ACV/B,+DAA+D,2J;;;;;;;;;;;ACA/D,+C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,uL;;;;;;;;;;;ACA/D,0D;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,6CAAQ,GAAR;IACA,CAAC;IALU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,kJAAiD;;SAElD,CAAC;;OACW,0BAA0B,CAOtC;IAAD,iCAAC;CAAA;AAPsC;;;;;;;;;;;;ACPvC,6BAA6B,gCAAgC,SAAS,mBAAmB,gCAAgC,SAAS,sBAAsB,oBAAoB,+BAA+B,8BAA8B,KAAK,gBAAgB,4EAA4E,KAAK,+CAA+C,2yB;;;;;;;;;;;ACA9X,wkEAAwkE,sBAAsB,48CAA48C,wBAAwB,MAAM,QAAQ,uBAAuB,gbAAgb,YAAY,2FAA2F,WAAW,wNAAwN,iPAAiP,+XAA+X,gTAAgT,gBAAgB,wnBAAwnB,mCAAmC,eAAe,2DAA2D,OAAO,qCAAqC,oCAAoC,MAAM,QAAQ,mCAAmC,qCAAqC,6BAA6B,qCAAqC,yBAAyB,qCAAqC,oBAAoB,ikC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCruM;AACP;AAEP;AACQ;AAEC;AACjB;AAEkB;AACJ;AAEkB;AACtC;AACC;AACgC;AAGxB;AACiB;AAEzE;IAAA;IAGA,CAAC;IAAD,WAAC;AAAD,CAAC;;AAEM,IAAM,KAAK,GAAW;IAC3B;QACI,IAAI,EAAC,WAAW;QAChB,KAAK,EAAC,WAAW;KACnB;IACD;QACI,IAAI,EAAC,YAAY;QACjB,KAAK,EAAC,YAAY;KACpB;IACD;QACE,IAAI,EAAC,eAAe;QACpB,KAAK,EAAC,eAAe;KACvB;CACH,CAAC;AAQF;IAeE,sBAAoB,mBAAuC,EAAU,kBAAqC,EACjG,qBAA4C,EAAU,cAA6B,EACnF,gBAAkC,EAAS,YAA0B,EACpE,OAA0B,EAAU,UAAsB;QAHhD,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QACjG,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,mBAAc,GAAd,cAAc,CAAe;QACnF,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QACpE,YAAO,GAAP,OAAO,CAAmB;QAAU,eAAU,GAAV,UAAU,CAAY;QAbpE,cAAS,GAAW,KAAK,CAAC;QAG1B,eAAU,GAAW,iBAAiB,CAAC;QAIvC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;QAMrD,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC;YACnC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5D,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACrB,iCAAiC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,6CAAsB,GAAtB;QAAA,iBASC;QARC,IAAI,OAAO,GAAG,IAAI,oEAAoB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAEjG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,sBAAsB,EAAE,cAAI;YACjD,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACnE,CAAC;IAED,+BAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,gBAAgB;QACd,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;aAChD,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACD,gDAAgD;QAClD,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,sCAAe,GAAf;QAAA,iBAGC;QAFC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,KAAK,KAAI,CAAC,aAAa,EAAjC,CAAiC,CAAC,CAAC;QACtE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,mCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,qCAAc,GAAd;QAAA,iBAiCC;QAhCC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,WAAW,GAAG,IAAI,kFAAmB,EAAE,CAAC;QAC5C,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC5D,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE1D,IAAI,KAAK,GAAG,IAAI,0EAAU,EAAE,CAAC;QAC7B,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1B,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;QACjC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAC/E,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAC9D,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QAChF,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAC9D,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAC7C,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACnE,WAAW,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QACvC,WAAW,CAAC,UAAU,GAAG,aAAa,CAAC;QACvC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;QAEjC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,WAAW,CAAC;aACjD,SAAS,CAAE;YACV,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAC,CAAC,CAAC;YAC9D,uDAAuD;QACzD,CAAC,EACC,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kDAAkD,CAAC;QAC/E,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAe,GAAf,UAAgB,EAAU;QACxB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAC5B,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS;YACnE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ;YACjE,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe;YAClE,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW;YACjE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM;YAChD,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ;YACjE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM;SACjD,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;IACzC,CAAC;IAED,wCAAiB,GAAjB;QAAA,iBA+BC;QA9BC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC5D,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAE1D,IAAI,KAAK,GAAG,IAAI,0EAAU,EAAE,CAAC;QAC7B,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1B,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,GAAG,KAAK,CAAC;QACvD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QACrG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACtG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QAEpF,IAAI,QAAQ,GAAW,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAClE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAC,CAAC,CAAC;YAC9D,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QACpD,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6CAA6C,CAAC;QAC1E,CAAC,CACF,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;IACxC,CAAC;IAED,mCAAY,GAAZ,UAAa,IAAc;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,KAAK,GAAG,IAAI,kEAAM,EAAE,CAAC;QACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,OAAO,KAAK,CAAC;IACf,CAAC;IAhKU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,wGAAmC;YACnC,eAAe,EAAE,qEAAuB,CAAC,MAAM;;SAEhD,CAAC;+EAgByC,gFAAkB,EAA8B,8EAAiB;YAC1E,kGAAqB,EAA0B,6DAAa;YACjE,8FAAgB,EAAuB,qEAAY;YAC3D,8DAAiB,EAAsB,uFAAU;OAlBzD,YAAY,CAkKxB;IAAD,mBAAC;CAAA;AAlKwB;;;;;;;;;;;;AChDzB,uCAAuC,oBAAoB,qBAAqB,KAAK,qBAAqB,yBAAyB,qBAAqB,KAAK,+CAA+C,mgB;;;;;;;;;;;ACA5M,6/CAA6/C,MAAM,yI;;;;;;;;;;;;;;;;;;;;;;;;;;ACA17C;AAChC;AAE+B;AACW;AAE5B;AACY;AACC;AACd;AACN;AACQ;AASxD;IAME,wBAAoB,OAAe,EAAU,kBAAqC,EACzE,gBAAkC,EAAU,YAAyB,EACrE,UAAsB,EAAU,OAA0B,EAAS,YAA0B;QAFlF,YAAO,GAAP,OAAO,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;QACzE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QACrE,eAAU,GAAV,UAAU,CAAY;QAAU,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAClG,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAEH,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAEK,8BAAK,GAAX;;;;;;;wBACG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBACjB,KAAK,GAAG,IAAI,8EAAiB,EAAE,CAAC;wBACpC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBACtD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;wBAEtD,qBAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;iCACjC,SAAS,CAAC,UAAC,IAAI;gCACd,IAAG,IAAI,EAAC;oCACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oCACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oCAC9C,IAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAC;wCAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;wCACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wCACxC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wCAChD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;wCAC9C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wCACxC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;wCACnC;;2CAEG;wCAEH,IAAI,KAAK,GAAU,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wCAClF,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;wCAC5B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;qCAChC;yCACG;wCACF,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6EAA6E,CAAC,CAAC;qCACxG;iCACF;4BACH,CAAC,EACD,UAAC,GAAsB;gCACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gCACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;gCAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;4BACvF,CAAC,CACF;;wBA9BD,SA8BC,CAAC;wBAEF,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;6BAC9C,SAAS,CAAC,UAAC,IAA0B;wBAEtC,CAAC,CAAC,CAAC;;;;;KAEJ;IA9DU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,8GAAqC;;SAEtC,CAAC;+EAO6B,sDAAM,EAA8B,gGAAiB;YACvD,qFAAgB,EAAwB,kEAAW;YACzD,+DAAU,EAAmB,6DAAiB,EAAuB,qEAAY;OAR3F,cAAc,CAgE1B;IAAD,qBAAC;CAAA;AAhE0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBc;AACM;AACsB;AAClB;AACwB;AACnB;AACH;AACa;AAEA;AAEnB;AACoD;AAC/B;AACD;AACoB;AAC5B;AACY;AACd;AACH;AACC;AACoB;AACK;AACtB;AACI;AACC;AACL;AACD;AACG;AACiC;AAC1C;AAET;AAsC1C;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QApC5B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iFAAkB;gBAClB,+DAAY;gBACZ,uFAAoB;gBACpB,gHAA4B;gBAC5B,oGAAwB;gBACxB,wEAAe;gBACf,oFAAqB,EAAE,sEAAc,EAAE,yEAAe,EAAE,0GAA0B;aAAC;YACrF,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAgB;gBAChB,kEAAmB;gBACnB,kEAAmB;gBACnB,0DAAW;gBACX,oEAAc;gBACd,mEAAY;gBACZ,4DAAO;aACR;YACD,SAAS,EAAE;gBACT,iFAAkB;gBAClB,+EAAgB;gBAChB,qEAAW;gBACX,uFAAgB;gBAChB,4FAAqB;gBACrB,sEAAU;gBACV,6DAAiB;gBACjB,0EAAY;gBACZ,2EAAY;gBACZ,sEAAU;gBACV,gEAAU;gBACV,sDAAa;aACd;YACD,OAAO,EAAC,CAAC,wEAAe,EAAE,4DAAgB;gBACxC,oFAAqB,CAAC;SACzB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtE7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACc;AAClB;AACwB;AAEwB;AAC1C;AAEzD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,iFAAkB;QAE7B,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+DAAY,EAAE;YACjD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uFAAoB,EAAE;YAC1D,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,+GAA4B,EAAE;SAC5E;KACJ;CACJ,CAAC;AAEK,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;ACvBtB;AAMpD;IAAA;IAcA,CAAC;IAZC,yCAAS,GAAT,UAAU,YAAkC,EAAE,UAAe;QAC3D,IAAG,UAAU,IAAI,IAAI;YACjB,OAAO,YAAY,CAAC;QAExB,OAAO,YAAY,CAAC,MAAM,CAAC,UAAS,WAAW;YAC7C,OAAO,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,UAAS,MAAM;gBACjD,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC;uBAC1E,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC;YAC1E,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAZU,qBAAqB;QAHjC,0DAAI,CAAC;YACJ,IAAI,EAAE,mBAAmB;SAC1B,CAAC;OACW,qBAAqB,CAcjC;IAAD,4BAAC;CAAA;AAdiC;;;;;;;;;;;;;;;;;;ACNkB;AAMpD;IAAA;IAYA,CAAC;IAXC,mCAAS,GAAT,UAAU,YAAkC,EAAE,UAAe;QAC3D,IAAG,UAAU,IAAI,IAAI;YACjB,OAAO,YAAY,CAAC;QAExB,OAAO,YAAY,CAAC,MAAM,CAAC,UAAS,WAAW;YAC7C,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC7F,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBACxF,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC9E,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,eAAe;QAH3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;;;;;ACN5B,4CAA4C,2BAA2B,+BAA+B,6CAA6C,2d;;;;;;;;;;;ACAnJ,0yBAA0yB,8kBAA8kB,wBAAwB,MAAM,QAAQ,uBAAuB,04CAA04C,iBAAiB,2QAA2Q,klCAAklC,mCAAmC,eAAe,kEAAkE,OAAO,iDAAiD,oCAAoC,MAAM,QAAQ,mCAAmC,6CAA6C,6BAA6B,6CAA6C,yBAAyB,6CAA6C,oBAAoB,6FAA6F,oBAAoB,yFAAyF,2CAA2C,yFAAyF,2CAA2C,0FAA0F,yCAAyC,kOAAkO,sBAAsB,wbAAwb,qHAAqH,sBAAsB,0qBAA0qB,kBAAkB,MAAM,QAAQ,iBAAiB,4OAA4O,uYAAuY,qbAAqb,8kC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlmP;AACpB;AACG;AAGvB;AAEqB;AACf;AACgB;AACrB;AACgC;AAExB;AACiB;AAQzE;IASE,sCAAoB,kBAAqC,EAAU,cAA6B,EACvF,gBAAkC,EAAU,mBAAuC,EAClF,OAA0B,EAAS,YAA0B,EAC7D,UAAsB;QAHZ,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAU,mBAAc,GAAd,cAAc,CAAe;QACvF,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAoB;QAClF,YAAO,GAAP,OAAO,CAAmB;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAC7D,eAAU,GAAV,UAAU,CAAY;QANhC,MAAC,GAAW,CAAC,CAAC;QACd,eAAU,GAAU,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;QAMzD,IAAI,CAAC,sBAAsB,GAAG,IAAI,wDAAS,CAAC;YAC1C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,GAAG,IAAI,wDAAS,CAAC;YACzC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAEH,6DAAsB,GAAtB;QAAA,iBAYC;QAXC,IAAI,OAAO,GAAG,IAAI,oEAAoB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAEjG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,sBAAsB,EAAE,cAAI;YACjD,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAChD,KAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAC5D,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE;aAC9C,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,2CAA2C,CAAC;QACxE,CAAC,CACA,CAAC;QACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,mEAA4B,GAA5B;QAAA,iBAgBC;QAfC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEhE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,8DAA8D,CAAC;QAC3F,CAAC,CACA,CAAC;IACR,CAAC;IAED,wDAAiB,GAAjB;QAAA,iBAoBC;QAnBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAEpB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEjE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,YAAY,CAAC;QAExD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,iDAAiD,CAAC;QAC9E,CAAC,CACF,CAAC;IACN,CAAC;IAED,8DAAuB,GAAvB,UAAwB,EAAU;QAAlC,iBAkBC;QAjBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,IAAI,EAAE,CAAC;QAChE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAE5E,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC;QAC5E,CAAC,CACA,CAAC;IACR,CAAC;IAED,wDAAiB,GAAjB,UAAkB,EAAU;QAA5B,iBAkBC;QAjBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7E,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;QACtD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAExE,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;aACxE,SAAS,CAAC;YACT,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EACD,UAAC,GAAsB;YACrB,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,iDAAiD,CAAC;QAC9E,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,mDAAY,GAAZ,UAAa,IAAc;QACzB,IAAI,KAAK,GAAG,IAAI,kEAAM,EAAE,CAAC;QACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,0DAAmB,GAAnB,UAAoB,EAAU;QAC5B,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IAC/E,CAAC;IA/IU,4BAA4B;QANxC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,wJAAmD;;SAEpD,CAAC;+EAUwC,8EAAiB,EAA0B,4DAAa;YACrE,6FAAgB,EAA+B,gFAAkB;YACzE,6DAAiB,EAAuB,qEAAY;YACjD,uFAAU;OAZrB,4BAA4B,CAgJxC;IAAD,mCAAC;CAAA;AAhJwC;;;;;;;;;;;;;;;;;;;;;;;ACtBE;AAEI;AAGgB;AACZ;AAClB;AAMjC;IAIE,qBAAoB,cAA6B,EAAU,KAAiB;QAAxD,mBAAc,GAAd,cAAc,CAAe;QAAU,UAAK,GAAL,KAAK,CAAY;QAHpE,aAAQ,GAAG,KAAK,CAAC;QACzB,gBAAW,GAAG,EAAE,CAAC;QAGf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,EAAE;aACtB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,2BAAK,GAAL,UAAM,KAAwB;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACzI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACrI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,4BAA4B,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC3I,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,gCAAU,GAAV,UAAW,UAAU;QACjB,IAAM,SAAS,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAC/D,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAE,CAAC;IAC7E,CAAC;IAED,mCAAa,GAAb;QACI,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzC,OAAO,mCAAM,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAU,GAAV;QACI,OAAO,mCAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,iCAAW,GAAX;QACI,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACpC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAzDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKoC,4DAAa,EAAiB,+DAAU;OAJjE,WAAW,CA2DvB;IAAD,kBAAC;CAAA;AA3DuB;;;;;;;;;;;;;;;;;;;;;;ACbmB;AACoB;AAChB;AACI;AAKqB;AAKxE;IAIE,2BAAoB,KAAiB,EAAU,cAA6B,EACnE,gBAAkC;QADvB,UAAK,GAAL,KAAK,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QACnE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAH3C,gBAAW,GAAG,EAAE,CAAC;QAIf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,EAAE;aACtB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,+CAAmB,GAAnB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAkB,IAAI,CAAC,cAAc,CAAC,qBAAqB,GAAG,wBAAwB,EAAE,IAAI,CAAC,WAAW,CAAC;aACzH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,iDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAqB,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC;aACjI,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,4DAAgC,GAAhC,UAAiC,EAAU;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAqB,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,gCAAgC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC9J,IAAI,CAAC,4DAAK,CAAC,GAAG,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,4CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC;aAClH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,mDAAuB,GAAvB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,4BAA4B,EAAE,IAAI,CAAC,WAAW,CAAC;aACzH,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEO,uCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IA1CU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAK2B,+DAAU,EAA0B,4DAAa;YACjD,qFAAgB;OALhC,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;;;;;;;;;;;;;;;;;;;;;ACba;AACoB;AAChB;AACc;AAO7D;IAGE,4BAAoB,KAAiB,EAAU,cAA6B;QAAxD,UAAK,GAAL,KAAK,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAF5E,gBAAW,GAAG,EAAE,CAAC;QAGf,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,iBAAiB,EAAE,EAAE;aACtB,CAAC;SACH,CAAC;IACJ,CAAC;IAED,2CAAc,GAAd,UAAe,WAAgC;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAsB,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aACxJ,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,8CAAiB,GAAjB,UAAkB,WAA+B;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAqB,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;aAC1J,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,4CAAe,GAAf;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAqB,IAAI,CAAC,cAAc,CAAC,0BAA0B,GAAG,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC;aAC7H,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEO,wCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,wCAAW,GAAX;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;aAChF,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAnCU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI2B,+DAAU,EAA0B,4DAAa;OAHjE,kBAAkB,CAqC9B;IAAD,yBAAC;CAAA;AArC8B;;;;;;;;;;;;;;;;;;;;ACVY;AACD;AACW;AAErD,gEAAU,EAAE;AACZ;IASI;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,kEAAM,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,yCAAoB,GAApB,UAAqB,KAAe;QAChC,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,oCAAe,GAAf,UAAgB,IAAY;QAChC,IAAG,IAAI,IAAI,OAAO,EAAC;YACf,OAAO,OAAO,CAAC;SAClB;aACI,IAAG,IAAI,IAAI,eAAe,EAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,iCAAiC,CAAC;SAC5C;aACI,IAAI,IAAI,IAAI,QAAQ,EAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;aACI,IAAI,IAAI,IAAI,sBAAsB,EAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,OAAO,yBAAyB,CAAC;SACpC;aACG;YACA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;IACL,CAAC;IA7CW;QAAX,+CAAU;;6CAAiB;IAChB;QAAX,+CAAU;wEAAO,kEAAM;4CAAC;IACb;QAAX,+CAAU;;+CAAkB;IACjB;QAAX,+CAAU;;gDAAmB;IAClB;QAAX,+CAAU;;6DAAgC;IAC/B;QAAX,+CAAU;;sDAAyB;IACxB;QAAX,+CAAU;;4CAAe;IAmBlB;QAAP,2CAAM;;;;qDAoBN;IACL,iBAAC;CAAA;AA/CsB;;;;;;;;;;;;ACLvB,qCAAqC,qBAAqB,uBAAuB,KAAK,mBAAmB,gCAAgC,KAAK,+CAA+C,mhB;;;;;;;;;;;ACA7L,uLAAuL,aAAa,0BAA0B,yBAAyB,MAAM,0DAA0D,aAAa,2BAA2B,yBAAyB,MAAM,kEAAkE,cAAc,8BAA8B,yBAAyB,MAAM,2DAA2D,cAAc,yBAAyB,4C;;;;;;;;;;;;;;;;;ACA3jB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IALU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,4IAA+C;;SAEhD,CAAC;;OACW,wBAAwB,CAOpC;IAAD,+BAAC;CAAA;AAPoC;;;;;;;;;;;;;ACPrC;AAAA;AAAA;IAOI;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IAC7B,CAAC;IACL,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACXmD;AAET;AAEyC;AACb;AAGvE;IA4BI,YAAY;IAEZ;QACI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;QAEvC,IAAI,CAAC,kCAAkC,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,mCAAmC,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,qCAAqC,GAAG,EAAE,CAAC;QAChD,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;IAExC,CAAC;IAGS,sBAAI,gDAAsB;QAFpC,wCAAwC;aAE9B;YACN,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IAES,sBAAI,qDAA2B;aAA/B;YACN,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,qBAAW;gBACxC,IAAG,WAAW,CAAC,MAAM,IAAI,UAAU,EAAC;oBAChC,iBAAiB,IAAI,WAAW,CAAC,MAAM,CAAC;iBAC3C;YACL,CAAC,CAAC,CAAC;YACH,OAAO,iBAAiB,CAAC;QAC7B,CAAC;;;OAAA;IAEO,+CAAwB,GAAxB;QACJ,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAClC,CAAC;IAEO,gDAAyB,GAAzB,UAA0B,YAAkC;QAChE,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,WAAW,EAAvB,CAAuB,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAES,sBAAI,kDAAwB;aAA5B;YACN,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;QAC7C,CAAC;;;OAAA;IAEO,yDAAkC,GAAlC,UAAmC,YAAkC;QACzE,IAAI,CAAC,4BAA4B,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,WAAW,EAAvB,CAAuB,CAAC,CAAC;QACtF,OAAO,IAAI,CAAC,4BAA4B,CAAC;IAC7C,CAAC;IAES,sBAAI,2DAAiC;aAArC;YACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC;QACpD,CAAC;;;OAAA;IAEO,qDAA8B,GAA9B,UAA+B,YAAkC;QACrE,IAAI,CAAC,sBAAsB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,YAAY,EAAxB,CAAwB,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACvC,CAAC;IAES,sBAAI,uDAA6B;aAAjC;YACN,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;QAC9C,CAAC;;;OAAA;IAEO,mDAA4B,GAA5B,UAA6B,YAAkC;QACnE,IAAI,CAAC,wBAAwB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,eAAe,EAA3B,CAA2B,CAAC,CAAC;QACtF,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACzC,CAAC;IAES,sBAAI,qDAA2B;aAA/B;YACN,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC;QAChD,CAAC;;;OAAA;IAEO,+CAAwB,GAAxB,UAAyB,YAAkC;QAC/D,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,UAAU,EAAtB,CAAsB,CAAC,CAAC;QAC7E,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAES,sBAAI,iDAAuB;aAA3B;YACN,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;QAC5C,CAAC;;;OAAA;IAEO,gDAAyB,GAAzB,UAA0B,YAAkC;QAChE,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,WAAW,EAAvB,CAAuB,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAES,sBAAI,kDAAwB;aAA5B;YACN,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;QAC7C,CAAC;;;OAAA;IAEO,yDAAkC,GAAlC,UAAmC,YAAkC;QACzE,IAAI,CAAC,4BAA4B,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,WAAW,EAAvB,CAAuB,CAAC,CAAC;QACtF,OAAO,IAAI,CAAC,4BAA4B,CAAC;IAC7C,CAAC;IAES,sBAAI,2DAAiC;aAArC;YACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC;QACpD,CAAC;;;OAAA;IAEO,+CAAwB,GAAxB,UAAyB,YAAkC;QAC/D,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,UAAU,EAAtB,CAAsB,CAAC,CAAC;QAC7E,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAES,sBAAI,iDAAuB;aAA3B;YACN,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;QAC5C,CAAC;;;OAAA;IAEO,wDAAiC,GAAjC,UAAkC,YAAkC;QACxE,IAAI,CAAC,2BAA2B,GAAG,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,UAAU,EAAtB,CAAsB,CAAC,CAAC;QACpF,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC5C,CAAC;IAES,sBAAI,0DAAgC;aAApC;YACN,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC;QACnD,CAAC;;;OAAA;IAKS,sBAAI,sDAA4B;QAH1C,YAAY;QAEZ,mDAAmD;aACzC;YACN,OAAO,IAAI,CAAC,kCAAkC,CAAC;QACnD,CAAC;;;OAAA;IAES,sBAAI,6CAAmB;aAAvB;YACN,OAAO,IAAI,CAAC,yBAAyB,CAAC;QAC1C,CAAC;;;OAAA;IAED,2DAAoC,GAApC,UAAqC,YAAkC;QAAvE,iBAaC;QAZG,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,qBAAW;YAC5B,IAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,WAAW,EAAC;gBAC/C,IAAI,QAAQ,GAAG,IAAI,gGAAyB,EAAE,CAAC;gBAC/C,QAAQ,CAAC,cAAc,GAAG,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,GAAG,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACjG,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACjB,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACrC,QAAQ,CAAC,eAAe,IAAI,WAAW,CAAC,MAAM,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,uDAA6B;aAAjC;YACN,OAAO,IAAI,CAAC,mCAAmC,CAAC;QACpD,CAAC;;;OAAA;IAED,4DAAqC,GAArC,UAAsC,YAAkC;QAAxE,iBAkBC;QAjBG,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,qBAAW;YAC5B,IAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,YAAY,EAAC;gBAChD,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAM;oBAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;wBACrB,IAAG,IAAI,IAAI,eAAe,EAAC;4BACvB,IAAI,QAAQ,GAAG,IAAI,gGAAyB,EAAE,CAAC;4BAC/C,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;4BACnE,QAAQ,CAAC,KAAK,EAAE,CAAC;4BACjB,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;4BACrC,QAAQ,CAAC,eAAe,IAAI,WAAW,CAAC,MAAM,CAAC;4BAC/C,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBACjD;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,yDAA+B;aAAnC;YACN,OAAO,IAAI,CAAC,qCAAqC,CAAC;QACtD,CAAC;;;OAAA;IAED,8DAAuC,GAAvC,UAAwC,YAAkC;QAA1E,iBAkBC;QAjBG,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,qBAAW;YAC5B,IAAG,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,eAAe,EAAC;gBACnD,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAM;oBAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;wBACrB,IAAG,IAAI,IAAI,eAAe,EAAC;4BACvB,IAAI,QAAQ,GAAG,IAAI,gGAAyB,EAAE,CAAC;4BAC/C,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;4BACnE,QAAQ,CAAC,KAAK,EAAE,CAAC;4BACjB,QAAQ,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;4BACrC,QAAQ,CAAC,eAAe,IAAI,WAAW,CAAC,MAAM,CAAC;4BAC/C,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBACjD;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IA1NW;QAAX,+CAAU;;6DAA2C;IAE1C;QAAX,+CAAU;;+DAA6C;IAC5C;QAAX,+CAAU;;gEAA8C;IAC7C;QAAX,+CAAU;;kEAAgD;IAC/C;QAAX,+CAAU;;8DAA4C;IAC3C;QAAX,+CAAU;;+DAA6C;IAC5C;QAAX,+CAAU;;8DAA4C;IAG3C;QAAX,+CAAU;;sEAAoD;IACnD;QAAX,+CAAU;;sEAAoD;IACnD;QAAX,+CAAU;;qEAAmD;IAMlD;QAAX,+CAAU;wEAAe,mFAAkB;sDAAC;IACjC;QAAX,+CAAU;;2DAA2B;IAE1B;QAAX,+CAAU;;4EAAiE;IAChE;QAAX,+CAAU;;6EAAkE;IACjE;QAAX,+CAAU;;+EAAoE;IACnE;QAAX,+CAAU;;mEAAwD;IAuBzD;QAAT,6CAAQ;;;8DAER;IAES;QAAT,6CAAQ;;;mEAQR;IAEO;QAAP,2CAAM;;;;gEAEN;IAEO;QAAP,2CAAM;;;;iEAGN;IAES;QAAT,6CAAQ;;;gEAER;IAEO;QAAP,2CAAM;;;;0EAGN;IAES;QAAT,6CAAQ;;;yEAER;IAEO;QAAP,2CAAM;;;;sEAGN;IAES;QAAT,6CAAQ;;;qEAER;IAEO;QAAP,2CAAM;;;;oEAGN;IAES;QAAT,6CAAQ;;;mEAER;IAEO;QAAP,2CAAM;;;;gEAGN;IAES;QAAT,6CAAQ;;;+DAER;IAEO;QAAP,2CAAM;;;;iEAGN;IAES;QAAT,6CAAQ;;;gEAER;IAEO;QAAP,2CAAM;;;;0EAGN;IAES;QAAT,6CAAQ;;;yEAER;IAEO;QAAP,2CAAM;;;;gEAGN;IAES;QAAT,6CAAQ;;;+DAER;IAEO;QAAP,2CAAM;;;;yEAGN;IAES;QAAT,6CAAQ;;;wEAER;IAKS;QAAT,6CAAQ;;;oEAER;IAES;QAAT,6CAAQ;;;2DAER;IAiBS;QAAT,6CAAQ;;;qEAER;IAsBS;QAAT,6CAAQ;;;uEAER;IAzMQ,YAAY;QADxB,gEAAU,EAAE;;OACA,YAAY,CA+NxB;IAAD,mBAAC;CAAA;AA/NwB;;;;;;;;;;;;;;;;;;;;;ACRkB;AACiB;AACd;AAC0B;AAGxE;IAII,oBAAoB,eAA+B;QAAnD,iBASC;QATmB,oBAAe,GAAf,eAAe,CAAgB;QAC/C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,sDAAI,EAAE,CAAC;QACvB,oDAAO,CAAC;YACJ,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;iBAC1B,SAAS,CAAC,UAAC,IAAY;gBACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,mCAAW;aAAf;YACN,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAEO,4BAAO,GAAP,UAAQ,EAAU;QACtB,IAAI,IAAI,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QAC9C,IAAG,IAAI,IAAI,IAAI,EAAC;YACZ,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,+BAAU,GAAV,UAAW,IAAU;QACzB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;YACtB,IAAG,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAC;gBACrB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAhCW;QAAX,+CAAU;;6CAAe;IACd;QAAX,+CAAU;wEAAO,sDAAI;4CAAC;IAab;QAAT,6CAAQ;;;iDAER;IAEO;QAAP,2CAAM;;;;6CAMN;IAEO;QAAP,2CAAM;;+EAAkB,sDAAI;;gDAM5B;IAjCQ,UAAU;QADtB,gEAAU,EAAE;+EAK4B,qFAAc;OAJ1C,UAAU,CAkCtB;IAAD,iBAAC;CAAA;AAlCsB;;;;;;;;;;;;;;;;;;;;;ACNoB;AACiB;AAEU;AAEpB;AAGlD;IAII,sBAAoB,eAA+B;QAAnD,iBASC;QATmB,oBAAe,GAAf,eAAe,CAAgB;QAC/C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,0DAAM,EAAE,CAAC;QAC3B,oDAAO,CAAC;YACJ,KAAI,CAAC,eAAe,CAAC,aAAa,EAAE;iBAC/B,SAAS,CAAC,UAAC,IAAc;gBACtB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,sCAAY;aAAhB;YACN,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAEO,gCAAS,GAAT,UAAU,EAAU;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QAClE,IAAG,MAAM,IAAI,IAAI,EAAC;YACd,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,mCAAY,GAAZ,UAAa,MAAc;QAC/B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iBAAO;YAC3B,IAAG,OAAO,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAC;gBACxB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAhCW;QAAX,+CAAU;;oDAAsB;IACrB;QAAX,+CAAU;wEAAS,0DAAM;gDAAC;IAajB;QAAT,6CAAQ;;;oDAER;IAEO;QAAP,2CAAM;;;;iDAMN;IAEO;QAAP,2CAAM;;+EAAsB,0DAAM;;oDAMlC;IAjCQ,YAAY;QADxB,gEAAU,EAAE;+EAK4B,8EAAc;OAJ1C,YAAY,CAkCxB;IAAD,mBAAC;CAAA;AAlCwB;;;;;;;;;;;;;;;;;;;;ACRyC;AACmB;AACjC;AAEpD;IAMG;QAFY,uBAAkB,GAAG,EAAE,CAAC;QAGhC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,+CAAkB,GAAlB,UAAmB,QAAgB;QAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAM;YAC1B,IAAG,MAAM,CAAC,WAAW,EAAE,IAAI,QAAQ,EAAC;gBAChC,OAAO,IAAI,CAAC;aACf;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IAClB,CAAC;IAED,oCAAO,GAAP,UAAQ,QAAmC;QACvC,IAAI,OAAO,GAAW,IAAI,CAAC;QAE3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC3C,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAC;gBAC1D,OAAO,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;aACvC;SACJ;QAED,IAAG,OAAO,EAAC;YACR,IAAI,MAAM,GAAG,IAAI,8EAAuB,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;IACL,CAAC;IAEQ,gDAAmB,GAAnB,UAAoB,QAAmC,EAAE,MAAc;QAC5E,IAAI,OAAO,GAAW,IAAI,CAAC;QAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC3C,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAC;gBAC1D,OAAO,GAAG,KAAK,CAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;aACvD;SACJ;QAED,IAAG,OAAO,EAAC;YACR,IAAI,SAAS,GAAG,IAAI,8EAAuB,CAAC,QAAQ,CAAC,CAAC;YACtD,SAAS,CAAC,cAAc,EAAE,CAAC;YAC3B,SAAS,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAClC;IACL,CAAC;IAEO,mCAAM,GAAN,UAAO,QAAmC,EAAE,KAAY;QAC5D,IAAG,KAAK,IAAI,CAAC,EAAC;YACV,IAAI,MAAM,GAA4B,IAAI,CAAC;YAE3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC3C,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAC;oBAC1D,IAAG,KAAK,KAAK,CAAC,EAAC;wBACX,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACtC;yBACG;wBACA,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC5B,MAAM;qBACT;iBACJ;aACJ;YAED,IAAG,MAAM,KAAK,IAAI,EAAC;gBACf,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAChC;SACJ;IACL,CAAC;IAED,qCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,6CAAgB,GAAhB;QACI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC3C,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;SACvD;QAED,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAES,sBAAI,qDAAqB;aAAzB;YACN,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;;;OAAA;IAEO,kDAAqB,GAArB,UAAsB,MAAc;QAA5C,iBAUC;QATG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAQ;YAC5B,IAAG,QAAQ,CAAC,oBAAoB,EAAE,IAAI,MAAM,EAAC;gBACzC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC5C,OAAO,KAAI,CAAC,kBAAkB,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,qCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,kCAAK,GAAL;QACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IApHW;QAAX,+CAAU;;0DAAuC;IAGtC;QAAX,+CAAU;;kEAAyB;IAmC3B;QAAP,2CAAM;;+EAA+B,gGAAyB;;iEAgB/D;IAEO;QAAP,2CAAM;;+EAAkB,gGAAyB;;oDAoBjD;IAgBS;QAAT,6CAAQ;;;mEAER;IAEO;QAAP,2CAAM;;;;mEAUN;IAWJ,yBAAC;CAAA;AAtH8B;;;;;;;;;;;;;ACF/B;AAAA;AAAA;IAGI,iCAAY,QAAmC;QAC3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,6CAAW,GAAX;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,0CAAQ,GAAR;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC/B,CAAC;IAED,0CAAQ,GAAR,UAAS,GAAU;QACf,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;IAC9B,CAAC;IAED,mDAAiB,GAAjB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;IACxC,CAAC;IAED,sDAAoB,GAApB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAChC,CAAC;IAED,6CAAW,GAAX;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAClC,CAAC;IAED,6CAAW,GAAX,UAAY,QAAe;QACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACtC,CAAC;IAED,gDAAc,GAAd;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,oDAAkB,GAAlB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IACzC,CAAC;IAED,2CAAS,GAAT,UAAU,MAAa;QACnB,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,MAAM,CAAC;IAC3C,CAAC;IAED,0DAAwB,GAAxB,UAAyB,MAAc;QACnC,IAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,MAAM,CAAC;IAC5C,CAAC;IAED,mDAAiB,GAAjB;QACI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IAClC,CAAC;IACL,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC1D0C;AACkB;AACO;AAGe;AAGnF;IAII,+BAAoB,kBAAqC;QAAzD,iBAUC;QAVmB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,4EAAe,EAAE,CAAC;QAC7C,oDAAO,CAAC;YACJ,2BAA2B;YAC3B,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE;iBAC5C,SAAS,CAAC,UAAC,IAAuB;gBAC/B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACjC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,yDAAsB;aAA1B;YACN,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;;;OAAA;IAEO,kDAAkB,GAAlB,UAAmB,EAAU;QACjC,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAE,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QACnE,IAAG,eAAe,IAAI,IAAI,EAAC;YACvB,OAAO,eAAe,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,qDAAqB,GAArB,UAAsB,eAAgC;QAC1D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,iBAAO;YACjC,IAAG,OAAO,CAAC,EAAE,IAAI,eAAe,CAAC,EAAE,EAAC;gBAChC,OAAO,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;aACvC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAjCW;QAAX,+CAAU;;mEAAqC;IACpC;QAAX,+CAAU;wEAAkB,4EAAe;kEAAC;IAcnC;QAAT,6CAAQ;;;uEAER;IAEO;QAAP,2CAAM;;;;mEAMN;IAEO;QAAP,2CAAM;;+EAAwC,4EAAe;;sEAM7D;IAlCQ,qBAAqB;QADjC,gEAAU,EAAE;+EAK+B,gGAAiB;OAJhD,qBAAqB,CAmCjC;IAAD,4BAAC;CAAA;AAnCiC;;;;;;;;;;;;;;;;;;;ACRkB;AACC;AAErD;IAAA;QACgB,UAAK,GAAa,EAAE,CAAC;QACrB,SAAI,GAAW,IAAI,kEAAM,EAAE,CAAC;QAC5B,UAAK,GAAW,IAAI,CAAC;IAuBrC,CAAC;IArBa,sBAAI,gCAAQ;aAAZ;YACN,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAEO,4BAAO,GAAP,UAAQ,EAAU;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QACnD,IAAG,KAAK,IAAI,IAAI,EAAC;YACb,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,+BAAU,GAAV,UAAW,IAAY;QAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAK;YACpB,IAAG,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAC;gBAC/B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACjC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAClC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAxBW;QAAX,+CAAU;;6CAAsB;IACrB;QAAX,+CAAU;wEAAO,kEAAM;4CAAgB;IAC5B;QAAX,+CAAU;;6CAAsB;IAEvB;QAAT,6CAAQ;;;8CAER;IAEO;QAAP,2CAAM;;;;6CAMN;IAEO;QAAP,2CAAM;;+EAAkB,kEAAM;;gDAQ9B;IACL,iBAAC;CAAA;AA1BsB;;;;;;;;;;;;;;;;;;;;ACHoB;AACD;AACW;AAErD,gEAAU,EAAE;AACZ;IAQI;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,kEAAM,EAAE,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,yCAAoB,GAApB,UAAqB,KAAe;QAChC,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YAChB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,oCAAe,GAAf,UAAgB,IAAY;QAChC,IAAG,IAAI,IAAI,OAAO,EAAC;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,OAAO,CAAC;SAClB;aACI,IAAG,IAAI,IAAI,eAAe,EAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,OAAO,iCAAiC,CAAC;SAC5C;aACI,IAAI,IAAI,IAAI,QAAQ,EAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;aACI,IAAI,IAAI,IAAI,sBAAsB,EAAC;YACpC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,OAAO,yBAAyB,CAAC;SACpC;aACG;YACA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,yBAAyB,CAAC;SACpC;IACL,CAAC;IA5CW;QAAX,+CAAU;;6CAAiB;IAChB;QAAX,+CAAU;wEAAO,kEAAM;4CAAC;IACb;QAAX,+CAAU;;+CAAkB;IACjB;QAAX,+CAAU;;gDAAmB;IAClB;QAAX,+CAAU;;6DAAgC;IAC/B;QAAX,+CAAU;;sDAAyB;IAkB5B;QAAP,2CAAM;;;;qDAqBN;IACL,iBAAC;CAAA;AA9CsB;;;;;;;;;;;;;;;;;;;;;;;ACLmD;AAClB;AACL;AACU;AAClB;AACwC;AAGnF;IAcI,YAAY;IAEZ,0BAAoB,kBAAqC;QAAzD,iBAyBC;QAzBmB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACjD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,kFAAkB,EAAE,CAAC;QAC5C,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,gEAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAE9B,oDAAO,CAAC;YACJ,wBAAwB;YACxB,KAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE;iBACzC,SAAS,CAAC,UAAC,IAAc;gBACtB,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,8BAA8B;YAC9B,KAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE;iBAC5C,SAAS,CAAC,UAAC,IAAc;gBACtB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC9B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IAEX,CAAC;IAGS,sBAAI,2CAAa;QAD3B,gBAAgB;aACN;YACN,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAES,sBAAI,iDAAmB;aAAvB;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAES,sBAAI,kDAAoB;aAAxB;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAES,sBAAI,uDAAyB;aAA7B;YACN,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IAEO,8CAAmB,GAAnB,UAAoB,EAAU;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAC5D,IAAG,MAAM,IAAI,IAAI,EAAC;YACd,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,mDAAwB,GAAxB,UAAyB,OAAiB;QAC9C,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,IAAI,QAAQ,EAAhB,CAAgB,CAAC,EAA3C,CAA2C,CAAC,CAAC;IAC/F,CAAC;IAEO,8CAAmB,GAAnB,UAAoB,EAAU;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAClE,IAAG,MAAM,IAAI,IAAI,EAAC;YACd,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,qDAA0B,GAA1B,UAA2B,EAAU;QACzC,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QACpE,IAAG,OAAO,IAAI,IAAI,EAAC;YACf,OAAO,OAAO,CAAC;SAClB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,wCAAa,GAAb,UAAc,EAAU;QAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAC7D,IAAG,OAAO,IAAI,IAAI,EAAC;YACf,OAAO,OAAO,CAAC;SAClB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAES,sBAAI,yDAA2B;aAA/B;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAEO,+CAAoB,GAApB,UAAqB,QAAoB;QAAjD,iBAUC;QATG,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACpB,IAAI,MAAM,GAAG,IAAI,2DAAM,EAAE,CAAC;YAC1B,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;YAChC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACrC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC7B,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAIS,sBAAI,gDAAkB;QAHhC,YAAY;QAEZ,qBAAqB;aACX;YACN,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAEO,yCAAc,GAAd,UAAe,EAAU;QAC7B,IAAI,WAAW,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QAC5D,IAAG,WAAW,IAAI,IAAI,EAAC;YACnB,OAAO,WAAW,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,4CAAiB,GAAjB,UAAkB,WAA+B;QACrD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC7B,IAAG,OAAO,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,EAAC;gBAC5B,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;gBAC9C,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,CAAC,eAAe,GAAG,WAAW,CAAC,eAAe,CAAC;gBACtD,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;gBAC5C,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;gBAC9C,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;gBACpD,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;gBAC5C,OAAO,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;gBAClD,OAAO,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC;gBACxD,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;gBAChD,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;gBAC1C,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;aACnD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,mDAAqB;aAAzB;YACN,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;;;OAAA;IAEO,+CAAoB,GAApB,UAAqB,EAAU,EAAE,YAAkC;QAA3E,iBAWC;QAVG,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,YAAY,CAAC,OAAO,CAAC,qBAAW;YAC5B,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAM;gBAChC,IAAG,MAAM,CAAC,QAAQ,IAAI,EAAE,IAAI,WAAW,CAAC,MAAM,IAAI,WAAW,EAAC;oBAC1D,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC7C;YACL,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IA/JW;QAAX,+CAAU;;0DAAoC;IACnC;QAAX,+CAAU;wEAAc,kFAAkB;yDAAC;IAChC;QAAX,+CAAU;;gEAA0C;IAIzC;QAAX,+CAAU;;2DAA2B;IAC1B;QAAX,+CAAU;;qDAAqB;IACpB;QAAX,+CAAU;;kEAAkC;IACjC;QAAX,+CAAU;wEAAS,gEAAQ;oDAAC;IACjB;QAAX,+CAAU;;2DAAyB;IACxB;QAAX,+CAAU;;iEAA+B;IA+BhC;QAAT,6CAAQ;;;yDAER;IAES;QAAT,6CAAQ;;;+DAER;IAES;QAAT,6CAAQ;;;gEAER;IAES;QAAT,6CAAQ;;;qEAER;IAEO;QAAP,2CAAM;;;;+DAMN;IAEO;QAAP,2CAAM;;;;oEAEN;IAEO;QAAP,2CAAM;;;;+DAMN;IAEO;QAAP,2CAAM;;;;sEAMN;IAEO;QAAP,2CAAM;;;;yDAMN;IAES;QAAT,6CAAQ;;;uEAER;IAEO;QAAP,2CAAM;;;;gEAUN;IAIS;QAAT,6CAAQ;;;8DAER;IAEO;QAAP,2CAAM;;;;0DAMN;IAEO;QAAP,2CAAM;;+EAAgC,kFAAkB;;6DAkBxD;IAES;QAAT,6CAAQ;;;iEAER;IAEO;QAAP,2CAAM;;;;gEAWN;IAjKQ,gBAAgB;QAD5B,gEAAU,EAAE;+EAiB+B,gGAAiB;OAhBhD,gBAAgB,CAmK5B;IAAD,uBAAC;CAAA;AAnK4B;;;;;;;;;;;;ACR7B,gEAAgE,mBAAmB,gCAAgC,eAAe,kEAAkE,e;;;;;;;;;;;;;;;;;;;ACA1I;AAEN;AACF;AAQlD;IAKI,wBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAF9C,WAAM,GAAY,EAAE,CAAC;IAE6B,CAAC;IAEnD,iCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAY;YACvD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAChB,+CAA+C;gBAC/C,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;gBACjB,OAAO;aACV;YAED,qBAAqB;YACrB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAW,GAAX,UAAY,KAAY;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,KAAK,KAAK,EAAX,CAAW,CAAC,CAAC;IACvD,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAY;QACjB,IAAI,CAAC,KAAK,EAAE;YACR,OAAO;SACV;QAED,uCAAuC;QACvC,QAAQ,KAAK,CAAC,IAAI,EAAE;YAChB,KAAK,uDAAS,CAAC,OAAO;gBAClB,OAAO,qBAAqB,CAAC;YACjC,KAAK,uDAAS,CAAC,KAAK;gBAChB,OAAO,iCAAiC,CAAC;YAC7C,KAAK,uDAAS,CAAC,IAAI;gBACf,OAAO,kBAAkB,CAAC;YAC9B,KAAK,uDAAS,CAAC,OAAO;gBAClB,OAAO,qBAAqB,CAAC;SACpC;IACL,CAAC;IAvCQ;QAAR,2DAAK,EAAE;;8CAAY;IADX,cAAc;QAN1B,+DAAS,CAAC;YAEP,QAAQ,EAAE,OAAO;YACjB,gHAAmC;SACtC,CAAC;+EAOoC,4DAAY;OALrC,cAAc,CAyC1B;IAAD,qBAAC;CAAA;AAzC0B;;;;;;;;;;;;;ACX1B;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;ACAnC;AAAA;AAAA;AAAA;IAMI,eAAY,IAAoB;QAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IACL,YAAC;AAAD,CAAC;;AAED,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,+CAAO;IACP,2CAAK;IACL,yCAAI;IACJ,+CAAO;AACX,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;;;;;;;;;;;;;;;;;;;;;;ACAmB;AACc;AACf;AAC3C,yCAAyC;AAEW;AACZ;AAGxC;IAII,sBAAoB,MAAc;QAAlC,iBAaC;QAbmB,WAAM,GAAN,MAAM,CAAQ;QAH1B,YAAO,GAAG,IAAI,4CAAO,EAAS,CAAC;QAC/B,yBAAoB,GAAG,KAAK,CAAC;QAGjC,kFAAkF;QAClF,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACzB,IAAI,KAAK,YAAY,+DAAe,EAAE;gBAClC,IAAI,KAAI,CAAC,oBAAoB,EAAE;oBAC3B,sCAAsC;oBACtC,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;iBACrC;qBAAM;oBACH,uBAAuB;oBACvB,KAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;IACtB,+BAAQ,GAAR,UAAS,OAAgB;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,6DAAM,CAAC,UAAC,CAAQ,IAAK,QAAC,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,EAA1B,CAA0B,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,yBAAyB;IACzB,gDAAgD;IAChD,2BAA2B;IAC3B,iDAAiD;IACjD,oCAAoC;IACpC,gCAAgC;IAChC,gBAAgB;IAChB,cAAc;IACd,uBAAuB;IACvB,IAAI;IAEJ,sBAAsB;IACtB,8BAAO,GAAP,UAAQ,OAAe;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,mDAAK,CAAC,EAAE,OAAO,WAAE,IAAI,EAAE,uDAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,4BAAK,GAAL,UAAM,OAAe;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,mDAAK,CAAC,EAAE,OAAO,WAAE,IAAI,EAAE,uDAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAe;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,mDAAK,CAAC,EAAE,OAAO,WAAE,IAAI,EAAE,uDAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAe;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,mDAAK,CAAC,EAAE,OAAO,WAAE,IAAI,EAAE,uDAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,wBAAwB;IACxB,4BAAK,GAAL,UAAM,KAAY;QACd,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,oBAAoB,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe;IACf,4BAAK,GAAL,UAAM,OAAgB;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,mDAAK,CAAC,EAAE,OAAO,WAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IA7DQ,YAAY;QADxB,gEAAU,EAAE;+EAKmB,sDAAM;OAJzB,YAAY,CA8DxB;IAAD,mBAAC;CAAA;AA9DwB;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAQ;AACM;AACJ;AACI;AACC;AAYjB;AACgB;AACQ;AACF;AACJ;AAC0B;AAG5B;AAG/C,IAAM,KAAK,GAAG;IACZ,IAAI;IACJ,WAAW;IACX,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,GAAG;IACH,MAAM;IACN,IAAI;IACJ,MAAM;IACN,SAAS;IACT,KAAK;IACL,YAAY;IACZ,MAAM;IACN,IAAI;IACJ,MAAM;IACN,KAAK;IACL,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;CACT;AAiBD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAfxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAgB;gBAChB,oEAAS;gBACT,6DAAY;gBACZ,+DAAiB;gBACjB,kEAAmB;gBACnB,6DAAa,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1B;YACD,YAAY,EAAE,CAAC,0DAAc,CAAC;YAC9B,OAAO,EAAC,CAAC,0DAAc,EAAE,6DAAa,EAAE,4DAAgB;gBAChD,oEAAS,EAAE,kEAAmB,EAAE,+DAAiB,CAAC;YAC1D,SAAS,EAAE,CAAC,sDAAY,EAAE,4DAAgB,EAAE,uFAAgB,CAAC;SAC9D,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AClE2B;AACC;AACV;AACe;AAG1D;IAOI;QANY,kBAAa,GAAe,EAAE,CAAC;QAC/B,YAAO,GAAe,EAAE,CAAC;QACzB,WAAM,GAAa,IAAI,uEAAQ,EAAE,CAAC;QAClC,kBAAa,GAAa,EAAE,CAAC;QAC7B,wBAAmB,GAAa,EAAE,CAAC;IAEjC,CAAC;IAEL,sBAAI,sCAAa;aAAjB;YACN,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAES,sBAAI,4CAAmB;aAAvB;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAES,sBAAI,6CAAoB;aAAxB;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAES,sBAAI,kDAAyB;aAA7B;YACN,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IAEO,yCAAmB,GAAnB,UAAoB,EAAU;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QAC5D,IAAG,MAAM,IAAI,IAAI,EAAC;YACd,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,8CAAwB,GAAxB,UAAyB,OAAiB;QAC9C,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,gBAAM,IAAI,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,IAAI,QAAQ,EAAhB,CAAgB,CAAC,EAA3C,CAA2C,CAAC,CAAC;IAC/F,CAAC;IAEO,mCAAa,GAAb,UAAc,EAAU;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC;QACtD,IAAG,MAAM,IAAI,IAAI,EAAC;YACd,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAES,sBAAI,oDAA2B;aAA/B;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAEO,0CAAoB,GAApB,UAAqB,QAAoB;QAAjD,iBAUC;QATG,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACpB,IAAI,MAAM,GAAG,IAAI,kEAAM,EAAE,CAAC;YAC1B,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC;YAChC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;YACrC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC7B,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IA1DW;QAAX,+CAAU;;sDAAgC;IAC/B;QAAX,+CAAU;;gDAA0B;IACzB;QAAX,+CAAU;wEAAS,uEAAQ;+CAAkB;IAClC;QAAX,+CAAU;;sDAA8B;IAC7B;QAAX,+CAAU;;4DAAoC;IAIrC;QAAT,6CAAQ;;;oDAER;IAES;QAAT,6CAAQ;;;0DAER;IAES;QAAT,6CAAQ;;;2DAER;IAES;QAAT,6CAAQ;;;gEAER;IAEO;QAAP,2CAAM;;;;0DAMN;IAEO;QAAP,2CAAM;;;;+DAEN;IAEO;QAAP,2CAAM;;;;oDAMN;IAES;QAAT,6CAAQ;;;kEAER;IAEO;QAAP,2CAAM;;;;2DAUN;IA3DQ,WAAW;QADvB,gEAAU,EAAE;;OACA,WAAW,CA4DvB;IAAD,kBAAC;CAAA;AA5DuB;;;;;;;;;;;;;;;;;;;;ACNmB;AACS;AACwB;AAG5E;IAKI;QAJY,iBAAY,GAAyB,EAAE,CAAC;QACxC,gBAAW,GAAuB,IAAI,yFAAkB,EAAE,CAAC;QAC3D,uBAAkB,GAAyB,EAAE,CAAC;IAE5C,CAAC;IAEL,sBAAI,gDAAkB;aAAtB;YACN,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;;;OAAA;IAEO,yCAAc,GAAd,UAAe,EAAU;QAC7B,IAAI,WAAW,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;QAC5D,IAAG,WAAW,IAAI,IAAI,EAAC;YACnB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,OAAO,WAAW,CAAC;SACtB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,4CAAiB,GAAjB,UAAkB,WAA+B;QACrD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC7B,IAAG,OAAO,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,EAAC;gBAC5B,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;gBAC9C,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,CAAC,eAAe,GAAG,WAAW,CAAC,eAAe,CAAC;gBACtD,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;gBAC5C,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;gBAC9C,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;gBACpD,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;gBAC5C,OAAO,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;gBAClD,OAAO,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC;gBACxD,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;gBAChD,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;gBAC1C,OAAO,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;aACnD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,sBAAI,mDAAqB;aAAzB;YACN,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACnC,CAAC;;;OAAA;IAEO,+CAAoB,GAApB,UAAqB,EAAU,EAAE,YAAkC;QAA3E,iBAWC;QAVG,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,YAAY,CAAC,OAAO,CAAC,qBAAW;YAC5B,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAM;gBAChC,IAAG,MAAM,CAAC,QAAQ,IAAI,EAAE,EAAC;oBACrB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC7C;YACL,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAtDW;QAAX,+CAAU;;0DAAyC;IACxC;QAAX,+CAAU;wEAAc,yFAAkB;yDAA4B;IAC3D;QAAX,+CAAU;;gEAA+C;IAIhD;QAAT,6CAAQ;;;8DAER;IAEO;QAAP,2CAAM;;;;0DAON;IAEO;QAAP,2CAAM;;+EAAgC,yFAAkB;;6DAkBxD;IAES;QAAT,6CAAQ;;;iEAER;IAEO;QAAP,2CAAM;;;;gEAWN;IAvDQ,gBAAgB;QAD5B,gEAAU,EAAE;;OACA,gBAAgB,CAwD5B;IAAD,uBAAC;CAAA;AAxD4B;;;;;;;;;;;;;ACL7B;AAAA;AAAA;IAQI;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACXD;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHD;AAAA;AAAA;IAUI;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACbD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\"\n\t],\n\t\"./operations/operations.module\": [\n\t\t\"./src/app/operations/operations.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContainerComponent } from './container/container.component';\nimport { routing } from './admin.routing';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RouterModule } from '@angular/router';\nimport { TransactiontypeComponent } from './transactiontype/transactiontype.component';\nimport { UsersComponent } from './users/users.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { StatusComponent } from './status/status.component';\nimport { ReportComponent } from './report/report.component';\nimport { Configuration } from '../config';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RoleFacade } from '../services/admin/rolefacade';\nimport { MobxAngularModule } from 'mobx-angular';\nimport { StatusFacade } from '../services/admin/statusfacade';\nimport { TransactionTypeFacade } from '../services/admin/transactiontypefacade';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReportFacade } from '../services/admin/reportsfacade';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TransactionPipe } from './pipes/transaction.pipe';\nimport { ManageuserprofileComponent } from './manageuserprofile/manageuserprofile.component';\nimport { ChangeuserpasswordComponent } from './changeuserpassword/changeuserpassword.component';\nimport { ManageuserroleComponent } from './manageuserrole/manageuserrole.component';\nimport { UserFacade } from '../services/admin/userfacade';\nimport { UserPipe } from './pipes/user.pipe';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { LoginComponent } from './login/login.component';\nimport { UserAccess } from './services/userAccess';\nimport { GetnewuserprofileComponent } from './getnewuserprofile/getnewuserprofile.component';\n\n@NgModule({\n  declarations: [\n    ContainerComponent, \n    DashboardComponent, \n    TransactiontypeComponent, \n    UsersComponent, \n    RolesComponent, \n    StatusComponent, \n    ReportComponent, \n    TransactionPipe, \n    ManageuserprofileComponent, \n    ChangeuserpasswordComponent, \n    ManageuserroleComponent,\n    UserPipe,\n    LoginComponent,\n    GetnewuserprofileComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    NgSelectModule,\n    SharedModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    Configuration, \n    RoleFacade, \n    StatusFacade, \n    TransactionTypeFacade, \n    ReportFacade, \n    UserAccess,\n    UserFacade,\n    NgxSpinnerService\n  ],\n  exports:[NgxSpinnerModule]\n})\nexport class AdminModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { TransactiontypeComponent } from './transactiontype/transactiontype.component';\r\nimport { ReportComponent } from './report/report.component';\r\nimport { ManageuserprofileComponent } from './manageuserprofile/manageuserprofile.component';\r\nimport { ManageuserroleComponent } from './manageuserrole/manageuserrole.component';\r\nimport { ChangeuserpasswordComponent } from './changeuserpassword/changeuserpassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { GetnewuserprofileComponent } from './getnewuserprofile/getnewuserprofile.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'admin',\r\n        component: ContainerComponent,\r\n\r\n        children: [\r\n            { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'getnewuserprofile', component: GetnewuserprofileComponent },\r\n            { path: 'dashboard', component: DashboardComponent },\r\n            { path: 'roles', component: RolesComponent } ,\r\n            { path: 'transactiontypes', component: TransactiontypeComponent },\r\n            { path: 'status', component: StatusComponent },\r\n            { path: 'transaction-report', component: ReportComponent },\r\n            { path: 'update-user-profile', component: ManageuserprofileComponent },\r\n            { path: 'update-user-role', component: ManageuserroleComponent },\r\n            { path: 'change-user-password', component: ChangeuserpasswordComponent }\r\n        ]\r\n    }    \r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);","export class ChangePasswordApiModel{\r\n    email: string;\r\n    newPassword: string;\r\n    confirmNewPassword: string;\r\n}","export class DateRangeApiModel{\r\n    dateFrom: string;\r\n    dateTo: string;\r\n}","export class ManageUserApiModel{\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n    id: string;\r\n    isactive: boolean;\r\n}","export class ManageUserRoleApiModel {\r\n    email: string;\r\n    rolename: string;\r\n}","export class UserLoginApiModel{\r\n    Username: string;\r\n    Password: string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NoYW5nZXVzZXJwYXNzd29yZC9jaGFuZ2V1c2VycGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Administration</a></li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Change User Password</li>\\n    </ol>\\n</nav>\\n\\n<div class=\\\"pb-3\\\">\\n    <h1>Change User Password</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>    \\n    <div class=\\\"col-lg-5\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Change User Password</div>\\n\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form [formGroup]=\\\"changeUserPasswordForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"exampleInputEmail\\\">Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" aria-describedby=\\\"Email\\\" placeholder=\\\"Enter Email Address\\\">                \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"firstname\\\">New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"newpassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"firstName\\\" placeholder=\\\"Enter New Password\\\">                \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"lastname\\\">Confirm New Password</label>\\n                    <input type=\\\"password\\\" formControlName=\\\"confirmnewpassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"lastName\\\" placeholder=\\\"Confirm New Password\\\">                \\n                </div>\\n                <button [disabled]=\\\"!changeUserPasswordForm.valid\\\" (click)=\\\"changeUserPassword()\\\"  class=\\\"btn btn-success\\\">Change Password</button>\\n            </form>\\n            </div>\\n        </div>\\n    </div>    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ChangePasswordApiModel } from '../apimodels/changepasswordapimodel';\nimport { GeneralService } from '../services/general.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-changeuserpassword',\n  templateUrl: './changeuserpassword.component.html',\n  styleUrls: ['./changeuserpassword.component.css']\n})\nexport class ChangeuserpasswordComponent implements OnInit {\n\n  changeUserPasswordForm: FormGroup;\n  \n  constructor(private _generalService: GeneralService, private spinner: NgxSpinnerService) { \n    this.changeUserPasswordForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      newpassword: new FormControl('', Validators.required),\n      confirmnewpassword: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  changeUserPassword(){\n    this.spinner.show();\n    let model = new ChangePasswordApiModel();\n    model.email = this.changeUserPasswordForm.get(\"email\").value;\n    model.newPassword = this.changeUserPasswordForm.get(\"newpassword\").value;\n    model.confirmNewPassword = this.changeUserPasswordForm.get(\"confirmnewpassword\").value;\n\n    this._generalService.changeNewPassword(model)\n        .subscribe(() => {\n          this.spinner.hide();\n          this.changeUserPasswordForm.reset();\n        });\n  }\n}\n","module.exports = \"nav-item{\\r\\n    right: 2rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29udGFpbmVyL2NvbnRhaW5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vY29udGFpbmVyL2NvbnRhaW5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibmF2LWl0ZW17XHJcbiAgICByaWdodDogMnJlbTtcclxufSJdfQ== */\"","module.exports = \"<!-- Start Header Top Area -->\\r\\n<div class=\\\"adminx-container\\\">\\r\\n    <nav class=\\\"navbar navbar-expand justify-content-between fixed-top\\\">\\r\\n        <a class=\\\"navbar-brand mb-0 h1 d-none d-md-block\\\" href=\\\"index.html\\\">\\r\\n            <img src=\\\"./../../../assets/images/fav.png\\\" class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" alt=\\\"\\\">\\r\\n            QueueIT\\r\\n        </a>\\r\\n        <form *ngIf=\\\"userAccess.auth\\\" class=\\\"form-inline form-quicksearch d-none d-md-block mx-auto\\\">\\r\\n            Welcome, &nbsp;{{userAccess.user.firstname}}&nbsp;&nbsp;{{userAccess.user.lastname}}\\r\\n        </form>\\r\\n        <div class=\\\"d-flex flex-1 d-block d-md-none\\\">\\r\\n            <a class=\\\"sidebar-toggle ml-3\\\">\\r\\n                <i-feather name=\\\"menu\\\"></i-feather>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"navbar-nav d-flex justify-content-end mr-2\\\">\\r\\n          <li class=\\\"nav-item dropdown\\\">\\r\\n            <a class=\\\"nav-link avatar-with-name\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">\\r\\n              <img src=\\\"./../../../assets/images/user2.png\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\r\\n            </a>\\r\\n            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n              <a *ngIf=\\\"userAccess.auth\\\" class=\\\"dropdown-item\\\" [routerLink]=\\\"['/operations/login']\\\" href=\\\"#\\\">Login as Teller</a>\\r\\n              <div class=\\\"dropdown-divider\\\"></div>\\r\\n              <button type=\\\"button\\\" class=\\\"dropdown-item text-danger\\\" (click)=\\\"logout()\\\">Log Out</button>\\r\\n            </div>\\r\\n          </li>\\r\\n        </ul>\\r\\n    </nav>\\r\\n    <!-- Sidebar -->\\r\\n    <div *ngIf=\\\"userAccess.auth\\\" class=\\\"adminx-sidebar expand-hover push\\\">\\r\\n        <ul class=\\\"sidebar-nav\\\">\\r\\n            <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/dashboard']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                    <span class=\\\"sidebar-nav-icon\\\">\\r\\n                    <i-feather name=\\\"User\\\">\\r\\n                            Welcome, &nbsp;{{userAccess.user.firstname}}&nbsp;&nbsp;{{userAccess.user.lastname}}\\r\\n                    </i-feather>\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                            Welcome, &nbsp;{{userAccess.user.firstname}}&nbsp;&nbsp;{{userAccess.user.lastname}}\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-end\\\">\\r\\n\\r\\n                    </span>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/dashboard']\\\" class=\\\"sidebar-nav-link active\\\">\\r\\n                    <span class=\\\"sidebar-nav-icon\\\">\\r\\n                    <i-feather name=\\\"activity\\\">\\r\\n                        Activity\\r\\n                    </i-feather>\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Activity\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-end\\\">\\r\\n\\r\\n                    </span>\\r\\n                </a>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"sidebar-nav-item\\\" >\\r\\n                <a class=\\\"sidebar-nav-link\\\" data-toggle=\\\"collapse\\\" href=\\\"#administration\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"administration\\\">\\r\\n                    <span class=\\\"sidebar-nav-icon\\\">\\r\\n                        <i-feather name=\\\"settings\\\">\\r\\n                            Administration\\r\\n                        </i-feather>\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                        Administration\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-end\\\">\\r\\n                        <i-feather name=\\\"chevron-right\\\"></i-feather>\\r\\n                    </span>\\r\\n                </a>\\r\\n                <ul class=\\\"sidebar-sub-nav collapse\\\" id=\\\"administration\\\">\\r\\n                    <li class=\\\"sidebar-nav-item\\\">\\r\\n                        <a [routerLink]=\\\"['/admin/roles']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                        <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                            Mr\\r\\n                        </span>\\r\\n                        <span class=\\\"sidebar-nav-name\\\">\\r\\n                            Manage Roles\\r\\n                        </span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n        \\r\\n                    <li class=\\\"sidebar-nav-item\\\">\\r\\n                        <a [routerLink]=\\\"['/admin/status']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                        <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                            Ms\\r\\n                        </span>\\r\\n                        <span class=\\\"sidebar-nav-name\\\">\\r\\n                            Manage Status\\r\\n                        </span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"sidebar-nav-item\\\">\\r\\n                        <a [routerLink]=\\\"['/admin/transactiontypes']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                        <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                            Mt\\r\\n                        </span>\\r\\n                        <span class=\\\"sidebar-nav-name\\\">\\r\\n                            Manage Transaction Types\\r\\n                        </span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"sidebar-nav-item\\\">\\r\\n            <a class=\\\"sidebar-nav-link collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#user\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"user\\\">\\r\\n                <span class=\\\"sidebar-nav-icon\\\">\\r\\n                    <i-feather name=\\\"User\\\">\\r\\n                        Manage Users\\r\\n                    </i-feather>\\r\\n                </span>\\r\\n                <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Manage Users\\r\\n                </span>\\r\\n                <span class=\\\"sidebar-nav-end\\\">\\r\\n                    <i-feather name=\\\"chevron-right\\\"></i-feather>\\r\\n                </span>\\r\\n            </a>\\r\\n\\r\\n            <ul class=\\\"sidebar-sub-nav collapse\\\" id=\\\"user\\\">\\r\\n                <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/update-user-profile']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                    <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                    Up\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Update User Profile\\r\\n                    </span>\\r\\n                </a>\\r\\n                </li>\\r\\n\\r\\n                <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/update-user-role']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                    <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                        Ur\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Update User Role\\r\\n                    </span>\\r\\n                </a>\\r\\n                </li>\\r\\n                <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/change-user-password']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                    <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                        Cp\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Change User Password\\r\\n                    </span>\\r\\n                </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a class=\\\"sidebar-nav-link collapsed\\\" data-toggle=\\\"collapse\\\" href=\\\"#navUI\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navUI\\\">\\r\\n                    <span class=\\\"sidebar-nav-icon\\\">\\r\\n                    <i-feather name=\\\"book\\\">\\r\\n                        Reports\\r\\n                    </i-feather>\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Reports\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-end\\\">\\r\\n                        <i-feather name=\\\"chevron-right\\\"></i-feather>\\r\\n                    </span>\\r\\n                </a>\\r\\n\\r\\n                <ul class=\\\"sidebar-sub-nav collapse\\\" id=\\\"navUI\\\">\\r\\n                    <li class=\\\"sidebar-nav-item\\\">\\r\\n                        <a [routerLink]=\\\"['/admin/transaction-report']\\\" class=\\\"sidebar-nav-link\\\">\\r\\n                            <span class=\\\"sidebar-nav-abbr\\\">\\r\\n                            Tr\\r\\n                            </span>\\r\\n                            <span class=\\\"sidebar-nav-name\\\">\\r\\n                            Transaction Report\\r\\n                            </span>\\r\\n                        </a>\\r\\n                    </li>                    \\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"sidebar-nav-item\\\">\\r\\n                <a [routerLink]=\\\"['/admin/login']\\\" class=\\\"sidebar-nav-link\\\" style=\\\"color: red\\\">\\r\\n                    <span class=\\\"sidebar-nav-icon\\\">\\r\\n                    <i-feather name=\\\"LogOut\\\">\\r\\n                        Log Out\\r\\n                    </i-feather>\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-name\\\">\\r\\n                    Log Out\\r\\n                    </span>\\r\\n                    <span class=\\\"sidebar-nav-end\\\">\\r\\n\\r\\n                    </span>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div><!-- Sidebar End -->\\r\\n\\r\\n    <!-- Main Content -->\\r\\n    <div class=\\\"adminx-content\\\">\\r\\n        <div class=\\\"adminx-main-content\\\" style=\\\"padding: 0px 0px;\\\"> \\r\\n            <div class=\\\"container-fluid\\\">\\r\\n                <router-outlet></router-outlet>    \\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, ChangeDetectionStrategy, OnInit} from '@angular/core';\nimport { UserAccess } from './../services/userAccess';\nimport { AuthService } from 'src/app/admin/services/auth.service';\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit{\n  constructor(public userAccess: UserAccess, private authService: AuthService,\n    private _router: Router) { }\n\n  ngOnInit(){  \n  }\n\n  logout(){\n    this.authService.logout();\n    this.userAccess.auth = false;\n    this._router.navigate(['admin/login']);\n  }\n}\n","module.exports = \".card{\\r\\n    width: 100%;\\r\\n}\\r\\n.awaiting-mail{\\r\\n    background-color:yellow;\\r\\n}\\r\\n.completed{\\r\\n    background-color:yellowgreen;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7SUFDSSx1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLDRCQUE0QjtBQUNoQyIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLmF3YWl0aW5nLW1haWx7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnllbGxvdztcclxufVxyXG4uY29tcGxldGVke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp5ZWxsb3dncmVlbjtcclxufSJdfQ== */\"","module.exports = \"\\r\\n    <!-- BreadCrumb -->\\r\\n    <nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n        <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\">Home</li>\\r\\n            <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Activity</li>\\r\\n        </ol>\\r\\n    </nav>\\r\\n\\r\\n    <div class=\\\"pb-3\\\">\\r\\n        <h1>Activity</h1>\\r\\n    </div>\\r\\n\\r\\n    <div *mobxAutorun class=\\\"row\\\">        \\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n            <div class=\\\"card border-0 bg-primary text-white text-center mb-grid w-100\\\">\\r\\n                <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                    <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                    <i data-feather=\\\"users\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-info-title\\\">Total Submitted</div>\\r\\n                    <h3 class=\\\"card-title mb-0\\\">\\r\\n                        {{reportFacade.getSubmittedTransactions}}\\r\\n                    </h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n            <div class=\\\"card border-0 bg-warning text-white text-center mb-grid w-100\\\">\\r\\n                <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                    <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                    <i data-feather=\\\"users\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-info-title\\\">Total Processing</div>\\r\\n                    <h3 class=\\\"card-title mb-0\\\">\\r\\n                        {{reportFacade.getTransactionsBeingProcessed}}\\r\\n                    </h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n            <div class=\\\"awaiting-mail card border-0  text-white text-center mb-grid w-100\\\">\\r\\n                <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                    <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                    <i data-feather=\\\"users\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-info-title\\\">Total Awaiting Mail</div>\\r\\n                    <h3 class=\\\"card-title mb-0\\\">\\r\\n                        {{reportFacade.getTransactionsAwaitingMail}}\\r\\n                    </h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>       \\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n                <div class=\\\"card border-0 bg-danger text-white text-center mb-grid w-100\\\">\\r\\n                <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                    <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                    <i data-feather=\\\"users\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-info-title\\\">Total Rejected</div>\\r\\n                    <h3 class=\\\"card-title mb-0\\\">\\r\\n                        {{reportFacade.getRejectedTransactions}}\\r\\n                    </h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n            <div class=\\\"completed card border-0 text-white text-center mb-grid w-100\\\">\\r\\n            <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                <i data-feather=\\\"users\\\"></i>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"card-info-title\\\">Total Completed</div>\\r\\n                <h3 class=\\\"card-title mb-0\\\">\\r\\n                    {{reportFacade.getCompletedTransactions}}\\r\\n                </h3>\\r\\n                </div>\\r\\n            </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6 col-lg-3 d-flex\\\">\\r\\n            <div class=\\\"card border-0 bg-success text-white text-center mb-grid w-100\\\">\\r\\n                <div class=\\\"d-flex flex-row align-items-center h-100\\\">\\r\\n                    <div class=\\\"card-icon d-flex align-items-center h-100 justify-content-center\\\">\\r\\n                    <i data-feather=\\\"users\\\"></i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-info-title\\\">Total Returned</div>\\r\\n                    <h3 class=\\\"card-title mb-0\\\">\\r\\n                        {{reportFacade.getReturnedTransactions}}\\r\\n                    </h3>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>        \\r\\n    </div>\\r\\n            \\r\\n    <div *mobxAutorun class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-8\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\r\\n                    <div class=\\\"card-header-title\\\">Activity</div>\\r\\n\\r\\n                    <nav class=\\\"card-header-actions\\\">\\r\\n                        <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\r\\n                            <i-feather name=\\\"minus-circle\\\"></i-feather>\\r\\n                        </a>\\r\\n\\r\\n                        <a href=\\\"#\\\" class=\\\"card-header-action\\\">\\r\\n                            <i-feather name=\\\"x-circle\\\"></i-feather>\\r\\n                        </a>\\r\\n                    </nav>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"operationsFacade.getTransactionList.length !== 0; else transactionActivityReportElseBlock\\\"  class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\r\\n                    <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\r\\n                        <div class=\\\"card-header-title\\\">{{transactionStatus}}&nbsp;&nbsp;Transactions</div>\\r\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"tellerSubmittedTransaction()\\\" >Submitted</button>\\r\\n                        <button class=\\\"btn btn-warning\\\" (click)=\\\"tellerProcessingTransactions()\\\" >Processing</button>\\r\\n                        <button class=\\\"awaiting-mail btn\\\" (click)=\\\"tellerAwaitingMailTransactions()\\\" >Awaiting Mail</button>\\r\\n                    </div>\\r\\n                    <table class=\\\"table table-striped mb-0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                            <th scope=\\\"col\\\">#</th>\\r\\n                            <th scope=\\\"col\\\">Full Name</th>\\r\\n                            <th scope=\\\"col\\\">Status</th>\\r\\n                            <th scope=\\\"col\\\">Count</th>\\r\\n                            <th scope=\\\"col\\\">Amount Processed</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let activity of reportFacade.transactionActivity | paginate: { itemsPerPage: 10, currentPage: p }; let i = index;\\\" >\\r\\n                                <td>{{i + 1}}</td>\\r\\n                                <td>{{activity.tellerFullName}}</td>\\r\\n                                <td>{{activity.status}}</td>\\r\\n                                <td>{{activity.count}}</td>\\r\\n                                <td>{{activity.amountProcessed}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n                </div>\\r\\n                <ng-template #transactionActivityReportElseBlock>\\r\\n                    <h3 class=\\\"card mb-grid text-center\\\"><b><em>Work has not started today</em></b></h3>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\r\\n                    <div class=\\\"card-header-title\\\">Quick View</div>\\r\\n\\r\\n                    <nav class=\\\"card-header-actions\\\">\\r\\n                        <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card2\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card2\\\">\\r\\n                            <i-feather name=\\\"minus-circle\\\"></i-feather>\\r\\n                        </a>\\r\\n\\r\\n                        <a href=\\\"#\\\" class=\\\"card-header-action\\\">\\r\\n                            <i-feather name=\\\"x-circle\\\"></i-feather>\\r\\n                        </a>\\r\\n                    </nav>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"reportFacade.getTransactionsInRange.length != 0; else transactionAnalysisElseBlock\\\" class=\\\"card-body collapse show\\\" id=\\\"card2\\\">\\r\\n                    <form [formGroup]=\\\"quickViewForm\\\">\\r\\n                        <div class=\\\"input-group\\\"> \\r\\n                            <button class=\\\"btn btn-outline-info calendar\\\" (click)=\\\"dTo.toggle()\\\" type=\\\"button\\\">Select a Date</button>\\r\\n                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" style=\\\"width: 40%;\\\"\\r\\n                                    name=\\\"dp\\\" formControlName=\\\"dateTo\\\" ngbDatepicker #dTo=\\\"ngbDatepicker\\\">\\r\\n                            <button (click)=\\\"retrieveAnalysis()\\\" class=\\\"btn btn-info\\\">Retrieve</button>\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                            \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    \\r\\n                </div>\\r\\n                <ng-template #transactionAnalysisElseBlock>\\r\\n                    <h3 class=\\\"card mb-grid text-center\\\"><b><em>No analysis spooled</em></b></h3>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { Configuration } from 'src/app/config';\nimport { OperationsFacade } from 'src/app/services/operations/operationsfacade';\nimport { ReportFacade } from 'src/app/services/admin/reportsfacade';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { GeneralService } from '../services/general.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DateRangeApiModel } from '../apimodels/daterangeapimodel';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  \n  transactionStatus: string;\n  quickViewForm: FormGroup;\n  search: boolean = false;\n\n  p: number = 1;\n  collection: any[] = this.reportFacade.transactionsBreakdownList;\n\n  private _hubConnection: HubConnection;\n  constructor(private _configuration: Configuration, public operationsFacade: OperationsFacade,\n    public reportFacade: ReportFacade, private _generalService: GeneralService, \n    public spinner: NgxSpinnerService) { \n      this.quickViewForm = new FormGroup({\n        dateTo: new FormControl('')\n      });\n    }\n\n  startSignalRConnection(){\n    let builder = new HubConnectionBuilder();\n    this._hubConnection = builder.withUrl(this._configuration.ApiServerSSL + 'transactions').build();\n\n    this._hubConnection.on('GetTodayTransactions', data => {\n      this.operationsFacade.transactions = data;\n      this.reportFacade.sortCompletedTransactions(this.operationsFacade.transactions);\n      this.reportFacade.sortRejectedTransactions(this.operationsFacade.transactions);\n      this.reportFacade.sortTransactionsAwaitingMail(this.operationsFacade.transactions);\n      this.reportFacade.sortTransactionsBeingProcessed(this.operationsFacade.transactions);\n      this.reportFacade.sortSubmittedTransactions(this.operationsFacade.transactions);\n      this.reportFacade.sortReturnedTransactions(this.operationsFacade.transactions);     \n    });\n\n    this._hubConnection.start().then(() => console.log(\"connected\"));\n  }\n\n  ngOnInit() {    \n    this.reportFacade.prepareSubmittedTransactionActiviity(this.operationsFacade.transactions);\n    this.startSignalRConnection();\n  }\n\n  tellerSubmittedTransaction(){\n    this.reportFacade.prepareSubmittedTransactionActiviity(this.operationsFacade.transactions);\n    this.transactionStatus = \"Submitted\";\n  }\n\n  tellerProcessingTransactions(){\n    this.reportFacade.prepareProcessingTransactionActiviity(this.operationsFacade.transactions);\n    this.transactionStatus = \"Processing\";\n  }\n\n  tellerAwaitingMailTransactions(){\n    this.reportFacade.prepareAwaitingMailTransactionActiviity(this.operationsFacade.transactions);\n    this.transactionStatus = \"Awaiting Mail\";\n  }\n\n  retrieveAnalysis(){\n    this.spinner.show();\n    let dateRange = new DateRangeApiModel();\n    let dateTo: string = this.quickViewForm.get(\"dateTo\").value;\n\n    dateRange.dateFrom = dateTo;\n    dateRange.dateTo = dateTo;\n\n    this._generalService.getTransactionsInDateRange(dateRange)\n        .subscribe((data: QueueITTransaction[]) => {\n          if(data){\n            this.spinner.hide();\n            this.search = true;\n            this.reportFacade.transactionsInRange = data;\n            this.reportFacade.sortCompletedTransactions(this.reportFacade.transactionsInRange);\n            this.reportFacade.sortSubmittedTransactions(this.reportFacade.transactionsInRange);\n            this.reportFacade.sortReturnedTransactions(this.reportFacade.transactionsInRange);\n            \n            return;\n          }         \n        });\n  }\n}\n","module.exports = \".navbar-brand-image {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.page-login {\\r\\n    max-width: 35rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZ2V0bmV3dXNlcnByb2ZpbGUvZ2V0bmV3dXNlcnByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vZ2V0bmV3dXNlcnByb2ZpbGUvZ2V0bmV3dXNlcnByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItYnJhbmQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLWxvZ2luIHtcclxuICAgIG1heC13aWR0aDogMzVyZW07XHJcbn0iXX0= */\"","module.exports = \"<ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner> \\n<div class=\\\"adminx-container\\\" style=\\\"padding: 0.5rem;\\\">    \\n    <div class=\\\"page-login\\\" style=\\\"max-width: 35rem; margin: auto; \\\">        \\n        <alert></alert>\\n      <div class=\\\"text-center\\\">\\n        <a class=\\\"navbar-brand mb-4 h1\\\" [routerLink]=\\\"['/admin/login']\\\">\\n          <img class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" src=\\\"./../../../assets/images/cbs-signature[15928]-new.png\\\" alt=\\\"greatplacetowork\\\">\\n        </a>\\n        <hr/>\\n      </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"getNewUserProfileForm\\\">\\n            <a [routerLink]=\\\"['/admin/login']\\\" class=\\\"btn btn-sm btn-block btn-primary\\\" style=\\\"color: white\\\">Back to Login</a>\\n            <br/>\\n            <h3 class=\\\"text-center\\\">Get Your New Profile Here</h3>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleDropdownFormEmail1\\\" class=\\\"form-label\\\">Email address</label>\\n              <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleDropdownFormEmail1\\\" placeholder=\\\"Enter Email Address\\\">\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isNotNull; else elseNoUserFound\\\">\\n                <p class=\\\"card-text\\\">\\n                     <em>Name: &nbsp;<b>{{userAccess.user.firstname}}&nbsp;&nbsp;{{userAccess.user.lastname}}</b></em>\\n                </p>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isNotNull\\\">\\n                <p class=\\\"card-text\\\" *ngFor=\\\"let role of userAccess.user.roles\\\">\\n                    <em>Role: &nbsp;<b>{{role}}</b></em>\\n                </p>\\n            </div>\\n            <button *ngIf=\\\"!isNotNull\\\" [disabled]=\\\"!getNewUserProfileForm.valid\\\" (click)=\\\"getUserDetails()\\\" class=\\\"btn btn-sm btn-block btn-success\\\">Retrieve Details</button>\\n            <button *ngIf=\\\"isNotNull\\\"  class=\\\"btn btn-sm btn-block btn-success\\\" (click)=\\\"getNewUserProfile()\\\" >Create New Profile</button>            \\n            <ng-template #elseNoUserFound>\\n                <h1 *ngIf=\\\"isNotNull\\\">No Existing User with that Email. Please verify and try again</h1>\\n            </ng-template>         \\n          </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserAccess } from './../services/userAccess';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../services/auth.service';\nimport { Accounts } from 'src/app/valueobjects/accountvo';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-getnewuserprofile',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './getnewuserprofile.component.html',\n  styleUrls: ['./getnewuserprofile.component.css']\n})\nexport class GetnewuserprofileComponent implements OnInit {\n\n  getNewUserProfileForm: FormGroup;\n  isNotNull: boolean = false;\n\n  constructor(public userAccess: UserAccess, private spinner: NgxSpinnerService,\n    private authService: AuthService, public alertService: AlertService) { \n    this.getNewUserProfileForm = new FormGroup({\n      email: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  getNewUserProfile(){\n    this.spinner.show();\n    this.authService.getNewUserProfile(this.userAccess.user.email)\n        .subscribe((data) => {\n          if(data != null || data != undefined){\n            this.spinner.hide();\n            this.userAccess.user.identity = data.id;\n            this.userAccess.user.email = data.email;\n            this.userAccess.user.firstname = data.firstname;\n            this.userAccess.user.lastname = data.lastname;\n            this.userAccess.user.roles = data.roles;\n            this.alertService.success(\"Yes! You now have a new profile. You can signin now.\")\n          }\n          else{\n            this.spinner.hide();\n            this.alertService.error(\"Your new profile setup was unsuccessful. Please try again.\");\n          }          \n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n          this.alertService.error(\"Something went wrong. Please contact the IT Department.\");\n      });\n  }\n\n  getUserDetails(){\n    this.spinner.show();\n    let email = this.getNewUserProfileForm.get(\"email\").value;\n     this.authService.getUserOldAccount(email)\n        .subscribe((data: Accounts) => {\n          if(data != null || data != undefined){\n            this.spinner.hide();\n            this.userAccess.user.firstname = data.firstname;\n            this.userAccess.user.lastname = data.lastname;\n            this.userAccess.user.legacyId = data.identity;\n            this.userAccess.user.email = data.username;\n            this.userAccess.user.roles = data.roles;\n            this.isNotNull = true;\n            this.getNewUserProfileForm.setValue({\n              email: this.userAccess.user.email\n            });\n          }else{\n            this.spinner.hide();\n            this.alertService.error(\"We can't find your account. Please contact IT Department.\");\n          }           \n      },\n      (err: HttpErrorResponse) => {\n        this.spinner.hide();\n        this.alertService.error(\"Something went wrong. Please try again.\");\n      });\n  }\n\n}\n","module.exports = \".navbar-brand-image {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.page-login {\\r\\n    max-width: 35rem;    \\r\\n}\\r\\n\\r\\n.text-align{\\r\\n    text-align: left;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItYnJhbmQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLWxvZ2luIHtcclxuICAgIG1heC13aWR0aDogMzVyZW07ICAgIFxyXG59XHJcblxyXG4udGV4dC1hbGlnbntcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iXX0= */\"","module.exports = \"<ngx-spinner \\nbdOpacity = 0.9\\nbdColor = \\\"rgba(182,217,216,0.42)\\\"\\nsize = \\\"medium\\\"\\ncolor = \\\"#48567c\\\"\\ntype = \\\"ball-running-dots\\\"\\n[fullScreen] = \\\"true\\\">\\n</ngx-spinner>  \\n<!-- Modal -->\\n<form [formGroup]=\\\"roleSelectionForm\\\">\\n    <button #selectRoleButton type=\\\"button\\\" class=\\\"btn btn-primary\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\" hidden>Select a role</button>\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Select a Role</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <ul style=\\\"display: inline-flex; list-style: none;\\\">\\n              <li><button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"goToAdministration()\\\">Administrator</button></li>  &nbsp;&nbsp;\\n              <li><button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goToOperations()\\\"> Operations </button></li>  \\n            </ul>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n          <button #closeModalButton type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" hidden>Close</button>\\n          </div>\\n      </div>\\n      </div>\\n  </div>\\n</form>\\n<!-- Modal -->\\n  <div class=\\\"adminx-container\\\" style=\\\"padding: 0.5rem;\\\">        \\n    <div class=\\\"page-login\\\" style=\\\"max-width: 35rem; margin: auto; \\\">\\n      <div class=\\\"text-center\\\">\\n        <a class=\\\"navbar-brand mb-4 h1\\\" [routerLink]=\\\"['/admin/login']\\\">\\n          <img class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" src=\\\"assets/images/cbs-signature[15928]-new.png\\\" alt=\\\"greatplacetowork\\\">\\n        </a>\\n        <hr/>\\n      </div>   \\n            \\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"loginForm\\\" class=\\\"text-align\\\">  \\n          <alert></alert>             \\n            <div class=\\\"form-group\\\"> \\n            <label for=\\\"username\\\" class=\\\"form-label\\\">Email address</label>\\n            <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"Enter Your Email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\" class=\\\"form-label\\\">Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\"  class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Enter Your Password\\\">\\n          </div>\\n          <button type=\\\"submit\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-sm btn-block btn-success\\\">Login</button>\\n        </form>\\n      </div>\\n      <div class=\\\"card-footer text-center\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <em> Old User?</em> &nbsp;&nbsp; <a [routerLink]=\\\"['/admin/getnewuserprofile']\\\"><small><em>Get New Profile</em></small></a>\\n            </div>\\n          </div>            \\n      </div>\\n    </div>\\n  </div>\\n  \\n    \"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { OperationsService } from 'src/app/operations/services/operations.service';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { AuthService } from '../services/auth.service';\nimport { UserLoginApiModel } from '../apimodels/userloginapimodel';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserAccess } from './../services/userAccess';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Accounts } from 'src/app/valueobjects/accountvo';\nimport { AuthResult } from '../apimodels/authresult';\nimport { UserVO } from 'src/app/valueobjects/userVO';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private _hubConnection: HubConnection;\n  loginForm: FormGroup;\n  // tellerLoginForm: FormGroup;\n  roleSelectionForm: FormGroup;\n  isRequesting: boolean;\n  getNewUserProfileForm: FormGroup;\n  isNotNull: boolean = false;\n\n  @ViewChild('selectTellerLoginButton') fileInputOpenModal: ElementRef;\n  @ViewChild('closeModalButton') fileInputCloseModal: ElementRef;\n  @ViewChild('selectNewProfileButton')fileInputNewProfileOpenModal: ElementRef;\n  \n  constructor(private _router: Router, private _operationsService: OperationsService, \n    public transactionStore: TransactionStore, private _authService: AuthService,\n    public userAccess: UserAccess, private spinner: NgxSpinnerService, public alertService: AlertService) { \n      this.loginForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n      // this.tellerLoginForm = new FormGroup({\n      //   username: new FormControl('', Validators.required),\n      //   password: new FormControl('', Validators.required)\n      // });\n      this.roleSelectionForm = new FormGroup({\n\n      });\n      this.getNewUserProfileForm = new FormGroup({\n        email: new FormControl('', Validators.required)\n      });\n    }\n  \n  ngOnInit() {     \n    this._authService.logout();\n  }\n\n  goToAdministration(){\n    this._router.navigate(['admin']);\n    this.userAccess.auth = true;\n    this.fileInputCloseModal.nativeElement.click();\n  }\n\n  goToOperations(){\n    this._router.navigate(['operations']);\n    this.userAccess.auth = true;\n    this.fileInputCloseModal.nativeElement.click();\n  }\n\n  async login(){    \n     this.spinner.show();\n    let model = new UserLoginApiModel();\n    model.Username = this.loginForm.get('username').value;\n    model.Password = this.loginForm.get('password').value;\n\n    await this._authService.login(model)\n      .subscribe((data:AuthResult) => {\n        if(data.authenticated){  \n            this.setUserData(data);\n            this.spinner.hide();\n        }\n        else{\n          this.spinner.hide();\n          this.alertService.error(\"Oops! Login details are wrong. You need to remember them.\");\n        }                                \n      },\n      (err: HttpErrorResponse) => {\n        this.spinner.hide();\n        this.alertService.error(\"Oops! Something went wrong. Please try again.\");\n      }\n    );   \n    \n    this._operationsService.getTodaysTransactions()\n    .subscribe((data: QueueITTransaction[]) => {\n      \n    });\n    \n  }\n\n  async setUserData(response: AuthResult){\n    await this._authService.getUserUsingId(response.id)\n      .subscribe((userdetails: UserVO) => {\n        if(userdetails.isActive){                    \n          this.spinner.hide(); \n          this.userAccess.user.identity = userdetails.identity;\n          this.userAccess.user.email = userdetails.email;\n          this.userAccess.user.firstname = userdetails.firstname;\n          this.userAccess.user.lastname = userdetails.lastname;\n          this.userAccess.user.roles = userdetails.roles;\n          this._authService.setSession(response);\n          /**use the user role to determine\n           * what page to navigate to\n           */\n          let noOfRolesCheckResult = this.userAccess.isHasMoreThanOneRole(this.userAccess.user.roles);\n          if(noOfRolesCheckResult){\n            this.fileInputOpenModal.nativeElement.click();\n          }\n          else{\n            this.userAccess.auth = true;\n            let route:string = this.userAccess.accessibleRoute(this.userAccess.user.roles[0]);\n            this._router.navigate([route]);\n          }          \n        }\n        else{\n          this.alertService.error(\"Oops! Your account has been deactivated. Contact the Operations Department.\");\n        } \n    });\n  }\n\n  getNewUserProfile(){\n    this.spinner.show();\n    this._authService.getNewUserProfile(this.userAccess.user.email)\n        .subscribe((data) => {\n          this.spinner.hide();\n          this.userAccess.user.identity = data.id;\n          this.userAccess.user.email = data.email;\n          this.userAccess.user.firstname = data.firstname;\n          this.userAccess.user.lastname = data.lastname;\n          this.userAccess.user.roles = data.roles;\n          this.alertService.success(\"Yes! You now have a new profile. You can signin now.\")\n        },\n        (err: HttpErrorResponse) => {\n          this.alertService.error(\"Something went wrong. Please contact the IT Department.\");\n      });\n  }\n\n  getUserDetails(){\n    this.spinner.show();\n    let email = this.getNewUserProfileForm.get(\"email\").value;\n    this._authService.getUserOldAccount(email)\n        .subscribe((data: Accounts) => {\n          this.spinner.hide();\n          this.userAccess.user.firstname = data.firstname;\n          this.userAccess.user.lastname = data.lastname;\n          this.userAccess.user.legacyId = data.identity;\n          this.userAccess.user.email = data.username;\n          this.userAccess.user.roles = data.roles;\n          this.isNotNull = true;\n          console.log(this.userAccess.user);\n          this.getNewUserProfileForm.setValue({\n            email: this.userAccess.user.email\n          });\n      },\n      (err: HttpErrorResponse) => {\n        this.alertService.error(\"We can't find your account. Please contact IT Department.\");\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21hbmFnZXVzZXJwcm9maWxlL21hbmFnZXVzZXJwcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Manage User Profile</li>\\n    </ol>\\n</nav>\\n\\n<div class=\\\"pb-3\\\">\\n    <h1>Manage User Profile</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>    \\n    <div class=\\\"col-lg-5\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">User Details</div>\\n\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form [formGroup]=\\\"manageUserForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"firstname\\\">First Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstname\\\" class=\\\"form-control\\\" aria-describedby=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\">                \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"lastname\\\">Last Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\" aria-describedby=\\\"lastName\\\" placeholder=\\\"Enter Last Name\\\">                \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"exampleInputEmail\\\">Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" aria-describedby=\\\"Email\\\" placeholder=\\\"Enter Email Address\\\">                \\n                </div>\\n                <div class=\\\"form-group\\\">                   \\n                    <input type=\\\"checkbox\\\" formControlName=\\\"isactive\\\" value=\\\"IsActive\\\">\\n                    <label class=\\\"form-label\\\" for=\\\"isActive\\\">IsActive</label>\\n                </div>\\n                <input type=\\\"hidden\\\" formControlName=\\\"id\\\">   \\n                <button [disabled]=\\\"!manageUserForm.valid\\\" *ngIf=\\\"buttonName === 'Add New User'; else elseBlock\\\" (click)=\\\"addUser()\\\"  class=\\\"btn btn-success notika-btn-success\\\">Add New User</button>\\n                <ng-template #elseBlock>\\n                    <button [disabled]=\\\"!manageUserForm.valid\\\" *ngIf=\\\"buttonName === 'Update User';\\\" (click)=\\\"updateUser()\\\" class=\\\"btn btn-success notika-btn-success\\\">Update User</button>\\n                </ng-template>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n        <!-- Table seamless striped -->\\n        <div *ngIf=\\\"userFacade.getUsers != 0; else elseNoUsersBlock\\\" class=\\\"card mb-grid\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" placeholder=\\\"Search Users\\\" [ngModelOptions]=\\\"{standalone:true}\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Current Users</div>\\n            </div>\\n            <br/>\\n            <div style=\\\"padding: 2%;height: 4%;\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 14rem; float: left;\\\" *ngFor=\\\"let user of userFacade.getUsers | user: searchText | paginate: { itemsPerPage: 3, currentPage: p };\\\">\\n                    <img style=\\\"width: 13.5rem;\\\" class=\\\"card-img-top\\\" src=\\\"./../../../assets/images/user.png\\\" alt=\\\"Card image cap\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <h6 class=\\\"card-title\\\" style=\\\"font-size: small;\\\">\\n                            {{user.firstname}}&nbsp;&nbsp;{{user.lastname}}&nbsp;&nbsp;| &nbsp;&nbsp;isActive&nbsp;&nbsp;<input type=\\\"checkbox\\\" value=\\\"IsActive\\\" [checked]=\\\"user.isActive\\\"/>\\n                        </h6>\\n                        <button (click)=\\\"editUser(user.identity)\\\" class=\\\"btn btn-info\\\">Edit</button> &nbsp;\\n                        <button *ngIf=\\\"user.isActive\\\"  (click)=\\\"deactivateUser(user.identity)\\\" class=\\\"btn btn-danger\\\">Deactivate</button> &nbsp;\\n                        <button *ngIf=\\\"!user.isActive\\\"  (click)=\\\"reactivateUser(user.identity)\\\" class=\\\"btn btn-active\\\">Reactivate</button>                             \\n                        <br/>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>        \\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>   \\n        </div>\\n        <ng-template #elseNoUsersBlock>\\n            <h1 class=\\\"card mb-grid text-center\\\"><b><em>No existing users</em></b></h1>\\n        </ng-template> \\n    </div>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GeneralService } from '../services/general.service';\nimport { UserFacade } from 'src/app/services/admin/userfacade';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { ManageUserApiModel } from '../apimodels/manageuserapimodel';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { RoleFacade } from 'src/app/services/admin/rolefacade';\nimport { Role } from 'src/app/domainmodel/role';\nimport { AlertService } from 'src/app/shared/_services';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-manageuserprofile',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './manageuserprofile.component.html',\n  styleUrls: ['./manageuserprofile.component.css']\n})\nexport class ManageuserprofileComponent implements OnInit {  \n  \n  buttonName: string = \"Add New User\";\n  manageUserForm: FormGroup;\n  isLoading: boolean = true;\n\n  p: number = 1;\n  collection: any[] = this.userFacade.users;\n\n  constructor(private _generalService: GeneralService, public userFacade: UserFacade,\n     public roleFacade: RoleFacade, public alertService: AlertService,\n     private spinner: NgxSpinnerService) { \n    this.manageUserForm = new FormGroup({\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      id: new FormControl(''),\n      isactive: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    this.alertService.success(\"Works\");\n    this._generalService.getUsers()\n        .subscribe((data: UserVO[]) => {\n          this.userFacade.users = data;\n        });\n      this._generalService.getRoles()\n        .subscribe((data: Role[]) => {\n            this.roleFacade.roles = data;\n        },\n        (err: HttpErrorResponse) => {\n            console.log(\"Error: \" + err);\n        }\n    );\n  }\n\n  addUser(){\n    this.spinner.show();\n    let model = new ManageUserApiModel();\n    model.firstname = this.manageUserForm.get(\"firstname\").value;\n    model.lastname = this.manageUserForm.get(\"lastname\").value;\n    model.email = this.manageUserForm.get(\"email\").value;\n    model.isactive = this.manageUserForm.get(\"isactive\").value;\n\n    this._generalService.register(model)\n        .subscribe((data) => {\n          if(data){\n            this.spinner.hide();\n            this.userFacade.user.identity = data.id;\n            this.userFacade.user.email = data.email;\n            this.userFacade.user.firstname = data.firstname;\n            this.userFacade.user.lastname = data.lastname;\n            this.userFacade.user.isActive = data.isactive;\n            this.userFacade.users.push(this.userFacade.user);\n\n            this.alertService.success(this.userFacade.user.firstname + \" \" + this.userFacade.user.lastname + \" was successfully registered.\")\n          }  \n        },\n        (err: HttpErrorResponse) => {\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"Registration Failed. Please try again.\");\n        }\n      );\n  }\n\n  editUser(id: any){\n    this.userFacade.user = this.userFacade.getUser(id);\n    this.manageUserForm.setValue({\n       firstname: this.userFacade.user.firstname,\n       lastname: this.userFacade.user.lastname,\n       email: this.userFacade.user.email,\n       id: this.userFacade.user.identity,\n       isactive: this.userFacade.user.isActive\n    });\n    this.buttonName = \"Update User\";\n  }\n\n  deactivateUser(id: string){\n    this.spinner.show();\n    this._generalService.deactivateUser(id)\n        .subscribe(() => { \n          this.spinner.hide();         \n          let user = this.userFacade.getUser(id);\n          this.userFacade.updateUser(user);                    \n          this.userFacade.error = \"works\";\n          this.alertService.success(this.userFacade.error);\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"Deactivation Failed. Please try again!\")          \n      });\n  }\n\n  reactivateUser(id: any){\n    this.spinner.show();\n    this._generalService.reactivateUser(id)\n        .subscribe(() => {\n          this.spinner.hide();\n          this.alertService.success(\"User Successfully Reactivated\");\n          let user = this.userFacade.getUser(id);\n          this.userFacade.updateUser(user);\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"Reactivation Failed. Please try again!\")          \n      });\n  }\n\n  updateUser(){\n    this.spinner.show();\n    let model = new ManageUserApiModel();\n    model.firstname = this.manageUserForm.get(\"firstname\").value;\n    model.lastname = this.manageUserForm.get(\"lastname\").value;\n    model.email = this.manageUserForm.get(\"email\").value;\n    model.id = this.manageUserForm.get(\"id\").value;\n    this._generalService.updateUser(model)\n        .subscribe(()=> {\n          this.spinner.hide();\n          this.userFacade.updateUser(this.userFacade.user);\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"User Details Update Failed. Please try again.\");\n        }\n      );\n\n    this.manageUserForm.reset();\n    this.buttonName = \"Add New User\";\n  }\n}\n","module.exports = \".card-spacing{\\r\\n    float: left;\\r\\n    padding: 2%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWFuYWdldXNlcnJvbGUvbWFuYWdldXNlcnJvbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9tYW5hZ2V1c2Vycm9sZS9tYW5hZ2V1c2Vycm9sZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtc3BhY2luZ3tcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgcGFkZGluZzogMiU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Manage User Role</li>\\n    </ol>\\n</nav>\\n\\n<div class=\\\"pb-3\\\">\\n    <h1>Manage User Role</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>    \\n    <div class=\\\"col-lg-5\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">User Role Details</div>\\n\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n                <form [formGroup]=\\\"manageUserRoleForm\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-label\\\" for=\\\"firstname\\\">Email</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" aria-describedby=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\">                \\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"form-label\\\" for=\\\"lastname\\\">Role</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"roleid\\\">\\n                            <option value=\\\"\\\" disabled selected>--Select Role--</option>\\n                            <option *ngFor=\\\"let role of roleFacade.getAllRoles\\\" [value]=\\\"role.name\\\">{{role.name}}</option>\\n                        </select>\\n                    </div>\\n                    <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\n                    <button [disabled]=\\\"!manageUserRoleForm.valid\\\" (click)=\\\"addRoleToUser()\\\"  class=\\\"btn btn-success notika-btn-success\\\">\\n                    Add Role To User\\n                    </button>\\n                    &nbsp;&nbsp;\\n                    <button [disabled]=\\\"!manageUserRoleForm.valid\\\" (click)=\\\"removeRoleFromUser()\\\" class=\\\"btn btn-success notika-btn-success\\\">\\n                    Remove Role From User\\n                    </button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n        <!-- Table seamless striped -->\\n        <div *ngIf=\\\"userFacade.getUsers != 0; else elseNoUsersBlock\\\" class=\\\"card mb-grid\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" placeholder=\\\"Search Users\\\" [ngModelOptions]=\\\"{standalone:true}\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Current Users</div>\\n            </div>\\n            <div style=\\\"padding: 2%;height: 4%;\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 14rem; float: left;\\\" *ngFor=\\\"let user of userFacade.getUsers | user: searchText | paginate: { itemsPerPage: 3, currentPage: p };\\\">\\n                    <img style=\\\"width: 13.5rem;\\\" class=\\\"card-img-top\\\" src=\\\"./../../../assets/images/user.png\\\" alt=\\\"Card image cap\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <h6 class=\\\"card-title\\\" style=\\\"font-size: small;\\\">\\n                            {{user.firstname}}&nbsp;&nbsp;{{user.lastname}}&nbsp;&nbsp;| &nbsp;&nbsp;isActive&nbsp;&nbsp;<input type=\\\"checkbox\\\" value=\\\"IsActive\\\" [checked]=\\\"user.isActive\\\"/>\\n                        </h6>\\n                        <button (click)=\\\"editUser(user.identity)\\\" class=\\\"btn btn-info\\\">Edit</button>\\n                    </div>\\n                </div>\\n            </div>        \\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>  \\n        </div>\\n        <ng-template #elseNoUsersBlock>\\n            <h1 class=\\\"card mb-grid text-center\\\"><b><em>No existing users</em></b></h1>\\n        </ng-template> \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from '../services/general.service';\nimport { Role } from 'src/app/domainmodel/role';\nimport { RoleFacade } from 'src/app/services/admin/rolefacade';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ManageUserRoleApiModel } from \"../apimodels/manageuserroleapimodel\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UserFacade } from 'src/app/services/admin/userfacade';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-manageuserrole',\n  templateUrl: './manageuserrole.component.html',\n  styleUrls: ['./manageuserrole.component.css']\n})\nexport class ManageuserroleComponent implements OnInit {\n\n  manageUserRoleForm: FormGroup;\n\n  p: number = 1;\n  collection: any[] = this.userFacade.users;\n\n  constructor(private _generalService: GeneralService, public roleFacade: RoleFacade,\n    private spinner: NgxSpinnerService, public userFacade: UserFacade,\n    private alertService: AlertService) { \n    this.manageUserRoleForm = new FormGroup({\n      email: new FormControl('', Validators.required),\n      roleid: new FormControl('', Validators.required),\n      id: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n    this._generalService.getUsers()\n        .subscribe((data: UserVO[]) => {\n          this.userFacade.users = data;\n        });\n    this._generalService.getRoles()\n          .subscribe((data: Role[]) => {\n            this.spinner.hide();\n              this.roleFacade.roles = data;\n          },\n          (err: HttpErrorResponse) => {\n              console.log(\"Error: \" + err);\n          }\n      );\n  }\n\n  editUser(id: any){\n    this.userFacade.user = this.userFacade.getUser(id);\n    this.manageUserRoleForm.setValue({\n       //roleid: this.,\n       email: this.userFacade.user.email,\n       id: this.userFacade.user.identity\n    });\n  }\n\n  addRoleToUser(){\n    this.spinner.show();\n    let model = new ManageUserRoleApiModel();\n    model.email = this.manageUserRoleForm.get(\"email\").value;\n    model.rolename = this.manageUserRoleForm.get(\"rolename\").value;\n\n    this._generalService.addRoleToUser(model)\n        .subscribe(()=>{\n          this.spinner.hide();\n          this.alertService.success(\"Role Successful Added to User.\");\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Adding Role to User Failed. Please try again.\");\n        }\n        );\n  }\n\n  removeRoleFromUser(){\n    this.spinner.show();\n    let model = new ManageUserRoleApiModel();\n    model.email = this.manageUserRoleForm.get(\"email\").value;\n    model.rolename = this.manageUserRoleForm.get(\"rolename\").value;\n\n    this._generalService.removeRoleFromUser(model)\n        .subscribe(() => {\n          this.spinner.hide();\n          this.alertService.success(\"Role Removal Successful\");\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Role Removal Failed. Please try again.\");\n        }\n        );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\n\n@Pipe({\n  name: 'transaction'\n})\nexport class TransactionPipe implements PipeTransform {\n  transform(transactions: QueueITTransaction[], searchText: any): any {\n    if(searchText == null)\n        return transactions;\n\n    return transactions.filter(function(transaction){\n      return (transaction.customerName.firstname.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.customerName.lastname.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.platenumber.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.amount.toString().indexOf(searchText.toString()) > -1);      \n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { UserVO } from 'src/app/valueobjects/userVO';\n\n@Pipe({\n  name: 'user'\n})\nexport class UserPipe implements PipeTransform {\n\n  transform(users: UserVO[], searchText: any): any {\n    if(searchText == null)\n        return users;\n    \n    return users.filter(function(user){\n        return (user.firstname.toLowerCase().indexOf(searchText.toLowerCase())> -1)\n        || (user.lastname.toLowerCase().indexOf(searchText.toLowerCase())> -1)\n        || (user.email.toLowerCase().indexOf(searchText.toLowerCase())> -1)\n    });\n  }\n\n}\n","module.exports = \".custom-calendar-input {\\r\\n    z-index: 2;\\r\\n    margin: 0;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.custom-calendar, .custom-calendar-input {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: calc(2.5rem + 2px);\\r\\n}\\r\\n\\r\\n.table table.innertbl td {border-top:none !important; padding:0 0 8px 0 !important;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcmVwb3J0L3JlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLDBCQUEwQjtBQUM5Qjs7QUFFQSwwQkFBMEIsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9yZXBvcnQvcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWNhbGVuZGFyLWlucHV0IHtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY3VzdG9tLWNhbGVuZGFyLCAuY3VzdG9tLWNhbGVuZGFyLWlucHV0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBjYWxjKDIuNXJlbSArIDJweCk7XHJcbn1cclxuXHJcbi50YWJsZSB0YWJsZS5pbm5lcnRibCB0ZCB7Ym9yZGVyLXRvcDpub25lICFpbXBvcnRhbnQ7IHBhZGRpbmc6MCAwIDhweCAwICFpbXBvcnRhbnQ7fSJdfQ== */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Reports</li>\\n    </ol>\\n</nav>\\n\\n<div class=\\\"pb-3\\\">\\n    <h1>Reports</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>    \\n    <div class=\\\"col-lg-5\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Reports</div>\\n\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form [formGroup]=\\\"reportForm\\\">\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-6 mb-3\\\">\\n                        <div class=\\\"input-group\\\">\\n                            <button class=\\\"btn btn-outline-primary calendar\\\" (click)=\\\"dFrom.toggle()\\\" type=\\\"button\\\">From</button>\\n                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" style=\\\"width: 65%;\\\"\\n                                    name=\\\"dp\\\" formControlName=\\\"dateFrom\\\" ngbDatepicker #dFrom=\\\"ngbDatepicker\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                            \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6 mb-3\\\">\\n                        <div class=\\\"input-group\\\"> \\n                                <button class=\\\"btn btn-outline-info calendar\\\" (click)=\\\"dTo.toggle()\\\" type=\\\"button\\\">To</button>\\n                            <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" style=\\\"width: 65%;\\\"\\n                                    name=\\\"dp\\\" formControlName=\\\"dateTo\\\" ngbDatepicker #dTo=\\\"ngbDatepicker\\\">\\n                            <div class=\\\"input-group-append\\\">\\n                            \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"button\\\" (click)=\\\"retrieveReportInRange()\\\"  class=\\\"btn btn-success\\\">GO</button>\\n                </div>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">SnapShot</div>\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card2\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card2\\\">\\n                        <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n            <div *ngIf=\\\"reportFacade.getTransactionsInRange.length != 0; else analyseReportElseBlock\\\" class=\\\"card-body collapse show\\\" id=\\\"card2\\\">\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-3 mb-3\\\">\\n                        Submitted:&nbsp;&nbsp;{{reportFacade.getSummaryOfSubmittedTransactions}}\\n                    </div>\\n                    <div class=\\\"col-md-3 mb-3\\\">\\n                        Completed:&nbsp;&nbsp;{{reportFacade.getSummaryOfCompletedTransactions}}\\n                    </div>\\n                    <div class=\\\"col-md-3 mb-3\\\">\\n                        Returned:&nbsp;&nbsp;{{reportFacade.getSummaryOfReturnedTransactions}}\\n                    </div>\\n                    <div class=\\\"col-md-3 mb-3\\\">\\n                        Total:&nbsp;&nbsp;{{reportFacade.getSumOfTransactionsInRange}}\\n                    </div>\\n                </div>\\n            </div>\\n            <ng-template #analyseReportElseBlock>\\n                <h3 class=\\\"card mb-grid text-center\\\"><b><em>No transactions to analyse</em></b></h3>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n    <div class=\\\"card mb-grid col-lg-12\\\">\\n        <div *ngIf=\\\"reportFacade.getTransactionsInRange.length != 0; else reportElseBlock\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                        <div class=\\\"card-header-title\\\">\\n                            Transactions between <em>{{displayDateFrom.day}}-{{displayDateFrom.month}}-{{displayDateFrom.year}} </em>\\n                            &nbsp; and &nbsp;\\n                            <em> {{displayDateTo.day}}-{{displayDateTo.month}}-{{displayDateTo.year}}</em>\\n                        </div>\\n                      </div>\\n                    <table class=\\\"table table-hover mb-0\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>#</th>\\n                                <th>Customer</th>\\n                                <th>Reg. No.</th>\\n                                <th>Amount</th>\\n                                <th>transaction. Type</th>\\n                                <th>Submitted</th>\\n                                <th>Completed</th>\\n                                <th>Rejected</th>\\n                                <th>Created</th>\\n                                <th>Created By</th>\\n                                <th>Treated By</th>\\n                                <th>Status</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let transaction of reportFacade.getTransactionsInRange | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\">\\n                                <td>{{i + 1}}</td>\\n                                <td>{{transaction.customerName.firstname}}&nbsp;&nbsp;&nbsp;{{transaction.customerName.lastname}} </td>\\n                                <td>{{transaction.platenumber}}</td>\\n                                <td>{{transaction.amount}}</td>\\n                                <td>{{transaction.transactionType}}</td>\\n                                <td>{{transaction.timeSubmitted | date:' h:mma'}}</td>\\n                                <td>{{transaction.timeCompleted | date:' h:mma'}}</td>\\n                                <td *ngIf=\\\"transaction.timeRejected != 'null'\\\"> \\n                                    <table class=\\\"innertbl\\\">\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let time of transaction.timeRejected\\\" style=\\\"word-wrap: break-word;\\\">\\n                                                <td>{{time | date:' h:mma'}}</td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\t\\t\\t\\n                                </td>\\n                                <td>{{transaction.timeSubmitted | date: 'dd/MM/yy'}}</td>\\n                                <td>{{transaction.createdBy.firstname}}&nbsp;{{transaction.createdBy.lastname}}</td>\\n                                <td >\\n                                    <table class=\\\"innertbl\\\">\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let teller of transaction.treatedBy\\\" style=\\\"word-wrap: break-word;\\\">\\n                                                    <td>{{teller.firstname}}&nbsp;{{teller.lastname}}</td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\t\\t\\t\\t\\t\\t\\n                                </td>\\t\\t\\t\\t\\n                                <td>{{transaction.status}}</td>\\t\\t\\t\\t\\t\\n                            </tr>\\n                        </tbody>\\n                    </table>    \\n                    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>                    \\n                </div>                \\n    </div>\\n    <ng-template #reportElseBlock>\\n        <h3 class=\\\"card mb-grid text-center\\\"><b><em>No transactions request made</em></b></h3>\\n    </ng-template>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DateRangeApiModel } from '../apimodels/daterangeapimodel';\nimport { GeneralService } from '../services/general.service';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { ReportFacade } from 'src/app/services/admin/reportsfacade';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-report',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  reportForm: FormGroup;\n  displayDateFrom: any;\n  displayDateTo: any;\n  search: boolean;\n\n  p: number = 1;\n  collection: any[] = this.reportFacade.transactionsInRange;\n\n  constructor(private _generalService: GeneralService, public reportFacade: ReportFacade,\n    private spinner: NgxSpinnerService) { \n    this.reportForm = new FormGroup({\n      dateFrom: new FormControl('', Validators.required),\n      dateTo: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    this.reportFacade.clearTransactionsInRange();\n  }\n\n  retrieveReportInRange(){    \n    this.spinner.show();\n    this.search = false;\n    let dateRange = new DateRangeApiModel();\n    let dateFrom: string = this.reportForm.get(\"dateFrom\").value;\n    let dateTo: string = this.reportForm.get(\"dateTo\").value;\n\n    dateRange.dateFrom = dateFrom;\n    dateRange.dateTo = dateTo;\n    this.displayDateFrom = dateFrom;\n    this.displayDateTo = dateTo;\n\n    this._generalService.getTransactionsInDateRange(dateRange)\n        .subscribe((data: QueueITTransaction[]) => {\n            this.spinner.hide();\n            this.search = true;\n            this.reportFacade.transactionsInRange = data;\n            this.reportFacade.sortSummaryOfCompletedTransactions(this.reportFacade.transactionsInRange);\n            this.reportFacade.sortSummaryOfSubmittedTransactions(this.reportFacade.transactionsInRange);\n            this.reportFacade.sortSummaryOfReturnedTransactions(this.reportFacade.transactionsInRange);     \n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n          console.log(\"Error: \" + err);\n        }\n        );\n    this.reportFacade.transactionsInRange = [];    \n  }\n}\n","module.exports = \"\\r\\n.btn-primary {\\r\\n    color: #fff;\\r\\n    background:transparent;\\r\\n    border-color: #007bff;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n    background:#007bff linear-gradient(180deg,#258efe,#007bff) repeat-x;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcm9sZXMvcm9sZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLG1FQUFtRTtBQUN2RSIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3JvbGVzL3JvbGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmJ0bi1wcmltYXJ5IHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuYTpob3ZlcntcclxuICAgIGJhY2tncm91bmQ6IzAwN2JmZiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCMyNThlZmUsIzAwN2JmZikgcmVwZWF0LXg7XHJcbn0iXX0= */\"","module.exports = \"<!-- BreadCrumb -->\\r\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\r\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\r\\n        <li class=\\\"breadcrumb-item active\\\"  aria-current=\\\"page\\\">Manage Roles</li>\\r\\n    </ol>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"pb-3\\\">\\r\\n    <h1>Manage Roles</h1>\\r\\n</div>\\r\\n<div *mobxAutorun class=\\\"row\\\">\\r\\n        <ngx-spinner \\r\\n        bdOpacity = 0.9\\r\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\r\\n        size = \\\"medium\\\"\\r\\n        color = \\\"#48567c\\\"\\r\\n        type = \\\"ball-running-dots\\\"\\r\\n        [fullScreen] = \\\"true\\\">\\r\\n    </ngx-spinner>    \\r\\n    <div class=\\\"col-lg-5\\\">\\r\\n            <alert></alert>\\r\\n        <div class=\\\"card mb-grid\\\">\\r\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\r\\n            <div class=\\\"card-header-title\\\">Role Details</div>\\r\\n\\r\\n            <nav class=\\\"card-header-actions\\\">\\r\\n                <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\r\\n                <i-feather name=\\\"minus-circle\\\"></i-feather>\\r\\n                </a>\\r\\n            </nav>\\r\\n        </div>\\r\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\r\\n            <form [formGroup]=\\\"roleForm\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\" for=\\\"exampleInputEmail1\\\">Role Name</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"rolename\\\" class=\\\"form-control\\\" aria-describedby=\\\"roleName\\\" placeholder=\\\"Enter Role Name\\\">\\r\\n                <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">This must be an approved role name.</small>\\r\\n                </div>\\r\\n                <button [disabled]=\\\"!roleForm.valid\\\" *ngIf=\\\"buttonName === 'Add Role'; else elseBlock\\\" (click)=\\\"addRole()\\\"  class=\\\"btn btn-success notika-btn-success\\\">Add Role</button>\\r\\n                <ng-template #elseBlock>\\r\\n                    <button [disabled]=\\\"!roleForm.valid\\\" *ngIf=\\\"buttonName === 'Update Role';\\\" (click)=\\\"updateRole()\\\" class=\\\"btn btn-success notika-btn-success\\\">Update Role</button>\\r\\n                </ng-template>\\r\\n            </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-7\\\">\\r\\n        <!-- Table seamless striped -->\\r\\n        <div *ngIf=\\\"roleFacade.getAllRoles.length !== 0; else roleListElseBlock\\\" class=\\\"card mb-grid\\\">\\r\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\r\\n                <div class=\\\"card-header-title\\\">Available Roles</div>\\r\\n            </div>\\r\\n            <table class=\\\"table table-striped mb-0\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th scope=\\\"col\\\">#</th>\\r\\n                    <th scope=\\\"col\\\">Role Name</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let role of roleFacade.getAllRoles | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\">                                            \\r\\n                    <th scope=\\\"row\\\">{{i + 1}}</th>\\r\\n                    <td>{{role.name}}</td>\\r\\n                    <td>\\r\\n                        <a (click)=\\\"editRole(role.id)\\\" class=\\\"btn btn-labeled-right btn-primary\\\">\\r\\n                            <span class=\\\"btn-label\\\">\\r\\n                                <i-feather name=\\\"Edit\\\"></i-feather>\\r\\n                            </span>\\r\\n                            <span class=\\\"btn-text\\\">\\r\\n                                Edit Role\\r\\n                            </span>\\r\\n                        </a>\\r\\n                        <!-- <button (click)=\\\"editRole(role.id)\\\" class=\\\"btn btn-primary notika-btn-primary\\\">Edit Role</button> -->\\r\\n                    </td>\\r\\n                </tr>                \\r\\n                </tbody>\\r\\n            </table>\\r\\n            <!-- // Table seamless striped -->\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n        <ng-template #roleListElseBlock>\\r\\n            <h1 class=\\\"card mb-grid text-center\\\"><b><em>No available roles</em></b></h1>\\r\\n        </ng-template>                            \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeneralService } from '../services/general.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Role } from 'src/app/domainmodel/role';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RoleFacade } from 'src/app/services/admin/rolefacade';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-roles',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  buttonName: string = \"Add Role\";\n  roleForm: FormGroup;\n\n  p: number = 1;\n  collection: any[] = this.roleFacade.roles;\n\n  constructor(public roleFacade: RoleFacade, private _generalService: GeneralService,\n    private spinner: NgxSpinnerService, public alertService: AlertService) { \n    this.roleForm = new FormGroup({\n      rolename: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  addRole(name: string){\n    this.spinner.show();\n  \n    this._generalService.addRole(name)\n    .subscribe((data: Role) => {\n      this.spinner.hide();\n      this.alertService.success(name.toUpperCase() + \" Successfully Added as a Role.\")\n        this.roleFacade.roles.push(data);\n    },\n    (err: HttpErrorResponse) => {\n      // this.spinner.hide();\n      console.log(\"Error: \" + err);\n      this.alertService.error(\"New Role Addition Failed. Please try again.\");\n    });\n  }\n\n  editRole(id: any){\n    this.roleFacade.role = this.roleFacade.getRole(id);\n    this.roleForm.setValue({\n       rolename: this.roleFacade.role.name\n    });\n    this.buttonName = \"Update Role\";\n  }\n\n  updateRole(){\n    this.spinner.show();\n    let role = new Role();\n    role.id = this.roleFacade.role.id;\n    role.name = this.roleForm.get(\"rolename\").value;\n\n    this._generalService.updateRole(role)\n      .subscribe(() => {\n        this.spinner.hide();\n        this.roleFacade.updateRole(role);\n        this.alertService.success(\"Role Update Successful\");\n      },\n          (err: HttpErrorResponse) => {\n            this.spinner.hide();\n              console.log(\"Error: \" + err);\n              this.alertService.error(\"Role Update Failed. Please try again\");\n          }\n      );\n      this.roleForm.reset();\n    this.buttonName = \"Add Role\";\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { Configuration } from 'src/app/config';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { delay, catchError } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { UserLoginApiModel } from './../apimodels/userloginapimodel';\nimport { UserAccess } from './userAccess';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = false;\n  httpOptions = {};\n\n  constructor(private userAccess: UserAccess, private _configuration: Configuration, private _http: HttpClient) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authoratization': ''\n      })\n    };\n  }\n\n  login(model: UserLoginApiModel){\n    return this._http.post<UserLoginApiModel>(this._configuration.ServerAdminWithApiAccountUrl + \"login\", JSON.stringify(model), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getUserUsingId(id: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getUserUsingId\", JSON.stringify(id), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  loginAsTeller(model: UserLoginApiModel){\n    return this._http.post<UserLoginApiModel>(this._configuration.ServerAdminWithApiAccountUrl + \"loginasteller\", JSON.stringify(model), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getNewUserProfile(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getNewAccountProfile\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getUserOldAccount(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getUserUsingAccountByEmail\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  setSession(authResult) {\n      const expiresAt = moment().add(authResult.expires_in,'second');\n      localStorage.removeItem('id_token');\n      localStorage.setItem('id_token', authResult.auth_token);\n      localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n  }\n\n  getExpiration() {\n      const expiration = localStorage.getItem(\"expires_at\");\n      const expiresAt = JSON.parse(expiration);\n      return moment(expiresAt);\n  }\n\n  isLoggedIn():boolean{\n      return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut(){\n      return !this.isLoggedIn();\n  }     \n\n  logout(){\n      localStorage.removeItem('id_token');\n      localStorage.removeItem(\"expires_at\");\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Configuration } from 'src/app/config';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Role } from 'src/app/domainmodel/role';\nimport { Status } from 'src/app/domainmodel/status';\nimport { TransactionType } from 'src/app/domainmodel/transactiontype';\nimport { DateRangeApiModel } from '../apimodels/daterangeapimodel';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { ChangePasswordApiModel } from '../apimodels/changepasswordapimodel';\nimport { ManageUserApiModel } from '../apimodels/manageuserapimodel';\nimport { ManageUserRoleApiModel } from './../apimodels/manageuserroleapimodel';\nimport { UserVO } from 'src/app/valueobjects/userVO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n\n  httpOptions = {};\n\n  constructor(private _http: HttpClient, private _configuration: Configuration) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n  }\n\n  addRole(rolename: string){\n    return this._http.post<string>(this._configuration.ServerAdminWithApiUrl + \"addrole\", JSON.stringify(rolename), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getRole(id: string){\n    return this._http.post<Role>(this._configuration.ServerAdminWithApiUrl + \"getrole\", JSON.stringify(id), this.httpOptions)\n        .pipe(retry(5), catchError(this.handleError));\n  }\n\n  getRoles(){\n    return this._http.get<Role>(this._configuration.ServerAdminWithApiUrl + \"getallroles\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getAllTellers(){\n    return this._http.get<UserVO>(this._configuration.ServerAdminWithApiUrl + \"getalltellers\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  updateRole(role: Role){\n    return this._http.post<Role>(this._configuration.ServerAdminWithApiUrl + \n      \"updateRole\", JSON.stringify(role), this.httpOptions)\n        .pipe(retry(100), catchError(this.handleError));\n  }\n\n  addStatus(statusname: string){\n    return this._http.post<string>(this._configuration.ServerAdminWithApiUrl + \"addstatus\", JSON.stringify(statusname), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getStatus(id: string){\n    return this._http.post<Status>(this._configuration.ServerAdminWithApiUrl + \"getstatus\", JSON.stringify( id), this.httpOptions)\n        .pipe(retry(5), catchError(this.handleError));\n  }\n\n  getStatusList(){\n    return this._http.get<Status>\n    (this._configuration.ServerAdminWithApiUrl + \"getallstatus\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getUsers(){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getallusers\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  updateStatus(status: Status){\n    return this._http.post(this._configuration.ServerAdminWithApiUrl + \"updatestatus\", JSON.stringify(status), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  addTransactionType(transactiontypename: string){\n    return this._http.post<string>(this._configuration.ServerAdminWithApiUrl + \"addtransactiontype\", JSON.stringify(transactiontypename), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  updateUser(model: ManageUserApiModel){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"updateuser\", JSON.stringify(model), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  deactivateUser(id: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"deactivateuser\", JSON.stringify(id), this.httpOptions)\n        .pipe(retry(2),catchError(this.handleError));\n  }\n\n  reactivateUser(id: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"reactivateuser\", JSON.stringify(id), this.httpOptions)\n        .pipe(retry(2),catchError(this.handleError));\n  }\n\n  addRoleToUser(model: ManageUserRoleApiModel){\n    return this._http.post<string>(this._configuration.ServerAdminWithApiAccountUrl + \"addusertorole\", JSON.stringify(model), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  removeRoleFromUser(model: ManageUserRoleApiModel){\n    return this._http.post<string>(this._configuration.ServerAdminWithApiAccountUrl + \"removerole\", JSON.stringify(model), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  changeNewPassword(model: ChangePasswordApiModel){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"changeuserpassword\", JSON.stringify(model), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  register(model: ManageUserApiModel){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"register\", JSON.stringify(model), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getTransactiontype(id: string){\n    return this._http.post<TransactionType>(this._configuration.ServerAdminWithApiUrl + \"gettransactiontype\", JSON.stringify(id), this.httpOptions)\n        .pipe(retry(5), catchError(this.handleError));\n  }\n\n  getTransactiontypes(){\n    return this._http.get<TransactionType>(this._configuration.ServerAdminWithApiUrl + \"getalltransactiontypes\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  updateTransactiontype(transactiontype: TransactionType){\n    return this._http.post<TransactionType>(this._configuration.ServerAdminWithApiUrl + \"updatetransactiontype\", JSON.stringify(transactiontype), this.httpOptions)\n        .pipe(retry(2), catchError(this.handleError));\n  }\n\n  getTransactionsInDateRange(range: DateRangeApiModel){\n    return this._http.post(this._configuration.ServerAdminWithApiUrl + \"gettransactionsdateinrange\", JSON.stringify(range), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n  \n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }  \n}\n","import { Injectable } from '@angular/core';\r\nimport { observable, action } from 'mobx';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\n\r\nInjectable()\r\nexport class UserAccess{\r\n    @observable users: UserVO[];\r\n    @observable user: UserVO;\r\n    @observable isAdmin: boolean;\r\n    @observable isTeller: boolean;\r\n    @observable isTransactionalTeller: boolean;\r\n    @observable isSeniorTeller: boolean;\r\n    @observable auth: boolean = false;\r\n\r\n    constructor(){\r\n        this.user = new UserVO();\r\n        this.users = [];\r\n        this.isAdmin = false;\r\n        this.isTransactionalTeller = false;\r\n        this.isSeniorTeller = false;\r\n        this.isTeller = false;\r\n    }\r\n\r\n    isHasMoreThanOneRole(roles: string[]): boolean{\r\n        if(roles.length > 1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    @action accessibleRoute(role: string): string{\r\n        if(role == \"ADMIN\"){\r\n            this.isAdmin = true;\r\n            return 'admin/dashboard';\r\n        }\r\n        else if(role == \"SENIOR TELLER\"){\r\n            this.isSeniorTeller = true;\r\n            return \"operations/process-transactions\";\r\n        }\r\n        else if( role == \"TELLER\"){\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else if( role == \"TRANSACTIONAL TELLER\"){\r\n            this.isTransactionalTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else{\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n    }\r\n}","module.exports = \"\\r\\n.btn-primary {\\r\\n    color: #fff;\\r\\n    background:transparent;\\r\\n    border-color: #007bff;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n    background:#007bff linear-gradient(180deg,#258efe,#007bff) repeat-x;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vc3RhdHVzL3N0YXR1cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksbUVBQW1FO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vc3RhdHVzL3N0YXR1cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5idG4tcHJpbWFyeSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbmE6aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiMwMDdiZmYgbGluZWFyLWdyYWRpZW50KDE4MGRlZywjMjU4ZWZlLCMwMDdiZmYpIHJlcGVhdC14O1xyXG59Il19 */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\n        <li class=\\\"breadcrumb-item active\\\"  aria-current=\\\"page\\\">Manage Status</li>\\n    </ol>\\n</nav>\\n\\n<div class=\\\"pb-3\\\">\\n    <h1>Manage Status</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>    \\n    <div class=\\\"col-lg-5\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n            <div class=\\\"card-header-title\\\">Status Details</div>\\n\\n            <nav class=\\\"card-header-actions\\\">\\n                <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                </a>\\n            </nav>\\n        </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form [formGroup]=\\\"statusForm\\\">\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"form-label\\\" for=\\\"exampleInputEmail1\\\">Status Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"statusname\\\" class=\\\"form-control\\\" aria-describedby=\\\"statusName\\\" placeholder=\\\"Enter Status Name\\\">\\n                <small id=\\\"statusHelp\\\" class=\\\"form-text text-muted\\\">This must be an approved status name.</small>\\n                </div>\\n                <button [disabled]=\\\"!statusForm.valid\\\" *ngIf=\\\"buttonName === 'Add Status'; else elseBlock\\\" (click)=\\\"addStatus()\\\" class=\\\"btn btn-success notika-btn-success\\\">Add Status</button>\\n                <ng-template #elseBlock>\\n                    <button [disabled]=\\\"!statusForm.valid\\\" *ngIf=\\\"buttonName === 'Update Status';\\\" (click)=\\\"updateStatus()\\\" class=\\\"btn btn-success notika-btn-success\\\">Update Status</button>\\n                </ng-template>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n        <!-- Table seamless striped -->\\n        <div *ngIf=\\\"statusFacade.getAllStatus.length !== 0; else statusListElseBlock\\\" class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Available Status</div>\\n            </div>\\n            <table class=\\\"table table-striped mb-0\\\">\\n                <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Status Name</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let status of statusFacade.statusList | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\">                                            \\n                    <th scope=\\\"row\\\">{{i + 1}}</th>\\n                    <td>{{status.name}}</td>\\n                    <td>\\n                        <a (click)=\\\"editStatus(status.id)\\\" class=\\\"btn btn-labeled-right btn-primary\\\">\\n                            <span class=\\\"btn-label\\\">\\n                                <i-feather name=\\\"Edit\\\"></i-feather>\\n                            </span>\\n                            <span class=\\\"btn-text\\\">\\n                                Edit Status\\n                            </span>\\n                        </a>\\n                        <!-- <button (click)=\\\"editRole(role.id)\\\" class=\\\"btn btn-primary notika-btn-primary\\\">Edit Role</button> -->\\n                    </td>\\n                </tr>                \\n                </tbody>\\n            </table>\\n            <!-- // Table seamless striped -->\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n        <ng-template #statusListElseBlock>\\n            <h1 class=\\\"card mb-grid text-center\\\"><b><em>No available status</em></b></h1>\\n        </ng-template>                            \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StatusFacade } from 'src/app/services/admin/statusfacade';\nimport { GeneralService } from '../services/general.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Status } from 'src/app/domainmodel/status';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-status',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit {\n\n  buttonName: string = \"Add Status\";\n  statusForm: FormGroup;\n\n  p: number = 1;\n  collection: any[] = this.statusFacade.statusList;\n\n  constructor(public statusFacade: StatusFacade, private _generalService: GeneralService,\n    private spinner: NgxSpinnerService, private alertService: AlertService) { \n    this.statusForm = new FormGroup({\n      statusname: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  addStatus(){\n    this.spinner.show();\n    let statusname = this.statusForm.get(\"statusname\").value;\n    this._generalService.addStatus(statusname)\n        .subscribe((data: Status) => {\n          this.spinner.hide();\n            this.statusFacade.statusList.push(data);\n            this.alertService.success(statusname.toUpperCase() + \" Successfully Added as a Status.\")\n        },\n        (err: HttpErrorResponse) => {\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"New Status Addition Failed. Please try again.\")\n      }\n        );\n  }\n\n  editStatus(id: string){\n    this.statusFacade.status = this.statusFacade.getStatus(id);\n    this.statusForm.setValue({\n       statusname: this.statusFacade.status.name\n    });\n    this.buttonName = \"Update Status\";\n  }\n\n  updateStatus(){\n    this.spinner.show();\n    let status = new Status();\n    status.id = this.statusFacade.status.id;\n    status.name = this.statusForm.get(\"statusname\").value;\n    this._generalService.updateStatus(status)\n      .subscribe((data: Status) => {\n        this.spinner.hide();\n        this.statusFacade.updateStatus(data);\n        this.alertService.success(\"Status Update Successful.\");\n      },\n          (err: HttpErrorResponse) => {\n              console.log(\"Error: \" + err);\n              this.alertService.error(\"Status Update Failed. Please try again\");\n          }\n      );    \n      this.statusForm.reset();\n    this.buttonName = \"Add Status\";\n  }\n}\n","module.exports = \"\\r\\n.btn-primary {\\r\\n    color: #fff;\\r\\n    background:transparent;\\r\\n    border-color: #007bff;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n    background:#007bff linear-gradient(180deg,#258efe,#007bff) repeat-x;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdHJhbnNhY3Rpb250eXBlL3RyYW5zYWN0aW9udHlwZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksbUVBQW1FO0FBQ3ZFIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdHJhbnNhY3Rpb250eXBlL3RyYW5zYWN0aW9udHlwZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5idG4tcHJpbWFyeSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbmE6aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiMwMDdiZmYgbGluZWFyLWdyYWRpZW50KDE4MGRlZywjMjU4ZWZlLCMwMDdiZmYpIHJlcGVhdC14O1xyXG59Il19 */\"","module.exports = \"<!-- BreadCrumb -->\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\n    <ol class=\\\"breadcrumb adminx-page-breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\">Administration</li>\\n        <li class=\\\"breadcrumb-item active\\\"  aria-current=\\\"page\\\">Manage TransactionTypes</li>\\n    </ol>\\n</nav>\\n    \\n<div class=\\\"pb-3\\\">\\n    <h1>Manage TransactionTypes</h1>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n        <ngx-spinner \\n        bdOpacity = 0.9\\n        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n        size = \\\"medium\\\"\\n        color = \\\"#48567c\\\"\\n        type = \\\"ball-running-dots\\\"\\n        [fullScreen] = \\\"true\\\">\\n    </ngx-spinner>   \\n    <alert></alert> \\n    <div class=\\\"col-lg-5\\\">\\n            \\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n            <div class=\\\"card-header-title\\\">Transaction Type Details</div>\\n\\n            <nav class=\\\"card-header-actions\\\">\\n                <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                </a>\\n            </nav>\\n        </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form [formGroup]=\\\"transactionTypeForm\\\">\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"form-label\\\" for=\\\"exampleInputEmail1\\\">TransactionType Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"transactiontypename\\\" class=\\\"form-control\\\" aria-describedby=\\\"roleName\\\" placeholder=\\\"Enter Role Name\\\">\\n                <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">This must be an approved transaction type.</small>\\n                </div>\\n                <button [disabled]=\\\"!transactionTypeForm.valid\\\" *ngIf=\\\"buttonName === 'Add TransactionType'; else elseBlock\\\"  class=\\\"btn btn-success\\\">Add TransactionType</button>\\n                <ng-template #elseBlock>\\n                    <button [disabled]=\\\"!transactionTypeForm.valid\\\" *ngIf=\\\"buttonName === 'Update TransactionType';\\\" (click)=\\\"updateTransactionType()\\\" class=\\\"btn btn-success\\\">Update TransactionType</button>\\n                </ng-template>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-7\\\">\\n        <!-- Table seamless striped -->\\n        <div *ngIf=\\\"transactionTypeFacade.getAllTransactionTypes.length !== 0; else transactionTypeListElseBlock\\\" class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Available Transaction Types</div>\\n            </div>\\n            <table class=\\\"table table-striped mb-0\\\">\\n                <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Transaction Type Name</th>\\n                </tr>\\n                </thead>\\n                <tbody>\\n                <tr *ngFor=\\\"let transactiontype of transactionTypeFacade.getAllTransactionTypes | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\">                                            \\n                    <th scope=\\\"row\\\">{{i + 1}}</th>\\n                    <td>{{transactiontype.name}}</td>\\n                    <td>\\n                        <a (click)=\\\"editTransactionType(transactiontype.id)\\\" class=\\\"btn btn-labeled-right btn-primary\\\">\\n                            <span class=\\\"btn-label\\\">\\n                                <i-feather name=\\\"Edit\\\"></i-feather>\\n                            </span>\\n                            <span class=\\\"btn-text\\\">\\n                                Edit TransationType\\n                            </span>\\n                        </a>\\n                        <!-- <button (click)=\\\"editRole(role.id)\\\" class=\\\"btn btn-primary notika-btn-primary\\\">Edit Role</button> -->\\n                    </td>\\n                </tr>                \\n                </tbody>\\n            </table>\\n            <!-- // Table seamless striped -->\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n        <ng-template #transactionTypeListElseBlock>\\n            <h1 class=\\\"card mb-grid text-center\\\"><b><em>No available transaction types</em></b></h1>\\n        </ng-template>                            \\n    </div>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { TransactionTypeFacade } from '../../services/admin/transactiontypefacade';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TransactionType } from '../../domainmodel/transactiontype';\nimport { GeneralService } from '../services/general.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-transactiontype',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './transactiontype.component.html',\n  styleUrls: ['./transactiontype.component.css']\n})\nexport class TransactiontypeComponent implements OnInit {\n\n  buttonName: string = \"Add TransactionType\";\n  transactionTypeForm: FormGroup;\n\n  p: number = 1;\n  collection: any[] = this.transactionTypeFacade.transactiontypes;\n\n  constructor(public transactionTypeFacade: TransactionTypeFacade, private _generalService: GeneralService,\n    private spinner: NgxSpinnerService, private alertService: AlertService) { \n    this.transactionTypeForm = new FormGroup({\n      transactiontypename: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n  addTransactionType(name: string){\n    this.spinner.show();\n    this._generalService.addTransactionType(name)\n        .subscribe((data: TransactionType) => {\n          this.spinner.hide();\n            this.transactionTypeFacade.transactiontypes = [...this.transactionTypeFacade.transactiontypes, data];\n            this.alertService.success(name.toUpperCase() + \" Successfully Added as a TransactionType.\");\n        },\n        (err: HttpErrorResponse) => {\n          //console.log(\"Error: \" + err);\n          this.alertService.error(\"New TransactionType Addition Failed. Please try again.\")\n      });\n  }\n\n  editTransactionType(id: any){\n    this.transactionTypeFacade.transactionType = this.transactionTypeFacade.getTransactionType(id);\n    this.transactionTypeForm.setValue({\n       transactiontypename: this.transactionTypeFacade.transactionType.name\n    });\n    this.buttonName = \"Update TransactionType\";\n  }\n\n  updateTransactionType(){\n    this.spinner.show();\n    let transactionType = new TransactionType();\n    transactionType.id = this.transactionTypeFacade.transactionType.id;\n    transactionType.name = this.transactionTypeForm.get(\"transactiontypename\").value;\n    this._generalService.updateTransactiontype(transactionType)\n      .subscribe((data: TransactionType) => {\n        this.spinner.hide();\n        this.transactionTypeFacade.updateTransactionType(data);\n        this.alertService.success(\"TransactionType Update Successful.\");\n      },\n          (err: HttpErrorResponse) => {\n              this.alertService.error(\"TransactionType Update Failed. Please try again.\");\n          }\n      );    \n      this.transactionTypeForm.reset();\n    this.buttonName = \"Add TransactionType\";\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  users works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'admin' },\r\n  { path: 'admin', loadChildren: './admin/admin.module#AdminModule' },\r\n  { path: 'operations', loadChildren: './operations/operations.module#OperationsModule' }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'queueitv2';\n  \n  constructor(){\n    \n  }\n\n  ngOnInit(){    \n  \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AutoGeneratedComponent } from './auto-generated/auto-generated.component';\nimport { routing } from './app-routing.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { MobxAngularModule } from 'mobx-angular';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { OperationsModule } from './operations/operations.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { SharedModule } from './shared/shared.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutoGeneratedComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    MobxAngularModule,\n    NgxSpinnerModule,\n    NgSelectModule,\n    routing,\n    AdminModule,\n    AuthenticationModule,\n    OperationsModule,\n    SharedModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    NgxSpinnerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class UserLoginApiModel{\r\n    Username: string;\r\n    Password: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContainerComponent } from './container/container.component';\nimport { LoginComponent } from './login/login.component';\nimport { routing } from './authentication.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserAccess } from '../services/authentication/usersAccess';\nimport { GetnewuserprofileComponent } from './getnewuserprofile/getnewuserprofile.component';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [ContainerComponent, LoginComponent, GetnewuserprofileComponent,],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    SharedModule,\n    routing\n  ],\n  providers: [UserAccess, NgxSpinnerService]\n})\nexport class AuthenticationModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { GetnewuserprofileComponent } from './getnewuserprofile/getnewuserprofile.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'auth',\r\n        component: ContainerComponent,\r\n\r\n        children: [\r\n            { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'getnewprofile', component: GetnewuserprofileComponent }        \r\n        ]\r\n    }    \r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbnRhaW5lci9jb250YWluZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-content\\\" style=\\\"background-image: url('./../../../assets/images/largeback.jpg')\\\">\\n  <ngx-spinner \\n      bdOpacity = 0.9\\n      bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n      size = \\\"medium\\\"\\n      color = \\\"#48567c\\\"\\n      type = \\\"ball-running-dots\\\"\\n      [fullScreen] = \\\"true\\\">\\n  </ngx-spinner>  \\n    <router-outlet></router-outlet>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n  year: string;\n  constructor() { }\n\n  ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n  }\n\n}\n","module.exports = \".navbar-brand-image {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.page-login {\\r\\n    max-width: 35rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vZ2V0bmV3dXNlcnByb2ZpbGUvZ2V0bmV3dXNlcnByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vZ2V0bmV3dXNlcnByb2ZpbGUvZ2V0bmV3dXNlcnByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItYnJhbmQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLWxvZ2luIHtcclxuICAgIG1heC13aWR0aDogMzVyZW07XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"adminx-container d-flex justify-content-center align-items-center\\\">    \\n    <div class=\\\"page-login\\\">\\n        <alert></alert>\\n      <div class=\\\"text-center\\\">\\n        <a class=\\\"navbar-brand mb-4 h1\\\" [routerLink]=\\\"['/auth/login']\\\">\\n          <img class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" src=\\\"./../../../assets/images/cbs-signature[15928]-new.png\\\" alt=\\\"greatplacetowork\\\">\\n        </a>\\n        <hr/>\\n      </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"getNewUserProfileForm\\\">\\n            <a [routerLink]=\\\"['/auth/login']\\\" class=\\\"btn btn-sm btn-block btn-primary\\\" style=\\\"color: white\\\">Back to Login</a>\\n            <br/>\\n            <h3 class=\\\"text-center\\\">Get Your New Profile Here</h3>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleDropdownFormEmail1\\\" class=\\\"form-label\\\">Email address</label>\\n              <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleDropdownFormEmail1\\\" placeholder=\\\"Enter Email Address\\\">\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isNotNull; else elseNoUserFound\\\">\\n                <p class=\\\"card-text\\\">\\n                     <em>Name: &nbsp;<b>{{userAccess.user.firstname}}&nbsp;&nbsp;{{userAccess.user.lastname}}</b></em>\\n                </p>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"isNotNull\\\">\\n                <p class=\\\"card-text\\\" *ngFor=\\\"let role of userAccess.user.roles\\\">\\n                    <em>Role: &nbsp;<b>{{role}}</b></em>\\n                </p>\\n            </div>\\n            <button *ngIf=\\\"!isNotNull\\\" [disabled]=\\\"!getNewUserProfileForm.valid\\\" (click)=\\\"getUserDetails()\\\" class=\\\"btn btn-sm btn-block btn-success\\\">Retrieve Details</button>\\n            <button *ngIf=\\\"isNotNull\\\"  class=\\\"btn btn-sm btn-block btn-success\\\" (click)=\\\"getNewUserProfile()\\\" >Create New Profile</button>            \\n            <ng-template #elseNoUserFound>\\n                <h1 *ngIf=\\\"isNotNull\\\">No Existing User with that Email. Please verify and try again</h1>\\n            </ng-template>         \\n          </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserAccess } from 'src/app/services/authentication/usersAccess';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../services/auth.service';\nimport { Accounts } from 'src/app/valueobjects/accountvo';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertService } from 'src/app/shared/_services';\n\n@Component({\n  selector: 'app-getnewuserprofile',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './getnewuserprofile.component.html',\n  styleUrls: ['./getnewuserprofile.component.css']\n})\nexport class GetnewuserprofileComponent implements OnInit {\n\n  getNewUserProfileForm: FormGroup;\n  isNotNull: boolean = false;\n\n  constructor(public userAccess: UserAccess, private spinner: NgxSpinnerService,\n    private authService: AuthService, public alertService: AlertService) { \n    this.getNewUserProfileForm = new FormGroup({\n      email: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  getNewUserProfile(){\n    this.spinner.show();\n    this.authService.getNewUserProfile(this.userAccess.user.email)\n        .subscribe((data) => {\n          this.spinner.hide();\n          this.userAccess.user.identity = data.id;\n          this.userAccess.user.email = data.email;\n          this.userAccess.user.firstname = data.firstname;\n          this.userAccess.user.lastname = data.lastname;\n          this.userAccess.user.roles = data.roles;\n          this.alertService.success(\"Yes! You now have a new profile. You can signin now.\")\n        },\n        (err: HttpErrorResponse) => {\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"Something went wrong. Please contact the IT Department.\");\n      });\n  }\n\n  getUserDetails(){\n    this.spinner.show();\n    let email = this.getNewUserProfileForm.get(\"email\").value;\n    this.authService.getUserOldAccount(email)\n        .subscribe((data: Accounts) => {\n          this.spinner.hide();\n          this.userAccess.user.firstname = data.firstname;\n          this.userAccess.user.lastname = data.lastname;\n          this.userAccess.user.legacyId = data.identity;\n          this.userAccess.user.email = data.username;\n          this.userAccess.user.roles = data.roles;\n          this.isNotNull = true;\n          console.log(this.userAccess.user);\n          this.getNewUserProfileForm.setValue({\n            email: this.userAccess.user.email\n          });\n      },\n      (err: HttpErrorResponse) => {\n        console.log(\"Error: \" + err);\n        this.alertService.error(\"We can't find your account. Please contact IT Department.\");\n      });\n  }\n\n}\n","module.exports = \".navbar-brand-image {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.page-login {\\r\\n    max-width: 35rem;    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItYnJhbmQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLWxvZ2luIHtcclxuICAgIG1heC13aWR0aDogMzVyZW07ICAgIFxyXG59Il19 */\"","module.exports = \"<!-- Modal -->\\n<!-- <form [formGroup]=\\\"roleSelectionForm\\\">\\n    <button #selectRoleButton type=\\\"button\\\" class=\\\"btn btn-primary\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\" hidden>Select a role</button>\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Select a Role</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <ul style=\\\"display: inline-flex; list-style: none;\\\">\\n              <li><button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"goToAdministration()\\\">Administrator</button></li>  &nbsp;&nbsp;\\n              <li><button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"goToOperations()\\\"> Operations </button></li>  \\n            </ul>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n          <button #closeModalButton type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" hidden>Close</button>\\n          </div>\\n      </div>\\n      </div>\\n  </div>\\n</form> -->\\n<!-- Modal -->\\n<div class=\\\"adminx-container\\\">        \\n    <div class=\\\"page-login\\\">\\n      <div class=\\\"text-center\\\">\\n        <a class=\\\"navbar-brand mb-4 h1\\\" [routerLink]=\\\"['/operations/login']\\\">\\n          <img class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" src=\\\"assets/images/cbs-signature[15928]-new.png\\\" alt=\\\"greatplacetowork\\\">\\n        </a>\\n        <hr/>\\n      </div>      \\n  <alert></alert>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"loginForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleDropdownFormEmail1\\\" class=\\\"form-label\\\">Email address</label>\\n              <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" id=\\\"exampleDropdownFormEmail1\\\" placeholder=\\\"Enter Your Email\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"exampleDropdownFormPassword1\\\" class=\\\"form-label\\\">Password</label>\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\"  class=\\\"form-control\\\" id=\\\"exampleDropdownFormPassword1\\\" placeholder=\\\"Enter Your Password\\\">\\n            </div>\\n            <button type=\\\"submit\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-sm btn-block btn-primary\\\">Login</button>\\n          </form>\\n        </div>\\n        <div class=\\\"card-footer text-center\\\">\\n            <em> Old User?</em> &nbsp;&nbsp; <a [routerLink]=\\\"['/admin/login']\\\"><small><em>Get New Profile</em></small></a>\\n        </div>\\n      </div>\\n    </div>\\n\\n    \"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { OperationsService } from 'src/app/operations/services/operations.service';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { AuthService } from '../services/auth.service';\nimport { UserLoginApiModel } from '../apimodels/userloginapimodel';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserAccess } from 'src/app/services/authentication/usersAccess';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private _hubConnection: HubConnection;\n  loginForm: FormGroup;\n  roleSelectionForm: FormGroup;\n  isRequesting: boolean;\n  @ViewChild('selectRoleButton') fileInputOpenModal: ElementRef;\n  @ViewChild('closeModalButton') fileInputCloseModal: ElementRef;\n  \n  constructor(private _router: Router, private _operationsService: OperationsService, \n    public transactionStore: TransactionStore, private _authService: AuthService,\n    public userAccess: UserAccess, private spinner: NgxSpinnerService, public alertService: AlertService) { \n      this.loginForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n      this.roleSelectionForm = new FormGroup({\n\n      });\n    }\n  \n  ngOnInit() {       \n    this._authService.logout();\n  }\n\n  goToAdministration(){\n    this._router.navigate(['admin']);\n    this.fileInputCloseModal.nativeElement.click();\n  }\n\n  goToOperations(){\n    this._router.navigate(['operations']);\n    this.fileInputCloseModal.nativeElement.click();\n  }\n\n  async login(){    \n     this.spinner.show();\n    let model = new UserLoginApiModel();\n    model.Username = this.loginForm.get('username').value;\n    model.Password = this.loginForm.get('password').value;\n\n    await this._authService.login(model)\n      .subscribe((data) => {\n        if(data){\n          this.spinner.hide();\n          this.userAccess.user.isActive = data.isActive;\n          if(this.userAccess.user.isActive){\n            this.userAccess.user.identity = data.id;\n            this.userAccess.user.email = data.email;\n            this.userAccess.user.firstname = data.firstname;\n            this.userAccess.user.lastname = data.lastname;\n            this.userAccess.user.roles = data.roles;\n            this._authService.setSession(data);\n            /**use the user role to determine\n             * what page to navigate to\n             */\n            let noOfRolesCheckResult = this.userAccess.isHasMoreThanOneRole(this.userAccess.user.roles);\n            if(noOfRolesCheckResult){\n              this.fileInputOpenModal.nativeElement.click();\n            }\n            else{\n              let route:string = this.userAccess.accessibleRoute(this.userAccess.user.roles[0]);\n              console.log(route);\n              this._router.navigate([route]);\n            }          \n          }\n          else{\n            this.alertService.error(\"Oops! Your account has been deactivated. Contact the Operations Department.\");\n          } \n        }                 \n      },\n      (err: HttpErrorResponse) => {\n        this.spinner.hide();\n        console.log(\"Error: \" + err);\n        this.alertService.error(\"Oops! Login details are wrong. You need to remember them.\");\n      }\n    );\n    \n    this._operationsService.getTodaysTransactions()\n    .subscribe((data: QueueITTransaction[]) => {\n      \n    });\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { Configuration } from 'src/app/config';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { delay, catchError } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { UserLoginApiModel } from '../apimodels/userloginapimodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = false;\n  httpOptions = {};\n\n  constructor(private _configuration: Configuration, private _http: HttpClient) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authoratization': ''\n      })\n    };\n  }\n\n  login(model: UserLoginApiModel){\n    return this._http.post<UserLoginApiModel>(this._configuration.ServerAdminWithApiAccountUrl + \"login\", JSON.stringify(model), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getNewUserProfile(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getNewAccountProfile\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getUserOldAccount(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getUserUsingAccountByEmail\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  setSession(authResult) {\n      const expiresAt = moment().add(authResult.expires_in,'second');\n      localStorage.removeItem('id_token');\n      localStorage.setItem('id_token', authResult.auth_token);\n      localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n  }\n\n  getExpiration() {\n      const expiration = localStorage.getItem(\"expires_at\");\n      const expiresAt = JSON.parse(expiration);\n      return moment(expiresAt);\n  }\n\n  isLoggedIn():boolean{\n      return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut(){\n      return !this.isLoggedIn();\n  }     \n\n  logout(){\n      localStorage.removeItem('id_token');\n      localStorage.removeItem(\"expires_at\");\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dG8tZ2VuZXJhdGVkL2F1dG8tZ2VuZXJhdGVkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  auto-generated works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auto-generated',\n  templateUrl: './auto-generated.component.html',\n  styleUrls: ['./auto-generated.component.css']\n})\nexport class AutoGeneratedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Configuration{\r\n    public ApiServer: string = \"http://localhost:5000/\";\r\n    public ApiServerSSL: string = \"https://localhost:5001/\";\r\n    //public ApiServerSSL: string = \"http://queueit.autoreglive.com/\";\r\n    //public ApiServerSSL: string = \"http://localhost:56242/\";\r\n    //public ApiServerSSL: string = \"https://localhost:44328/\";\r\n    public ApiAdminUrlAccount: string = \"api/administration/account/\";\r\n    public ServerAdminWithApiAccountUrl: string = this.ApiServerSSL + this.ApiAdminUrlAccount;\r\n\r\n    public ApiAdminUrl: string = \"api/administration/home/\";\r\n    public ServerAdminWithApiUrl: string = this.ApiServerSSL + this.ApiAdminUrl;\r\n\r\n    public ApiOperationsUrl: string = \"api/operations/home/\";\r\n    public ServerOperationsWithApiUrl: string = this.ApiServerSSL + this.ApiOperationsUrl;\r\n}","import { CustomerVO } from \"../../valueobjects/customerVO\";\r\nimport { UserVO } from \"../../valueobjects/userVO\";\r\n\r\nexport abstract class Transaction{\r\n\tid: string;\r\n    customerName: CustomerVO;\r\n\tplatenumber: string;\r\n\tamount: number;\r\n\ttransactionType: string;\t\r\n\tcreatedBy: UserVO;\r\n\tdatecreated: Date;\r\n}","import { Transaction } from \"./interfaces/transaction\";\r\nimport { UserVO } from \"../valueobjects/userVO\";\r\nimport { Outlet } from \"./interfaces/outlet\";\r\n\r\nexport class QueueITTransaction extends Transaction{\r\n    timeSubmitted: Date;\r\n    timeIssueFlagged: Date;\r\n\ttimeCompleted: Date;\r\n\ttimeRejected: Date[];\r\n\tallocatedTime: string;\r\n    flaggedIssueBy: UserVO[];\r\n\trejectedBy: UserVO[];\r\n\tcompletedBy: UserVO;\r\n\treturnedBy: UserVO[];\r\n\ttreatedBy: UserVO[];\r\n\tstatus: string;\r\n\toutletName: string;\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.timeRejected = [];\r\n\t\tthis.flaggedIssueBy = [];\r\n\t\tthis.rejectedBy = [];\r\n\t\tthis.treatedBy = [];\r\n\t\tthis.returnedBy = [];\r\n\t}\r\n}","export class Role{\r\n    id: string;\r\n    name: string;\r\n\r\n    changeRoleName(name: string){\r\n        this.name = name;\r\n    }\r\n}","import { UserVO } from \"../valueobjects/userVO\";\r\n\r\nexport class Status{\r\n    id: string;\r\n    name: string;\r\n\r\n    changeName(name: string){\r\n        this.name = name;\r\n    }\r\n}","export class TransactionType{\r\n    id: string;\r\n    name: string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGZvdW5kL25vdGZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CustomerVO } from 'src/app/valueobjects/customerVO';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\n\r\nexport class TransactionApiModel{\r\n    customerName: CustomerVO;\r\n\tplatenumber: string;\r\n\tamount: number;\r\n\ttransactionType: string;\t\r\n\tcreatedBy: UserVO;\r\n\tdatecreated: Date;\r\n    timeSubmitted: Date;\r\n    timeIssueFlagged: Date;\r\n\ttimeCompleted: Date;\r\n\ttimeRejected: Date;\r\n\tallocatedTime: string;\r\n    flaggedIssueBy: string;\r\n\trejectedBy: string;\r\n\tcompletedBy: string;\r\n\treturnedBy: string;\r\n\ttreatedBy: string;\r\n\tstatus: string;\r\n\toutletName: string;\r\n}","export class UserLoginApiModel{\r\n    Username: string;\r\n    Password: string;\r\n}","module.exports = \".table table.innertbl td {border-top:none !important; padding:0 0 8px 0 !important;}\\r\\n.container-outer { overflow: scroll; width: 500px; height: 210px; }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9jb2xsZWN0aW9ucy9jb2xsZWN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQiwwQkFBMEIsRUFBRSw0QkFBNEIsQ0FBQztBQUNuRixtQkFBbUIsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbnMvY29sbGVjdGlvbnMvY29sbGVjdGlvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZSB0YWJsZS5pbm5lcnRibCB0ZCB7Ym9yZGVyLXRvcDpub25lICFpbXBvcnRhbnQ7IHBhZGRpbmc6MCAwIDhweCAwICFpbXBvcnRhbnQ7fVxyXG4uY29udGFpbmVyLW91dGVyIHsgb3ZlcmZsb3c6IHNjcm9sbDsgd2lkdGg6IDUwMHB4OyBoZWlnaHQ6IDIxMHB4OyB9Il19 */\"","module.exports = \"<!-- BreadCrumb -->\\n<div *mobxAutorun class=\\\"row\\\">   \\n    <div class=\\\"col-lg-12\\\">\\n            <alert></alert>\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Today's Transactions</div>\\n                <app-statusreportbar></app-statusreportbar>\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form>\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-6 mb-3\\\">\\n                        <label class=\\\"form-label\\\" for=\\\"validationCustom01\\\">Search By Status</label>\\n                        <select class=\\\"form-control\\\">\\n                                <option value=\\\"\\\" disabled selected>--Select Status--</option>\\n                            <option *ngFor=\\\"let status of statusFacade.statusList\\\" [value]=\\\"status.id\\\">{{status.name}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-6 mb-3\\\">\\n                        <label class=\\\"form-label\\\" for=\\\"validationCustom02\\\">Search By Transaction Type</label>\\n                        <select class=\\\"form-control\\\">\\n                            <option value=\\\"\\\" disabled selected>--Select Transaction Type--</option>\\n                            <option *ngFor=\\\"let transactionType of transactionTypeFacade.getAllTransactionTypes\\\" [value]=\\\"transactionType.id\\\">{{transactionType.name}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" \\n                        placeholder=\\\"Filter Transaction By Reg Number, Amount, Transaction Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"card mb-grid\\\" *ngIf=\\\"operationsFacade.getTransactionList.length !== 0; else transactionListBlock\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Transactions</div>\\n            </div>\\n            <table class=\\\"table table-hover mb-0\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"col\\\">#</th>\\n                        <th class=\\\"col\\\">Agent Name</th>\\n                        <th class=\\\"col\\\">Trans. Type</th>\\n                        <th class=\\\"col\\\">Reg. No.</th>\\n                        <th class=\\\"col\\\">Submitted</th>\\n                        <th class=\\\"col\\\">Rejected</th>\\n                        <th class=\\\"col\\\">Completed</th>\\n                        <th  class=\\\"col\\\">Treated By</th>\\n                        <th class=\\\"col\\\">Status</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let transaction of operationsFacade.transactions | transaction: searchText | tellertransaction: searchText | paginate: { itemsPerPage: 10, currentPage: p }; let i = index;\\\" class=\\\"active\\\">\\n                        <td>{{i + 1}}</td>\\n                        <td>{{transaction.customerName.firstname}}&nbsp;&nbsp;{{transaction.customerName.lastname}}</td>\\n                        <td>{{transaction.transactionType}}</td>\\n                        <td>{{transaction.platenumber}}</td>\\n                        <td>{{transaction.timeSubmitted | date:'mediumTime' }}</td>\\n                        <td *ngIf=\\\"transaction.timeRejected.length !== 0; else rejectedTransaction\\\" >\\n                            <table class=\\\"innertbl\\\">\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let time of transaction.timeRejected\\\" style=\\\"word-wrap: break-word;\\\">\\n                                            <td>{{ time | date:'mediumTime' }}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>                                            \\n                        </td>\\n                        <ng-template #rejectedTransaction>\\n                            <td>Never Rejected</td>\\n                        </ng-template>   \\n                        <td *ngIf=\\\"transaction.timeCompleted !== null; else completedTransaction\\\" >{{transaction.timeCompleted | date:'mediumTime' }}</td>\\n                        <ng-template #completedTransaction>\\n                            <td>Not Completed</td>\\n                        </ng-template>   \\n                        <td>\\n                            <table class=\\\"innertbl\\\">\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let teller of transaction.treatedBy\\\" style=\\\"word-wrap: break-word;\\\">\\n                                        <td>{{teller.firstname}}&nbsp;&nbsp;{{teller.lastname}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table> \\n                        </td>\\n                        <td>{{transaction.status}}</td>\\n                        <td *ngIf=\\\"transaction.status == 'Processing'\\\">\\n                            <button (click)=\\\"completeTransaction(transaction.id)\\\"  class=\\\"btn btn-info\\\" >Complete</button>\\n                        </td>\\n                        <td *ngIf=\\\"transaction.status == 'Completed'\\\">\\n                            <button (click)=\\\"returnedTransaction(transaction.id)\\\" class=\\\"btn btn-info btn-success\\\" >Return Job</button>\\n                        </td>\\n                        <td *ngIf=\\\"transaction.status == 'Processing' || transaction.status == 'Submitted'\\\">\\n                            <button (click)=\\\"rejectTransaction(transaction.id)\\\" class=\\\"btn btn-danger\\\" >Reject</button>\\n                        </td>\\n                    </tr>                                    \\n                </tbody>\\n            </table>     \\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>                    \\n        </div> \\n    </div>  \\n    <div class=\\\"col-md-12\\\">\\n        <ng-template #transactionListBlock>\\n            <div class=\\\"card text-center mb-grid\\\">\\n                <h3><b><em>No transactions today</em></b></h3>\\n            </div>\\n        </ng-template>   \\n    </div>          \\n</div>    \"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { Configuration } from 'src/app/config';\nimport { OperationsService } from '../services/operations.service';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { TransactionService } from '../services/transaction.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { GeneralService } from 'src/app/admin/services/general.service';\nimport { Status } from 'src/app/domainmodel/status';\nimport { StatusFacade } from 'src/app/services/admin/statusfacade';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { TransactionTypeFacade } from 'src/app/services/admin/transactiontypefacade';\nimport { TransactionType } from 'src/app/domainmodel/transactiontype';\nimport { OperationsFacade } from 'src/app/services/operations/operationsfacade';\nimport { AlertService } from 'src/app/shared/_services';\nimport { UserAccess } from 'src/app/services/authentication/usersAccess';\n\n@Component({\n  selector: 'app-collections',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './collections.component.html',\n  styleUrls: ['./collections.component.css']\n})\nexport class CollectionsComponent implements OnInit {\n\n  private _hubConnection: HubConnection;\n\n  p: number = 1;\n  collection: any[] = this.operationsFacade.transactions;\n\n  constructor(public operationsFacade: OperationsFacade, private _configuration: Configuration,\n    private _operationsService: OperationsService, private _transactionService: TransactionService,\n    public statusFacade: StatusFacade, public transactionTypeFacade: TransactionTypeFacade, \n    private spinner: NgxSpinnerService, public alertService: AlertService,\n    private userAccess: UserAccess) { }\n\n  startSignalRConnection(){\n    let builder = new HubConnectionBuilder();\n    this._hubConnection = builder.withUrl(this._configuration.ApiServerSSL + 'transactions').build();\n\n    this._hubConnection.on('GetTodayTransactions', data => {\n      this.operationsFacade.transactions = data;\n    });\n\n    this._hubConnection.start().then(() => console.log(\"connected\"));\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n    this._operationsService.getTodaysTransactions()\n    .subscribe(() => {\n      this.spinner.hide();\n    });\n   this.startSignalRConnection();\n  }\n\n  completeTransaction(id: string){\n    this.spinner.show();\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n\n    this.operationsFacade.transaction.status = \"Completed\";\n    this.operationsFacade.transaction.completedBy = this.userAccess.user;\n    this.operationsFacade.transaction.timeCompleted = new Date(); \n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Complete Transaction. Please try again.\")\n        }\n      );\n  }\n\n  rejectTransaction(id: string){\n    this.spinner.show();\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n\n    this.operationsFacade.transaction.status = \"Rejected\";\n    this.operationsFacade.transaction.rejectedBy.push(this.userAccess.user);\n    this.operationsFacade.transaction.timeRejected.push(new Date()); \n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Reject Transaction. Please try again.\")\n        }\n      );\n  }\n\n  returnedTransaction(id: string){\n    this.spinner.show();\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n\n    this.operationsFacade.transaction.status = \"Returned\";\n    this.operationsFacade.transaction.returnedBy.push(this.userAccess.user);\n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Complete Transaction. Please try again.\")\n        }\n    );\n  }\n}\n","module.exports = \".ul-class {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n  \\r\\n  .li-class {\\r\\n    float: left;\\r\\n  }\\r\\n  \\r\\n  .li-class a {\\r\\n    display: block;\\r\\n    color: black;\\r\\n    text-align: center;\\r\\n    padding: 5px;\\r\\n    text-decoration: none;\\r\\n  }\\r\\n  \\r\\n  .li-class a:hover {\\r\\n    background-color: cornflowerblue;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9jb250YWluZXIvY29udGFpbmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsU0FBUztJQUNULFVBQVU7SUFDVixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oscUJBQXFCO0VBQ3ZCOztFQUNBO0lBQ0UsZ0NBQWdDO0VBQ2xDIiwiZmlsZSI6InNyYy9hcHAvb3BlcmF0aW9ucy9jb250YWluZXIvY29udGFpbmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudWwtY2xhc3Mge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gIFxyXG4gIC5saS1jbGFzcyB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICB9XHJcbiAgXHJcbiAgLmxpLWNsYXNzIGEge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgfVxyXG4gIC5saS1jbGFzcyBhOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGNvcm5mbG93ZXJibHVlO1xyXG4gIH0iXX0= */\"","module.exports = \"<!-- Start Header Top Area -->\\n<div class=\\\"adminx-container\\\" style=\\\"padding-top: 1.0rem;\\\">\\n        <nav class=\\\"navbar navbar-expand justify-content-between fixed-top\\\">\\n            <a class=\\\"navbar-brand mb-0 h1 d-none d-md-block\\\" href=\\\"index.html\\\">\\n                <img src=\\\"./../../../assets/images/fav.png\\\" class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" alt=\\\"\\\">\\n                QueueIT\\n            </a>\\n    \\n            <div class=\\\"d-flex flex-1 d-block d-md-none\\\">\\n                <a class=\\\"sidebar-toggle ml-3\\\">\\n                    <i-feather name=\\\"menu\\\"></i-feather>\\n                </a>\\n            </div>\\n    \\n            <ul class=\\\"navbar-nav d-flex justify-content-end mr-2\\\">\\n                <!-- Notificatoins -->\\n                <li *ngIf=\\\"userAccess.isSeniorTeller\\\" class=\\\"nav-item d-flex align-items-center mr-2\\\">\\n                    <a [routerLink]=\\\"['/operations/process-transactions']\\\" class=\\\"btn btn-sm btn-secondary\\\">\\n                        Process Transactions\\n                    </a>\\n                </li>\\n                <li *ngIf=\\\"userAccess.isTransactionalTeller || userAccess.isTeller\\\" class=\\\"nav-item d-flex align-items-center mr-2\\\">\\n                    <a [routerLink]=\\\"['/operations/process-jobs']\\\" class=\\\"btn btn-sm btn-secondary\\\">\\n                        Process Jobs\\n                    </a>\\n                </li>\\n                <li *ngIf=\\\"userAccess.isTransactionalTeller || userAccess.isTeller\\\"  class=\\\"nav-item d-flex align-items-center mr-2\\\">\\n                    <a [routerLink]=\\\"['/operations/checkout-jobs']\\\" class=\\\"btn btn-sm btn-labeled-right btn-success\\\">\\n                        <span class=\\\"btn-label\\\">\\n                          <span class=\\\"oi oi-arrow-thick-right\\\" aria-hidden=\\\"true\\\"></span>\\n                        </span>\\n                        <span class=\\\"btn-text\\\">\\n                          Check Out\\n                        </span>\\n                      </a>\\n                </li>\\n                <!-- Notifications -->\\n                <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-link avatar-with-name\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\">\\n                    <img src=\\\"./../../../assets/images/user2.png\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n                </a>\\n                <div *ngIf=\\\"!userAccess.isTransactionalTeller || !userAccess.isTeller\\\" class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n                        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/login']\\\" href=\\\"#\\\">Login as Administrator</a>\\n                        <div class=\\\"dropdown-divider\\\"></div>\\n                    <button type=\\\"button\\\" class=\\\"dropdown-item text-danger\\\" (click)=\\\"logout()\\\">Log Out</button>\\n                </div>\\n                </li>\\n            </ul>\\n        </nav>\\n        <!-- Main Content -->\\n        <div class=\\\"adminx-content\\\">\\n            <div class=\\\"adminx-main-content\\\">\\n                <div class=\\\"container-fluid\\\">\\n                    <ngx-spinner \\n                        bdOpacity = 0.9\\n                        bdColor = \\\"rgba(182,217,216,0.42)\\\"\\n                        size = \\\"medium\\\"\\n                        color = \\\"#48567c\\\"\\n                        type = \\\"ball-running-dots\\\"\\n                        [fullScreen] = \\\"true\\\">\\n                    </ngx-spinner> \\n                    <alert></alert>\\n                    <router-outlet></router-outlet>    \\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserAccess } from './../../admin/services/userAccess';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n\n  date: any;\n  \n  constructor(public userAccess: UserAccess, private authService: AuthService, private _router: Router) { }\n\n  ngOnInit() {\n    this.date = new Date().getFullYear();\n  }\n\n  logout(){\n    this.authService.logout();\n    this.userAccess.auth = false;\n    this._router.navigate(['admin/login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbnMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbnMvZ2V0bmV3dXNlcnByb2ZpbGUvZ2V0bmV3dXNlcnByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  getnewuserprofile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-getnewuserprofile',\n  templateUrl: './getnewuserprofile.component.html',\n  styleUrls: ['./getnewuserprofile.component.css']\n})\nexport class GetnewuserprofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".col-lg-7 {\\r\\n\\r\\n    width: 60.33333333%;\\r\\n\\r\\n}\\r\\n\\r\\n.col-lg-5 {\\r\\n\\r\\n    width: 39.66666667%;\\r\\n\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n    color: #fff;\\r\\n    background:transparent;\\r\\n    border-color: #007bff;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n    background:#007bff linear-gradient(180deg,#258efe,#007bff) repeat-x;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9qb2Ivam9iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksbUJBQW1COztBQUV2Qjs7QUFFQTs7SUFFSSxtQkFBbUI7O0FBRXZCOztBQUNBO0lBQ0ksV0FBVztJQUNYLHNCQUFzQjtJQUN0QixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxtRUFBbUU7QUFDdkUiLCJmaWxlIjoic3JjL2FwcC9vcGVyYXRpb25zL2pvYi9qb2IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2wtbGctNyB7XHJcblxyXG4gICAgd2lkdGg6IDYwLjMzMzMzMzMzJTtcclxuXHJcbn1cclxuXHJcbi5jb2wtbGctNSB7XHJcblxyXG4gICAgd2lkdGg6IDM5LjY2NjY2NjY3JTtcclxuXHJcbn1cclxuLmJ0bi1wcmltYXJ5IHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuYTpob3ZlcntcclxuICAgIGJhY2tncm91bmQ6IzAwN2JmZiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCMyNThlZmUsIzAwN2JmZikgcmVwZWF0LXg7XHJcbn0iXX0= */\"","module.exports = \"<!-- BreadCrumb -->\\n    <div *mobxAutorun class=\\\"row\\\">               \\n        <div class=\\\"col-lg-5\\\">                \\n            <div class=\\\"card mb-grid\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n    \\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n            <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n                <form [formGroup]=\\\"transactionForm\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom01\\\">First name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"firstname\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"First name\\\" value=\\\"Mark\\\" required>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom02\\\">Last name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"lastname\\\" class=\\\"form-control\\\" id=\\\"validationCustom02\\\" placeholder=\\\"Last name\\\" value=\\\"Otto\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom01\\\">Transaction Type</label>\\n                            <select class=\\\"form-control\\\" formControlName=\\\"transactiontype\\\">\\n                                    <option value=\\\"0\\\" disabled selected>--Select Transaction Type--</option>\\n                                <option *ngFor=\\\"let transactionType of transactionTypeFacade.transactiontypes\\\" [value]=\\\"transactionType.name\\\">{{transactionType.name}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom01\\\">Registration No</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"registrationnumber\\\" class=\\\"form-control\\\" id=\\\"validationCustom01\\\" placeholder=\\\"Registration Number\\\" value=\\\"Mark\\\" required>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom02\\\">Amount</label>\\n                            <input type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\" id=\\\"validationCustom02\\\" placeholder=\\\"Amount\\\" value=\\\"\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label class=\\\"form-label\\\" for=\\\"validationCustom01\\\">Assign to a Teller</label>\\n                            <select class=\\\"form-control\\\" formControlName=\\\"tellerid\\\">\\n                                    <option value=\\\"0\\\" disabled selected>--Select Teller--</option>\\n                                <option *ngFor=\\\"let seniorteller of operationsFacade.getSeniorTellerList\\\" [value]=\\\"seniorteller.identity\\\">{{seniorteller.firstname}}&nbsp;&nbsp;{{seniorteller.lastname}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <div class=\\\"radio-inline\\\" *ngFor=\\\"let item of itemsList\\\">\\n                                <label><input formControlName=\\\"status\\\" type=\\\"radio\\\" checked=\\\"\\\" class=\\\"i-checks\\\" value=\\\"{{item.value}}\\\" (change)=\\\"onItemChange(item)\\\"> <i></i> \\n                                    <mark> {{item.name}}</mark>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <button *ngIf=\\\"buttonName === 'Add Transaction'; else elseBlock\\\" (click)=\\\"addTransaction()\\\"  class=\\\"btn btn-success notika-btn-success\\\">Add Transaction</button>\\n                    <ng-template #elseBlock>\\n                        <button *ngIf=\\\"buttonName === 'Update Transaction';\\\" (click)=\\\"updateTransaction()\\\" class=\\\"btn btn-success notika-btn-success\\\">Update Transaction</button>\\n                    </ng-template>\\n                </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-7\\\">\\n            <!-- Table seamless striped -->\\n            <div *ngIf=\\\"operationsFacade.getTransactionList.length !== 0; else transactionListBlock\\\" class=\\\"card mb-grid\\\">\\n                <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" placeholder=\\\"Search Today's Transactions\\\" [ngModelOptions]=\\\"{standalone:true}\\\">\\n                </div>\\n                <table class=\\\"table table-striped mb-0\\\">\\n                    <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">#</th>\\n                        <th scope=\\\"col\\\">Agent Name</th>\\n                        <th scope=\\\"col\\\">Trans. Type</th>\\n                        <th scope=\\\"col\\\">Reg. No.</th>\\n                        <th scope=\\\"col\\\">Status</th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                    <tr *ngFor=\\\"let transaction of operationsFacade.transactions | transaction: searchText | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\">                        \\n                        <td>{{i + 1}}</td>\\n                        <td>{{transaction.customerName.firstname}}&nbsp;&nbsp;{{transaction.customerName.lastname}}</td>\\n                        <td>{{transaction.transactionType}}</td>\\n                        <td>{{transaction.platenumber}}</td>\\n                        <td>{{transaction.status}}</td>\\n                        <td *ngIf=\\\"transaction.status != 'Returned'\\\" >\\n                            <a (click)=\\\"editTransaction(transaction.id)\\\" class=\\\"btn btn-labeled-right btn-primary\\\">\\n                                <span class=\\\"btn-label\\\">\\n                                    <i-feather name=\\\"Edit\\\"></i-feather>\\n                                </span>\\n                                <span class=\\\"btn-text\\\">\\n                                    Edit\\n                                </span>\\n                            </a>\\n                        </td>\\n                    </tr>                \\n                    </tbody>\\n                </table>\\n                <!-- // Table seamless striped -->\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n            </div>\\n            <ng-template #transactionListBlock>\\n                <h1 class=\\\"card mb-grid text-center\\\"><b><em>No existing transactions for today</em></b></h1>\\n            </ng-template>                            \\n        </div>\\n    </div>\"","import { Accounts } from '../../valueobjects/accountvo';\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { CustomerVO } from 'src/app/valueobjects/customerVO';\nimport { TransactionService } from '../services/transaction.service';\nimport { Transaction } from 'src/app/domainmodel/interfaces/transaction';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { OutletImp } from 'src/app/domainmodel/outletimp';\nimport { TransactionApiModel } from '../apimodels/transactionapimodel';\nimport { OperationsService } from '../services/operations.service';\nimport { TransactionType } from 'src/app/domainmodel/transactiontype';\nimport { TransactionTypeFacade } from 'src/app/services/admin/transactiontypefacade';\nimport { Configuration } from 'src/app/config';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { OperationsFacade } from 'src/app/services/operations/operationsfacade';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\nimport { AlertService } from 'src/app/shared/_services';\nimport { UserAccess } from 'src/app/services/authentication/usersAccess';\n\nexport class Item{\n  name:string;\n  value:string;\n}\n\nexport const ITEMS: Item[] = [\n  {\n      name:'Submitted',\n      value:'Submitted'\n   },\n   {\n       name:'Processing',\n       value:'Processing'\n    },\n    {\n      name:'Awaiting Mail',\n      value:'Awaiting-Mail'\n   }\n];\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent implements OnInit {\n\n  radioSel:any;\n  radioSelected:string;\n  radioSelectedString:string;\n  itemsList: Item[] = ITEMS;\n\n  transactionForm: FormGroup;\n  buttonName: string = \"Add Transaction\";\n\n  private _hubConnection: HubConnection;\n\n  p: number = 1;\n  collection: any[] = this.operationsFacade.transactions;\n  \n  constructor(private _transactionService: TransactionService, private _operationsService: OperationsService,\n    public transactionTypeFacade: TransactionTypeFacade, private _configuration: Configuration, \n    public operationsFacade: OperationsFacade, public alertService: AlertService,\n    private spinner: NgxSpinnerService, private userAccess: UserAccess) { \n    this.transactionForm = new FormGroup({\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      transactiontype: new FormControl('', Validators.required),\n      registrationnumber: new FormControl('', Validators.required),\n      amount: new FormControl('', Validators.required),\n      tellerid: new FormControl('', Validators.required),\n      status: new FormControl('', Validators.required)\n    });\n    this.itemsList = ITEMS;\n      // this.radioSelected = \"item_3\";\n      this.getSelecteditem();\n  }  \n\n  startSignalRConnection(){\n    let builder = new HubConnectionBuilder();\n    this._hubConnection = builder.withUrl(this._configuration.ApiServerSSL + 'transactions').build();\n\n    this._hubConnection.on('GetTodayTransactions', data => {\n      this.operationsFacade.transactions = data;\n    });\n\n    this._hubConnection.start().then(() => console.log(\"connected\"));\n  }\n\n  ngOnInit() {        \n    this.spinner.show();\n    //invoke signalr\n      this._operationsService.getTodaysTransactions()\n    .subscribe(() => {\n      this.spinner.hide();\n    });\n      //start streaming/listening for data via signalr\n    this.startSignalRConnection();\n  }\n\n  getSelecteditem(){\n    this.radioSel = ITEMS.find(Item => Item.value === this.radioSelected);\n    this.radioSelectedString = JSON.stringify(this.radioSel);\n  }\n\n  onItemChange(item){\n    this.getSelecteditem();\n  }\n\n  addTransaction(){\n    this.spinner.show();\n    let transaction = new TransactionApiModel();\n    let firstname = this.transactionForm.get(\"firstname\").value;\n    let lastname = this.transactionForm.get(\"lastname\").value;\n\n    let agent = new CustomerVO();\n    agent.firstname = firstname;\n    agent.lastname = lastname;\n\n    transaction.customerName = agent;\n    transaction.platenumber = this.transactionForm.get(\"registrationnumber\").value;\n    transaction.status = this.transactionForm.get(\"status\").value;\n    transaction.transactionType = this.transactionForm.get(\"transactiontype\").value;\n    transaction.amount = this.transactionForm.get(\"amount\").value;\n    transaction.createdBy = this.userAccess.user;\n    transaction.treatedBy = this.transactionForm.get(\"tellerid\").value;\n    transaction.timeSubmitted = new Date();\n    transaction.outletName = \"Courteville\";\n    transaction.allocatedTime = \"10\";\n\n    this._transactionService.addTransaction(transaction)\n      .subscribe (() =>{\n        this.spinner.hide();\n      this.transactionForm.reset({tellerid: 0, transactiontype: 0});      \n      // this.alertService.success(\"New Transaction Added.\");\n    },\n      (err: HttpErrorResponse) => {\n        this.spinner.hide();\n          console.log(\"Error: \" + err);\n          this.alertService.error(\"Unable to Add New Transaction. Please try again.\")\n      }\n    );    \n  }\n\n  editTransaction(id: string){    \n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n    \n    this.transactionForm.setValue({\n      firstname: this.operationsFacade.transaction.customerName.firstname,\n      lastname: this.operationsFacade.transaction.customerName.lastname,\n      transactiontype: this.operationsFacade.transaction.transactionType,\n      registrationnumber: this.operationsFacade.transaction.platenumber,\n      amount: this.operationsFacade.transaction.amount,\n      tellerid: this.operationsFacade.transaction.treatedBy[0].identity,\n      status: this.operationsFacade.transaction.status\n    });\n    this.operationsFacade.transaction.treatedBy = [];\n    this.operationsFacade.transaction.completedBy = null;\n    this.operationsFacade.transaction.returnedBy = null;\n    this.buttonName = \"Update Transaction\";\n  }\n\n  updateTransaction(){\n    this.spinner.show();\n    let firstname = this.transactionForm.get(\"firstname\").value;\n    let lastname = this.transactionForm.get(\"lastname\").value;\n\n    let agent = new CustomerVO();\n    agent.firstname = firstname;\n    agent.lastname = lastname;\n\n    this.operationsFacade.transaction.customerName = agent;\n    this.operationsFacade.transaction.platenumber = this.transactionForm.get(\"registrationnumber\").value;\n    this.operationsFacade.transaction.status = this.transactionForm.get(\"status\").value;\n    this.operationsFacade.transaction.transactionType = this.transactionForm.get(\"transactiontype\").value;\n    this.operationsFacade.transaction.amount = this.transactionForm.get(\"amount\").value;\n\n    let tellerid: string = this.transactionForm.get(\"tellerid\").value;\n    let teller = this.operationsFacade.getTellerById(tellerid);\n    this.operationsFacade.transaction.treatedBy.push(teller); \n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n          this.transactionForm.reset({tellerid: 0, transactiontype: 0});          \n          this.alertService.success(\"Transaction Updated.\");\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Transaction Update Failed. Please try again\")\n        }\n      );\n      this.buttonName = \"Add Transaction\";\n  }\n\n  turnToUserVO(user: Accounts): UserVO{\n    console.log(user);\n    let _user = new UserVO();\n    _user.firstname = user.firstname;\n    _user.lastname = user.lastname;\n    _user.identity = user.identity;\n    _user.email = user.username;\n    _user.roles = user.roles;\n\n    return _user;\n  }\n\n}\n","module.exports = \".navbar-brand-image {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.page-login {\\r\\n    max-width: 35rem;\\r\\n    float: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL29wZXJhdGlvbnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXItYnJhbmQtaW1hZ2Uge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLWxvZ2luIHtcclxuICAgIG1heC13aWR0aDogMzVyZW07XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn0iXX0= */\"","module.exports = \"\\n<div class=\\\"adminx-container\\\">        \\n  <div class=\\\"page-login\\\">\\n    <div class=\\\"text-center\\\">\\n      <a class=\\\"navbar-brand mb-4 h1\\\" [routerLink]=\\\"['/operations/login']\\\">\\n        <img class=\\\"navbar-brand-image d-inline-block align-top mr-2\\\" src=\\\"assets/images/cbs-signature[15928]-new.png\\\" alt=\\\"greatplacetowork\\\">\\n      </a>\\n      <hr/>\\n    </div>      \\n<alert></alert>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"loginForm\\\">\\n            <a [routerLink]=\\\"['/admin/login']\\\" class=\\\"btn btn-sm btn-block btn-primary\\\" style=\\\"color: white\\\">Login as Administrator</a>\\n            <br>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleDropdownFormEmail1\\\" class=\\\"form-label\\\">Email address</label>\\n            <input type=\\\"email\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" id=\\\"exampleDropdownFormEmail1\\\" placeholder=\\\"Enter Your Email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleDropdownFormPassword1\\\" class=\\\"form-label\\\">Password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\"  class=\\\"form-control\\\" id=\\\"exampleDropdownFormPassword1\\\" placeholder=\\\"Enter Your Password\\\">\\n          </div>\\n          <button type=\\\"submit\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-sm btn-block btn-success\\\">Login</button>\\n        </form>\\n      </div>\\n      <div class=\\\"card-footer text-center\\\">\\n          <em> Old User?</em> &nbsp;&nbsp; <a [routerLink]=\\\"['/operations/getnewprofile']\\\"><small><em>Get New Profile</em></small></a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  \"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { OperationsService } from 'src/app/operations/services/operations.service';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { AuthService } from '../services/auth.service';\nimport { UserLoginApiModel } from '../apimodels/userloginapimodel';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserAccess } from './../services/userAccess';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlertService } from 'src/app/shared/_services';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private _hubConnection: HubConnection;\n  loginForm: FormGroup;\n  isRequesting: boolean;\n  \n  constructor(private _router: Router, private _operationsService: OperationsService, \n    public transactionStore: TransactionStore, private _authService: AuthService,\n    public userAccess: UserAccess, private spinner: NgxSpinnerService, public alertService: AlertService) { \n      this.loginForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n    }\n  \n  ngOnInit() {       \n    this._authService.logout();\n  }\n\n  async login(){    \n     this.spinner.show();\n    let model = new UserLoginApiModel();\n    model.Username = this.loginForm.get('username').value;\n    model.Password = this.loginForm.get('password').value;\n\n    await this._authService.login(model)\n      .subscribe((data) => {\n        if(data){\n          this.spinner.hide();\n          this.userAccess.user.isActive = data.isActive;\n          if(this.userAccess.user.isActive){\n            this.userAccess.user.identity = data.id;\n            this.userAccess.user.email = data.email;\n            this.userAccess.user.firstname = data.firstname;\n            this.userAccess.user.lastname = data.lastname;\n            this.userAccess.user.roles = data.roles;\n            this._authService.setSession(data);\n            /**use the user role to determine\n             * what page to navigate to\n             */\n            \n            let route:string = this.userAccess.accessibleRoute(this.userAccess.user.roles[0]);\n            this.userAccess.auth = true;\n            this._router.navigate([route]);          \n          }\n          else{\n            this.alertService.error(\"Oops! Your account has been deactivated. Contact the Operations Department.\");\n          } \n        }                 \n      },\n      (err: HttpErrorResponse) => {\n        this.spinner.hide();\n        console.log(\"Error: \" + err);\n        this.alertService.error(\"Oops! Login details are wrong. You need to remember them.\");\n      }\n    );\n    \n    this._operationsService.getTodaysTransactions()\n    .subscribe((data: QueueITTransaction[]) => {\n      \n    });\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContainerComponent } from './container/container.component';\nimport { JobComponent } from './job/job.component';\nimport { CollectionsComponent } from './collections/collections.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgxSpinnerModule, NgxSpinnerService } from 'ngx-spinner';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MobxAngularModule } from 'mobx-angular';\nimport { routing } from './operations.routing';\nimport { ProcesstransactionsComponent } from './processtransactions/processtransactions.component';\nimport { TransactionService } from './services/transaction.service';\nimport { TransactionStore } from '../store/operations/transaction';\nimport { StatusreportbarComponent } from './statusreportbar/statusreportbar.component';\nimport { TransactionPipe } from './pipes/transaction.pipe';\nimport { TellertransactionPipe } from './pipes/tellertransaction.pipe';\nimport { TellerStore } from '../store/operations/teller';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from '../shared/shared.module';\nimport { OperationsFacade } from '../services/operations/operationsfacade';\nimport { TransactionTypeFacade } from '../services/admin/transactiontypefacade';\nimport { RoleFacade } from '../services/admin/rolefacade';\nimport { StatusFacade } from '../services/admin/statusfacade';\nimport { ReportFacade } from '../services/admin/reportsfacade';\nimport { UserFacade } from '../services/admin/userfacade';\nimport { LoginComponent } from './login/login.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { GetnewuserprofileComponent } from './getnewuserprofile/getnewuserprofile.component';\nimport { UserAccess } from './services/userAccess';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Configuration } from '../config';\n\n@NgModule({\n  declarations: [\n    ContainerComponent, \n    JobComponent, \n    CollectionsComponent, \n    ProcesstransactionsComponent, \n    StatusreportbarComponent, \n    TransactionPipe, \n    TellertransactionPipe, LoginComponent, FooterComponent, GetnewuserprofileComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgSelectModule,\n    SharedModule,   \n    routing\n  ],\n  providers: [\n    TransactionService, \n    TransactionStore, \n    TellerStore, \n    OperationsFacade,\n    TransactionTypeFacade,\n    RoleFacade,\n    NgxSpinnerService,\n    StatusFacade,\n    ReportFacade,\n    UserFacade,\n    UserAccess,\n    Configuration\n  ],\n  exports:[TransactionPipe, NgxSpinnerModule,\n    TellertransactionPipe]\n})\nexport class OperationsModule { }\n","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { CollectionsComponent } from './collections/collections.component';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ProcesstransactionsComponent } from './processtransactions/processtransactions.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'operations',\r\n        component: ContainerComponent,\r\n\r\n        children: [\r\n            { path: '', pathMatch: 'full', redirectTo: 'login' },            \r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'process-jobs', component: JobComponent },\r\n            { path: 'checkout-jobs', component: CollectionsComponent },\r\n            { path: 'process-transactions', component: ProcesstransactionsComponent }\r\n        ]\r\n    }    \r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);","import { Pipe, PipeTransform } from '@angular/core';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\n\n@Pipe({\n  name: 'tellertransaction'\n})\nexport class TellertransactionPipe implements PipeTransform {\n\n  transform(transactions: QueueITTransaction[], searchText: any): any {\n    if(searchText == null)\n        return transactions;\n\n    return transactions.filter(function(transaction){\n      return transaction.treatedBy.filter(function(teller){\n        return (teller.firstname.toLowerCase().indexOf(searchText.toLowerCase())> -1)\n        || (teller.lastname.toLowerCase().indexOf(searchText.toLowerCase())> -1)\n      })      \n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\n\n@Pipe({\n  name: 'transaction'\n})\nexport class TransactionPipe implements PipeTransform {\n  transform(transactions: QueueITTransaction[], searchText: any): any {\n    if(searchText == null)\n        return transactions;\n\n    return transactions.filter(function(transaction){\n      return (transaction.customerName.firstname.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.customerName.lastname.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.platenumber.toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n      || (transaction.amount.toString().indexOf(searchText.toString()) > -1);      \n    });\n  }\n}\n","module.exports = \".table table.innertbl td {border-top:none !important; padding:0 0 8px 0 !important;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9wcm9jZXNzdHJhbnNhY3Rpb25zL3Byb2Nlc3N0cmFuc2FjdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQkFBMEIsMEJBQTBCLEVBQUUsNEJBQTRCLENBQUMiLCJmaWxlIjoic3JjL2FwcC9vcGVyYXRpb25zL3Byb2Nlc3N0cmFuc2FjdGlvbnMvcHJvY2Vzc3RyYW5zYWN0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlIHRhYmxlLmlubmVydGJsIHRkIHtib3JkZXItdG9wOm5vbmUgIWltcG9ydGFudDsgcGFkZGluZzowIDAgOHB4IDAgIWltcG9ydGFudDt9Il19 */\"","module.exports = \"<!-- BreadCrumb -->\\n<div *mobxAutorun class=\\\"row\\\"> \\n    <div class=\\\"col-lg-12\\\">                \\n        <!-- Modal -->\\n        <form [formGroup]=\\\"assignToColleagueForm\\\">\\n            <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n                <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Assign to Colleague</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <p>\\n                            Select a Teller to continue processing\\n                        </p>\\n                        <select name=\\\"teller\\\" formControlName=\\\"tellerid\\\" class=\\\"form-control\\\" required>\\n                            <option value=\\\"\\\" disabled selected>--Select Colleague--</option>\\n                            <option *ngFor=\\\"let seniorteller of operationsFacade.getSeniorTellerList\\\" [value]=\\\"seniorteller.identity\\\">{{seniorteller.firstname}}&nbsp;&nbsp;{{seniorteller.lastname}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"assignTransactionToColleague()\\\">Assign Transaction</button>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </form>\\n        <!-- Modal -->\\n        <div class=\\\"card mb-grid\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Today's Transactions</div>\\n\\n                <nav class=\\\"card-header-actions\\\">\\n                    <a class=\\\"card-header-action\\\" data-toggle=\\\"collapse\\\" href=\\\"#card1\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"card1\\\">\\n                    <i-feather name=\\\"minus-circle\\\"></i-feather>\\n                    </a>\\n                </nav>\\n            </div>\\n        <div class=\\\"card-body collapse show\\\" id=\\\"card1\\\">\\n            <form>\\n                <div class=\\\"form-row\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" \\n                        placeholder=\\\"Filter Transaction By Reg Number, Amount, Transaction Type\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                </div>\\n            </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div *mobxAutorun class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"card mb-grid\\\" *ngIf=\\\"operationsFacade.getTellerTransactions.length !== 0; else transactionListBlock\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n                <div class=\\\"card-header-title\\\">Transactions</div>\\n            </div>\\n            <form [formGroup]=\\\"processTransactionForm\\\">\\n                    <table class=\\\"table table-sc-ex\\\">\\n                        <thead>\\n                            <tr>\\n                                <!-- <th>S/N</th> -->\\n                                <th>Customer</th>\\n                                <th>Trans. Type</th>\\n                                <th>Reg. No.</th>\\n                                <th>Amount</th>                                                \\n                                <th>Status</th>\\n                                <th>As At</th>\\n                                <th>Select a Teller to AssignTo</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let transaction of operationsFacade.tellerTransactions | transaction: searchText | paginate: { itemsPerPage: 5, currentPage: p }; let i = index;\\\"  class=\\\"active\\\">\\n                                <!-- <td>{{i + 1}}</td> -->\\n                                <td>{{transaction.customerName.firstname}}&nbsp;&nbsp;{{transaction.customerName.lastname}}</td>\\n                                <td>{{transaction.transactionType}}</td>\\n                                <td>{{transaction.platenumber}}</td>\\n                                <td>{{transaction.amount}}</td>                                                \\n                                <td>{{transaction.status}}</td>\\n                                <td *ngIf=\\\"transaction.status == 'Submitted'\\\">{{transaction.timeSubmitted | date:' h:mma'}}</td>\\n                                <td *ngIf=\\\"transaction.status == 'Completed'\\\">{{transaction.timeCompleted | date:' h:mma'}}</td>\\n                                <td *ngIf=\\\"transaction.status == 'Processing'\\\">{{transaction.datecreated | date:' h:mma'}}</td>\\n                                <td *ngIf=\\\"transaction.status == 'Issue'\\\" >\\n                                    <em *ngFor=\\\"let time of transaction.timeIssueFlagged\\\">\\n                                            {{time | date:' h:mma'}}\\n                                    </em>                                    \\n                                </td>\\n                                <td *ngIf=\\\"transaction.status == 'Rejected'\\\">\\n                                    <table class=\\\"innertbl\\\">\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let time of transaction.timeRejected\\\" style=\\\"word-wrap: break-word;\\\">\\n                                                <td>\\n                                                    <em>{{time | date:' h:mma'}}</em>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </td>                                                \\n                                <td>\\n                                    <select class=\\\"form-control\\\" formControlName=\\\"tellerid\\\">\\n                                            <option value=\\\"\\\" disabled selected>--Select Teller--</option>\\n                                        <option *ngFor=\\\"let teller of operationsFacade.transactionalTellers\\\" [value]=\\\"teller.identity\\\">{{teller.firstname}}&nbsp;&nbsp;{{teller.lastname}}</option>\\n                                    </select>\\n                                </td>\\n                                <td *ngIf=\\\"transaction.status == 'Submitted' ? true : transaction.status == 'Awaiting-Mail' ? true: false;\\\">\\n                                    <input type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Flag Issue\\\" (click)=\\\"markTransactionHasIssue(transaction.id)\\\"/>\\n                                </td>\\n                                <td *ngIf=\\\"transaction.status == 'Submitted' ? true : transaction.status == 'Issue' ? true : transaction.status == 'Awaiting-Mail' ? true: false;\\\">\\n                                    <input type=\\\"button\\\" [disabled] = \\\"!processTransactionForm.valid\\\" class=\\\"btn btn-outline-info btn-yellow\\\" value=\\\"Assign\\\" (click)=\\\"assignTransaction(transaction.id)\\\" />\\n                                </td>\\n                                <td *ngIf=\\\"transaction.status == 'Submitted' ? true : transaction.status == 'Issue' ? true : transaction.status == 'Awaiting-Mail' ? true: false;\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\" (click)=\\\"selectedTransaction(transaction.id)\\\">Assign to Colleague</button>\\n                                </td>\\n                                <td *ngIf=\\\"transaction.status != 'Rejected' ? true : false\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"rejectTransaction(transaction.id)\\\">Reject</button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </form>   \\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>                    \\n        </div> \\n    </div>  \\n    <div class=\\\"col-md-12\\\">\\n        <ng-template #transactionListBlock>\\n            <div class=\\\"card text-center mb-grid\\\">\\n                <h3><b><em>No transactions assigned to you yet.</em></b></h3>\\n            </div>\\n        </ng-template>   \\n    </div>          \\n</div>    \"","import { Component, OnInit, ChangeDetectionStrategy, Injectable } from '@angular/core';\nimport { OperationsService } from '../services/operations.service';\nimport { HubConnectionBuilder, HubConnection } from '@aspnet/signalr';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { observable, computed } from 'mobx';\nimport { Configuration } from 'src/app/config';\nimport { Accounts } from 'src/app/valueobjects/accountvo';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { TransactionService } from '../services/transaction.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { OperationsFacade } from 'src/app/services/operations/operationsfacade';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AlertService } from 'src/app/shared/_services';\nimport { UserAccess } from 'src/app/services/authentication/usersAccess';\n\n@Component({\n  selector: 'app-processtransactions',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './processtransactions.component.html',\n  styleUrls: ['./processtransactions.component.css']\n})\nexport class ProcesstransactionsComponent implements OnInit {\n  \n  private _hubConnection: HubConnection;\n  processTransactionForm: FormGroup;\n  assignToColleagueForm: FormGroup;\n\n  p: number = 1;\n  collection: any[] = this.operationsFacade.tellerTransactions;\n  \n  constructor(private _operationsService: OperationsService, private _configuration: Configuration, \n    public operationsFacade: OperationsFacade, private _transactionService: TransactionService, \n    private spinner: NgxSpinnerService, public alertService: AlertService,\n    private userAccess: UserAccess) { \n      this.processTransactionForm = new FormGroup({\n        tellerid: new FormControl('', Validators.required)\n      });\n      this.assignToColleagueForm = new FormGroup({\n        tellerid: new FormControl('', Validators.required)\n      });\n    }\n\n  startSignalRConnection(){\n    let builder = new HubConnectionBuilder();\n    this._hubConnection = builder.withUrl(this._configuration.ApiServerSSL + 'transactions').build();    \n    \n    this._hubConnection.on('GetTodayTransactions', data => {      \n      this.operationsFacade.transactions = data;\n      console.log(this.operationsFacade.transactions);\n      this.operationsFacade.assignedTransactions(this.userAccess.user.identity, \n                  this.operationsFacade.transactions);\n    });    \n\n    this._hubConnection.start();\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n    this._operationsService.getTodaysTransactions()\n    .subscribe(() => {\n      this.spinner.hide();\n    },\n    (err: HttpErrorResponse) => {\n      this.spinner.hide();\n        console.log(\"Error: \" + err);\n        this.alertService.error(\"Something went wrong. Please login again.\")\n    }\n    );\n    this.startSignalRConnection();\n  }\n\n  assignTransactionToColleague(){\n    this.spinner.show();\n    let tellerid = this.assignToColleagueForm.get(\"tellerid\").value;\n\n    let teller = this.operationsFacade.getSeniorTellerById(tellerid);\n    this.operationsFacade.transaction.treatedBy.push(teller);\n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Assign Transaction to Colleague. Please try again.\")\n        }\n        );\n  }\n\n  assignTransaction(){\n    this.spinner.show();\n\n    let tellerid = this.processTransactionForm.get(\"tellerid\").value;\n\n    let teller = this.operationsFacade.getTransactionalTellerById(tellerid);\n    let tellerUserVo = this.turnToUserVO(teller);\n    this.operationsFacade.transaction.treatedBy.push(tellerUserVo);\n    this.operationsFacade.transaction.status = \"Processing\";\n    \n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(() => {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Assign Transaction. Please try again.\")\n        }\n      );\n  }\n\n  markTransactionHasIssue(id: string){\n    this.spinner.show();\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n\n    this.operationsFacade.transaction.status = \"Issue\";\n    this.operationsFacade.transaction.timeIssueFlagged = new Date();\n    this.operationsFacade.transaction.flaggedIssueBy.push(this.userAccess.user);\n\n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(()=> {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Flag Transaction. Please try again.\")\n        }\n        );\n  }\n\n  rejectTransaction(id: string){\n    this.spinner.show();\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n\n    this.operationsFacade.transaction.status = \"Rejected\";\n    this.operationsFacade.transaction.timeRejected.push(new Date());\n    this.operationsFacade.transaction.rejectedBy.push(this.userAccess.user);\n\n    this._transactionService.updateTransaction(this.operationsFacade.transaction)\n        .subscribe(()=> {\n          this.spinner.hide();\n        },\n        (err: HttpErrorResponse) => {\n          this.spinner.hide();\n            console.log(\"Error: \" + err);\n            this.alertService.error(\"Unable to Reject Transaction. Please try again.\")\n        }\n    );\n  }\n\n  turnToUserVO(user: Accounts): UserVO{\n    let _user = new UserVO();\n    _user.firstname = user.firstname;\n    _user.lastname = user.lastname;\n    _user.identity = user.identity;\n    _user.email = user.username;\n    _user.roles = user.roles;\n\n    return _user;\n  }\n\n  selectedTransaction(id: string){\n    this.operationsFacade.transaction = this.operationsFacade.getTransaction(id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\nimport { Configuration } from 'src/app/config';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { delay, catchError } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { UserLoginApiModel } from '../apimodels/userloginapimodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = false;\n  httpOptions = {};\n\n  constructor(private _configuration: Configuration, private _http: HttpClient) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authoratization': ''\n      })\n    };\n  }\n\n  login(model: UserLoginApiModel){\n    return this._http.post<UserLoginApiModel>(this._configuration.ServerAdminWithApiAccountUrl + \"login\", JSON.stringify(model), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getNewUserProfile(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getNewAccountProfile\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getUserOldAccount(email: string){\n    return this._http.post(this._configuration.ServerAdminWithApiAccountUrl + \"getUserUsingAccountByEmail\", JSON.stringify(email), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  setSession(authResult) {\n      const expiresAt = moment().add(authResult.expires_in,'second');\n      localStorage.removeItem('id_token');\n      localStorage.setItem('id_token', authResult.auth_token);\n      localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n  }\n\n  getExpiration() {\n      const expiration = localStorage.getItem(\"expires_at\");\n      const expiresAt = JSON.parse(expiration);\n      return moment(expiresAt);\n  }\n\n  isLoggedIn():boolean{\n      return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut(){\n      return !this.isLoggedIn();\n  }     \n\n  logout(){\n      localStorage.removeItem('id_token');\n      localStorage.removeItem(\"expires_at\");\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Configuration } from 'src/app/config';\nimport { catchError, delay } from 'rxjs/operators';\nimport { TransactionType } from 'src/app/domainmodel/transactiontype';\nimport { UserVO } from 'src/app/valueobjects/userVO';\nimport { Accounts } from 'src/app/valueobjects/accountvo';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { TransactionStore } from 'src/app/store/operations/transaction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationsService {\n  \n  httpOptions = {};\n\n  constructor(private _http: HttpClient, private _configuration: Configuration,\n    public transactionStore: TransactionStore) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authoratization': ''\n      })\n    };\n  }  \n\n  getTransactiontypes(){\n    return this._http.get<TransactionType>(this._configuration.ServerAdminWithApiUrl + \"getalltransactiontypes\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n  \n  getTodaysTransactions(){\n    return this._http.post<QueueITTransaction>(this._configuration.ServerOperationsWithApiUrl + \"getTodaysTransactions\", this.httpOptions)\n        .pipe(delay(100),catchError(this.handleError));\n  }\n\n  getAssignedTransactionsForTeller(id: string){\n    return this._http.post<QueueITTransaction>(this._configuration.ServerOperationsWithApiUrl + \"getAssignedTellersTransactions\", JSON.stringify(id), this.httpOptions)\n        .pipe(delay(100), catchError(this.handleError));\n  }\n\n  getSeniorTellers(){\n    return this._http.get<UserVO>(this._configuration.ServerOperationsWithApiUrl + \"getallseniortellers\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getTransactionalTellers(){\n    return this._http.get<UserVO>(this._configuration.ServerOperationsWithApiUrl + \"getalltransactionaltellers\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Configuration } from 'src/app/config';\nimport { catchError, retry, finalize } from 'rxjs/operators';\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\nimport { TransactionApiModel } from '../apimodels/transactionapimodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n  httpOptions = {};\n\n  constructor(private _http: HttpClient, private _configuration: Configuration) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authoratization': ''\n      })\n    };\n  }\n\n  addTransaction(transaction: TransactionApiModel){\n    return this._http.post<TransactionApiModel>(this._configuration.ServerOperationsWithApiUrl + \"addtransaction\", JSON.stringify(transaction), this.httpOptions)\n        .pipe(retry(2), catchError(this.handleError));\n  }\n\n  updateTransaction(transaction: QueueITTransaction){    \n    return this._http.post<QueueITTransaction>(this._configuration.ServerOperationsWithApiUrl + \"updatetransaction\", JSON.stringify(transaction), this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  getTransactions(){\n    return this._http.get<QueueITTransaction>(this._configuration.ServerOperationsWithApiUrl + \"getalltransactions\", this.httpOptions)\n        .pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n  testSignalr(){\n    return this._http.post(this._configuration.ApiServer + \"api/message\", this.httpOptions)\n          .pipe(catchError(this.handleError))\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { observable, action } from 'mobx';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\n\r\nInjectable()\r\nexport class UserAccess{\r\n    @observable users: UserVO[];\r\n    @observable user: UserVO;\r\n    @observable isAdmin: boolean;\r\n    @observable isTeller: boolean;\r\n    @observable isTransactionalTeller: boolean;\r\n    @observable isSeniorTeller: boolean;\r\n    @observable auth: boolean;\r\n\r\n    constructor(){\r\n        this.user = new UserVO();\r\n        this.users = [];\r\n        this.isAdmin = false;\r\n        this.isTransactionalTeller = false;\r\n        this.isSeniorTeller = false;\r\n        this.isTeller = false;\r\n        this.auth = false;\r\n    }\r\n\r\n    isHasMoreThanOneRole(roles: string[]): boolean{\r\n        if(roles.length > 1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    @action accessibleRoute(role: string): string{\r\n        if(role == \"ADMIN\"){\r\n            return 'admin';\r\n        }\r\n        else if(role == \"SENIOR TELLER\"){\r\n            this.isSeniorTeller = true;\r\n            return \"operations/process-transactions\";\r\n        }\r\n        else if( role == \"TELLER\"){\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else if( role == \"TRANSACTIONAL TELLER\"){\r\n            this.isTransactionalTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else{\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n    }\r\n}","module.exports = \".form-element-list{\\r\\n    padding: 0px;\\r\\n    margin-top: 5%;\\r\\n}\\r\\n.awaiting-mail{\\r\\n    background-color:yellow;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3BlcmF0aW9ucy9zdGF0dXNyZXBvcnRiYXIvc3RhdHVzcmVwb3J0YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjtBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvb3BlcmF0aW9ucy9zdGF0dXNyZXBvcnRiYXIvc3RhdHVzcmVwb3J0YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1lbGVtZW50LWxpc3R7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxufVxyXG4uYXdhaXRpbmctbWFpbHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6eWVsbG93O1xyXG59Il19 */\"","module.exports = \"<div *mobxAutorun>\\n    <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">        \\n        <label class=\\\"bg-info\\\" style=\\\"color: white; width: 100%;\\\"><b><em>Submitted:&nbsp;56</em></b></label>&nbsp;&nbsp;\\n        <label class=\\\"bg-warning\\\" style=\\\"color: blue; width: 100%;\\\"><b><em>Processing:&nbsp;56</em></b></label>&nbsp;&nbsp;\\n        <label class=\\\"awaiting-mail label\\\" style=\\\"color: red;  width: 100%;\\\"><b><em>Awaiting-Mail:&nbsp;56</em></b></label>&nbsp;&nbsp;\\n        <label class=\\\"bg-danger\\\" style=\\\"color: yellow;  width: 100%;\\\"><b><em>Rejected:&nbsp;56</em></b></label>\\n    </div>    \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-statusreportbar',\n  templateUrl: './statusreportbar.component.html',\n  styleUrls: ['./statusreportbar.component.css']\n})\nexport class StatusreportbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class TellerTransactionActivity{\r\n    tellerId: string;\r\n    tellerFullName: string;\r\n    status: string;\r\n    count: number;\r\n    amountProcessed: number;\r\n\r\n    constructor(){\r\n        this.count = 0;\r\n        this.amountProcessed = 0;\r\n    }\r\n}","import { observable, computed, action } from 'mobx';\r\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\nimport { TellerTransactionActivity } from './displaymodels/telleractivitybreakdown';\r\nimport { TellerReportSystem } from './storehelpers/tellerreportsystem';\r\n\r\n@Injectable()\r\nexport class ReportFacade{\r\n\r\n    //#region \"containers for data\"\r\n    @observable transactionsInRange: QueueITTransaction[];\r\n    //for dashboard figures and count\r\n    @observable submittedTransactions: QueueITTransaction[];\r\n    @observable processingTransactions: QueueITTransaction[];\r\n    @observable awaitingMailTransactions: QueueITTransaction[];\r\n    @observable rejectedTransactions: QueueITTransaction[];\r\n    @observable completedTransactions: QueueITTransaction[];\r\n    @observable returnedTransactions: QueueITTransaction[];\r\n\r\n    //for report summary\r\n    @observable summarySubmittedTransactions: QueueITTransaction[];\r\n    @observable summaryCompletedTransactions: QueueITTransaction[];\r\n    @observable summaryReturnedTransactions: QueueITTransaction[];\r\n    //#endregion\r\n\r\n    \r\n\r\n    //#region \"teller report system\"\r\n    @observable reportSystem: TellerReportSystem;\r\n    @observable transactionStatus: string;\r\n\r\n    @observable submittedTransactionsBreakdownList: TellerTransactionActivity[];\r\n    @observable processingTransactionsBreakdownList: TellerTransactionActivity[];\r\n    @observable awaitingMailTransactionsBreakdownList: TellerTransactionActivity[];\r\n    @observable transactionsBreakdownList: TellerTransactionActivity[];\r\n    //#endregion\r\n\r\n    constructor(){\r\n        this.transactionsInRange = [];\r\n        this.submittedTransactions = [];\r\n        this.processingTransactions = [];\r\n        this.awaitingMailTransactions = [];\r\n        this.rejectedTransactions = [];\r\n        this.completedTransactions = [];\r\n        this.returnedTransactions = [];\r\n        this.summaryCompletedTransactions = [];\r\n        this.summaryReturnedTransactions = [];\r\n        this.summarySubmittedTransactions = [];\r\n\r\n        this.submittedTransactionsBreakdownList = [];\r\n        this.processingTransactionsBreakdownList = [];\r\n        this.awaitingMailTransactionsBreakdownList = [];\r\n        this.transactionsBreakdownList = [];\r\n        \r\n    }\r\n    //#region Today Dashboard Snapshot Setup\r\n\r\n    @computed get getTransactionsInRange(){\r\n        return this.transactionsInRange;\r\n    }\r\n\r\n    @computed get getSumOfTransactionsInRange(){\r\n        var sumOfTransactions = 0;\r\n        this.transactionsInRange.forEach(transaction => {\r\n            if(transaction.status == \"Returned\"){\r\n                sumOfTransactions += transaction.amount;\r\n            }            \r\n        });\r\n        return sumOfTransactions;\r\n    }\r\n\r\n    @action clearTransactionsInRange(){\r\n        this.transactionsInRange = [];\r\n    }\r\n    \r\n    @action sortSubmittedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.submittedTransactions = transactions.filter(t => t.status == \"Submitted\");\r\n        return this.submittedTransactions;\r\n    }\r\n\r\n    @computed get getSubmittedTransactions(){\r\n        return this.submittedTransactions.length;\r\n    }\r\n\r\n    @action sortSummaryOfSubmittedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.summarySubmittedTransactions = transactions.filter(t => t.status == \"Submitted\");\r\n        return this.summarySubmittedTransactions;\r\n    }\r\n\r\n    @computed get getSummaryOfSubmittedTransactions(){\r\n        return this.summarySubmittedTransactions.length;\r\n    }\r\n\r\n    @action sortTransactionsBeingProcessed(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.processingTransactions = transactions.filter(t => t.status == \"Processing\");\r\n        return this.processingTransactions;\r\n    }\r\n    \r\n    @computed get getTransactionsBeingProcessed(){\r\n        return this.processingTransactions.length;\r\n    }\r\n\r\n    @action sortTransactionsAwaitingMail(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.awaitingMailTransactions = transactions.filter(t => t.status == \"Awaiting-Mail\");\r\n        return this.awaitingMailTransactions;\r\n    }\r\n    \r\n    @computed get getTransactionsAwaitingMail(){\r\n        return this.awaitingMailTransactions.length;\r\n    }\r\n\r\n    @action sortRejectedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.rejectedTransactions = transactions.filter(t => t.status == \"Rejected\");\r\n        return this.rejectedTransactions;\r\n    }\r\n    \r\n    @computed get getRejectedTransactions(){\r\n        return this.rejectedTransactions.length;\r\n    }\r\n\r\n    @action sortCompletedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.completedTransactions = transactions.filter(t => t.status == \"Completed\");\r\n        return this.completedTransactions;\r\n    }\r\n    \r\n    @computed get getCompletedTransactions(){\r\n        return this.completedTransactions.length;\r\n    }\r\n\r\n    @action sortSummaryOfCompletedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.summaryCompletedTransactions = transactions.filter(t => t.status == \"Completed\");\r\n        return this.summaryCompletedTransactions;\r\n    }\r\n    \r\n    @computed get getSummaryOfCompletedTransactions(){\r\n        return this.summaryCompletedTransactions.length;\r\n    }\r\n\r\n    @action sortReturnedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.returnedTransactions = transactions.filter(t => t.status == \"Returned\");\r\n        return this.returnedTransactions;\r\n    }\r\n    \r\n    @computed get getReturnedTransactions(){\r\n        return this.returnedTransactions.length;\r\n    }\r\n\r\n    @action sortSummaryOfReturnedTransactions(transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.summaryReturnedTransactions = transactions.filter(t => t.status == \"Returned\");\r\n        return this.summaryReturnedTransactions;\r\n    }\r\n    \r\n    @computed get getSummaryOfReturnedTransactions(){\r\n        return this.summaryReturnedTransactions.length;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Teller Transaction Activity Breakdown    \r\n    @computed get submittedTransactionActivity(){\r\n        return this.submittedTransactionsBreakdownList;\r\n    }\r\n\r\n    @computed get transactionActivity(){\r\n        return this.transactionsBreakdownList;\r\n    }\r\n\r\n    prepareSubmittedTransactionActiviity(transactions: QueueITTransaction[]){\r\n        this.transactionsBreakdownList = [];\r\n        transactions.forEach(transaction => {\r\n            if(transaction.status.toUpperCase() == \"SUBMITTED\"){\r\n                let activity = new TellerTransactionActivity();\r\n                activity.tellerFullName = transaction.createdBy.firstname + \" \" + transaction.createdBy.lastname;\r\n                activity.count++;\r\n                activity.status = transaction.status;\r\n                activity.amountProcessed += transaction.amount;\r\n                console.log(transaction);\r\n                this.transactionsBreakdownList.push(activity);\r\n            }\r\n        });\r\n    }\r\n\r\n    @computed get processingTransactionActivity(){\r\n        return this.processingTransactionsBreakdownList;\r\n    }\r\n\r\n    prepareProcessingTransactionActiviity(transactions: QueueITTransaction[]){\r\n        this.transactionsBreakdownList = [];\r\n        transactions.forEach(transaction => {\r\n            if(transaction.status.toUpperCase() == \"PROCESSING\"){                \r\n                transaction.treatedBy.forEach(teller => {\r\n                    teller.roles.forEach(role => {\r\n                        if(role == \"SENIOR TELLER\"){\r\n                            let activity = new TellerTransactionActivity();\r\n                            activity.tellerFullName = teller.firstname + \" \" + teller.lastname;\r\n                            activity.count++;\r\n                            activity.status = transaction.status;\r\n                            activity.amountProcessed += transaction.amount;\r\n                            this.transactionsBreakdownList.push(activity);\r\n                        }\r\n                    });\r\n                });                \r\n            }\r\n        });\r\n    }\r\n\r\n    @computed get awaitingMailTransactionActivity(){\r\n        return this.awaitingMailTransactionsBreakdownList;\r\n    }\r\n\r\n    prepareAwaitingMailTransactionActiviity(transactions: QueueITTransaction[]){\r\n        this.transactionsBreakdownList = [];\r\n        transactions.forEach(transaction => {\r\n            if(transaction.status.toUpperCase() == \"AWAITING-MAIL\"){                \r\n                transaction.treatedBy.forEach(teller => {\r\n                    teller.roles.forEach(role => {\r\n                        if(role == \"SENIOR TELLER\"){\r\n                            let activity = new TellerTransactionActivity();\r\n                            activity.tellerFullName = teller.firstname + \" \" + teller.lastname;\r\n                            activity.count++;\r\n                            activity.status = transaction.status;\r\n                            activity.amountProcessed += transaction.amount;\r\n                            this.transactionsBreakdownList.push(activity);\r\n                        }\r\n                    });\r\n                });                \r\n            }\r\n        });\r\n    }\r\n    //#endregion\r\n}","import { Injectable } from '@angular/core';\r\nimport { observable, action, autorun, computed } from 'mobx'\r\nimport { Role } from '../../domainmodel/role';\r\nimport { GeneralService } from 'src/app/admin/services/general.service';\r\n\r\n@Injectable()\r\nexport class RoleFacade{\r\n    @observable roles: Role[];\r\n    @observable role: Role;\r\n\r\n    constructor(private _generalService: GeneralService){\r\n        this.roles = [];\r\n        this.role = new Role();\r\n        autorun(() => {\r\n            this._generalService.getRoles()\r\n                .subscribe((data: Role[]) => {\r\n                    this.roles = data;\r\n                });\r\n        });\r\n    }\r\n\r\n    @computed get getAllRoles(): Role[]{        \r\n        return this.roles;\r\n    }\r\n\r\n    @action getRole(id: string){\r\n        var role  = this.roles.find( r => r.id == id);\r\n        if(role != null){\r\n            return role;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateRole(role: Role){\r\n        this.roles.forEach(element => {\r\n            if(element.id == role.id){\r\n                element.name = role.name;\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { observable, action, autorun, computed } from 'mobx'\r\nimport { Role } from '../../domainmodel/role';\r\nimport { GeneralService } from '../../admin/services/general.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Status } from '../../domainmodel/status';\r\n\r\n@Injectable()\r\nexport class StatusFacade{\r\n    @observable statusList: Status[];\r\n    @observable status: Status;\r\n\r\n    constructor(private _generalService: GeneralService){\r\n        this.statusList = [];\r\n        this.status = new Status();\r\n        autorun(() => {\r\n            this._generalService.getStatusList()\r\n                .subscribe((data: Status[]) => {\r\n                    this.statusList = data;\r\n                });\r\n        });\r\n    }\r\n\r\n    @computed get getAllStatus(): Status[]{        \r\n        return this.statusList;\r\n    }\r\n\r\n    @action getStatus(id: string){\r\n        var status = this.status = this.statusList.find( s => s.id == id);\r\n        if(status != null){\r\n            return status;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateStatus(status: Status){\r\n        this.statusList.forEach(element => {\r\n            if(element.id === status.id){\r\n                element.name = status.name;\r\n            }\r\n        });\r\n    }\r\n}","import { TransactionActivityItem } from './tellertransactionitem';\r\nimport { TellerTransactionActivity } from '../displaymodels/telleractivitybreakdown';\r\nimport { observable, action, computed } from 'mobx';\r\n\r\nexport class TellerReportSystem {\r\n   @observable Activities: TransactionActivityItem[];\r\n   NumberOfItems: number;\r\n   Total:number;\r\n   @observable activitiesByStatus = [];\r\n\r\n   constructor(){\r\n       this.Activities = [];\r\n       this.NumberOfItems = 0;\r\n       this.Total = 0;\r\n       this.activitiesByStatus = [];\r\n   }\r\n\r\n   IsExistingInReport(tellerId: string): boolean{\r\n        this.Activities.forEach(teller => {\r\n            if(teller.getTellerId() == tellerId){\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return false;\r\n   }\r\n\r\n   addItem(activity: TellerTransactionActivity){\r\n       let newItem:boolean = true;\r\n\r\n       for(var i = 0; i < this.Activities.length; i++){\r\n           if(this.Activities[i].activity.tellerId === activity.tellerId){\r\n               newItem = false;\r\n               this.Activities[i].incrementCount();\r\n           }\r\n       }\r\n\r\n       if(newItem){\r\n          let teller = new TransactionActivityItem(activity);\r\n          this.Activities.push(teller);\r\n       }\r\n   }\r\n\r\n    @action addItemWithQuantity(activity: TellerTransactionActivity, amount: number){\r\n       let newItem:boolean = true;\r\n       for(var i = 0; i < this.Activities.length; i++){\r\n           if(this.Activities[i].activity.tellerId === activity.tellerId){\r\n               newItem = false;\r\n               this.Activities[i].incrementCount();\r\n               this.Activities[i].incrementAmountProcessed(amount);\r\n           }\r\n       }\r\n\r\n       if(newItem){\r\n          let _activity = new TransactionActivityItem(activity);\r\n          _activity.incrementCount();\r\n          _activity.incrementAmountProcessed(amount);\r\n          this.Activities.push(_activity);\r\n       }\r\n   }\r\n\r\n   @action update(activity: TellerTransactionActivity, count:number){\r\n       if(count >= 0){\r\n           let teller: TransactionActivityItem = null;\r\n                       \r\n           for(var i = 0; i < this.Activities.length; i++){\r\n               if(this.Activities[i].activity.tellerId === activity.tellerId){\r\n                   if(count !== 0){\r\n                       this.Activities[i].setCount(count);\r\n                   }\r\n                   else{\r\n                       teller = this.Activities[i];\r\n                       break;\r\n                   }\r\n               }\r\n           }\r\n\r\n           if(teller !== null){\r\n               this.Activities.splice(i, 1);\r\n           }\r\n       }\r\n   }\r\n\r\n   getItems(): Array<TransactionActivityItem>{\r\n       return this.Activities;\r\n   }\r\n\r\n   getNumberOfItems(): number{\r\n       this.NumberOfItems = 0;\r\n\r\n       for(var i = 0; i < this.Activities.length; i++){\r\n           this.NumberOfItems += this.Activities[i].getCount();\r\n       }\r\n\r\n       return this.NumberOfItems;\r\n   }\r\n\r\n   @computed get getActivitiesByStatus(): TransactionActivityItem[]{\r\n       return this.activitiesByStatus;\r\n   }\r\n\r\n   @action setActivitiesByStatus(status: string): TransactionActivityItem[]{       \r\n       this.Activities.forEach(activity => {\r\n           if(activity.getTransactionStatus() == status){\r\n               this.activitiesByStatus.push(activity);\r\n               console.log(this.activitiesByStatus.length);\r\n               return this.activitiesByStatus;\r\n           }\r\n       });\r\n\r\n       return null;\r\n   }\r\n\r\n   getTotal(){\r\n       return this.Total;\r\n   }\r\n\r\n   clear(){\r\n       this.Activities = [];\r\n       this.NumberOfItems = 0;\r\n       this.Total = 0;\r\n   }\r\n}","import { TellerTransactionActivity } from '../displaymodels/telleractivitybreakdown';\r\n\r\nexport class TransactionActivityItem{\r\n    activity: TellerTransactionActivity;\r\n\r\n    constructor(activity: TellerTransactionActivity){\r\n        this.activity = activity;\r\n        this.activity.count = 0;\r\n        this.activity.amountProcessed = 0;\r\n    }\r\n\r\n    getActivity(): TellerTransactionActivity{\r\n        return this.activity;\r\n    }\r\n\r\n    getCount(): number{\r\n        return this.activity.count;\r\n    }\r\n\r\n    setCount(qty:number){\r\n        this.activity.count = qty;\r\n    }\r\n\r\n    getTellerFullName(): string{\r\n        return this.activity.tellerFullName;\r\n    }\r\n\r\n    getTransactionStatus(): string{\r\n        return this.activity.status;\r\n    }\r\n\r\n    getTellerId(): string{\r\n        return this.activity.tellerId;\r\n    }\r\n\r\n    setTellerId(tellerId:string){\r\n        this.activity.tellerId = tellerId;\r\n    }\r\n\r\n    incrementCount(){\r\n        this.activity.count++;\r\n    }\r\n\r\n    getAmountProcessed(): number{\r\n        return this.activity.amountProcessed;\r\n    }\r\n\r\n    setAmount(amount:number){\r\n        this.activity.amountProcessed = amount;\r\n    }\r\n\r\n    incrementAmountProcessed(amount: number){\r\n        this.activity.amountProcessed += amount;\r\n    }\r\n\r\n    getTotalCollected(){\r\n        this.activity.amountProcessed;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { observable, action, computed, autorun } from 'mobx';\r\nimport { TransactionType } from '../../domainmodel/transactiontype';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { GeneralService } from '../../admin/services/general.service';\r\nimport { OperationsService } from 'src/app/operations/services/operations.service';\r\n\r\n@Injectable()\r\nexport class TransactionTypeFacade{\r\n    @observable transactiontypes: TransactionType[];\r\n    @observable transactionType: TransactionType;\r\n\r\n    constructor(private _operationsService: OperationsService){\r\n        this.transactiontypes = [];\r\n        this.transactionType = new TransactionType();\r\n        autorun(()=>{\r\n            //load up transaction types\r\n            this._operationsService.getTransactiontypes()\r\n            .subscribe((data: TransactionType[]) => {\r\n                this.transactiontypes = data;\r\n            });\r\n        });\r\n    }\r\n\r\n    @computed get getAllTransactionTypes(): TransactionType[]{        \r\n        return this.transactiontypes;\r\n    }\r\n\r\n    @action getTransactionType(id: string){\r\n        var transactiontype = this.transactiontypes.find( s => s.id == id);\r\n        if(transactiontype != null){\r\n            return transactiontype;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateTransactionType(transactionType: TransactionType){\r\n        this.transactiontypes.forEach(element => {\r\n            if(element.id == transactionType.id){\r\n                element.name = transactionType.name;\r\n            }\r\n        });\r\n    }\r\n}","import { observable, computed, action } from 'mobx';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\n\r\nexport class UserFacade{\r\n    @observable users: UserVO[] = [];\r\n    @observable user: UserVO = new UserVO();\r\n    @observable error: string = null;\r\n    \r\n    @computed get getUsers(){\r\n        return this.users;\r\n    }\r\n\r\n    @action getUser(id: string){\r\n        let _user = this.users.find(u => u.identity == id);\r\n        if(_user != null){\r\n            return _user;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateUser(user: UserVO){\r\n        this.users.forEach(iuser => {\r\n            if(iuser.identity == user.identity){\r\n                iuser.email = user.email;\r\n                iuser.firstname = user.firstname;\r\n                iuser.lastname = user.lastname;\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { observable, action } from 'mobx';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\n\r\nInjectable()\r\nexport class UserAccess{\r\n    @observable users: UserVO[];\r\n    @observable user: UserVO;\r\n    @observable isAdmin: boolean;\r\n    @observable isTeller: boolean;\r\n    @observable isTransactionalTeller: boolean;\r\n    @observable isSeniorTeller: boolean;\r\n\r\n    constructor(){\r\n        this.user = new UserVO();\r\n        this.users = [];\r\n        this.isAdmin = false;\r\n        this.isTransactionalTeller = false;\r\n        this.isSeniorTeller = false;\r\n        this.isTeller = false;\r\n    }\r\n\r\n    isHasMoreThanOneRole(roles: string[]): boolean{\r\n        if(roles.length > 1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    @action accessibleRoute(role: string): string{\r\n        if(role == \"ADMIN\"){\r\n            this.isAdmin = true;\r\n            return 'admin';\r\n        }\r\n        else if(role == \"SENIOR TELLER\"){\r\n            this.isSeniorTeller = true;\r\n            return \"operations/process-transactions\";\r\n        }\r\n        else if( role == \"TELLER\"){\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else if( role == \"TRANSACTIONAL TELLER\"){\r\n            this.isTransactionalTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n        else{\r\n            this.isTeller = true;\r\n            return \"operations/process-jobs\";\r\n        }\r\n    }\r\n}","import { QueueITTransaction } from '../../domainmodel/queueittransaction';\r\nimport { Accounts } from '../../valueobjects/accountvo';\r\nimport { UserVO } from '../../valueobjects/userVO';\r\nimport { observable, computed, action, autorun } from 'mobx';\r\nimport { Injectable } from '@angular/core';\r\nimport { OperationsService } from 'src/app/operations/services/operations.service';\r\n\r\n@Injectable()\r\nexport class OperationsFacade{\r\n    //#region Transactions\r\n    @observable transactions: QueueITTransaction[];\r\n    @observable transaction: QueueITTransaction;\r\n    @observable tellerTransactions: QueueITTransaction[];\r\n    //#endregion\r\n\r\n    //#region Tellers\r\n    @observable seniorTellers: Accounts[];\r\n    @observable tellers: Accounts[];\r\n    @observable transactionalTellers: Accounts[];\r\n    @observable teller: Accounts;\r\n    @observable tellersUserVO: UserVO[];\r\n    @observable seniorTellersUserVO: UserVO[];\r\n    //#endregion\r\n\r\n    constructor(private _operationsService: OperationsService){\r\n            this.transactions = [];\r\n            this.transaction = new QueueITTransaction();\r\n            this.tellerTransactions = [];\r\n            this.seniorTellers = [];\r\n            this.tellers = [];\r\n            this.transactionalTellers = [];\r\n            this.tellersUserVO = [];\r\n            this.teller = new Accounts();\r\n            this.seniorTellersUserVO = [];\r\n            \r\n            autorun(()=>{\r\n                //load up senior tellers\r\n                this._operationsService.getSeniorTellers()\r\n                .subscribe((data: UserVO[]) => {\r\n                    this.seniorTellersUserVO = data;\r\n                });\r\n\r\n                //load up transactional teller\r\n                this._operationsService.getTransactionalTellers()\r\n                    .subscribe((data: UserVO[]) => {\r\n                        this.tellersUserVO = data;\r\n                    });\r\n            });\r\n        \r\n    }\r\n    \r\n    //#region Teller\r\n    @computed get getTellerList(){\r\n        return this.tellers;\r\n    }\r\n\r\n    @computed get getSeniorTellerList(){\r\n        return this.seniorTellers;\r\n    }\r\n\r\n    @computed get getTellerUserrVOList(){\r\n        return this.tellersUserVO;\r\n    }\r\n\r\n    @computed get getSeniorTellerUserVOList(){\r\n        return this.seniorTellersUserVO;\r\n    }\r\n\r\n    @action getTellerUserVOById(id: string){\r\n        var teller = this.tellersUserVO.find(t => t.identity == id);\r\n        if(teller != null){\r\n            return teller;\r\n        }\r\n        return teller;\r\n    }\r\n\r\n    @action getTellersFromTellerList(tellers: UserVO[]){\r\n        this.tellersUserVO = tellers.filter(teller => teller.roles.find(role => role == \"TELLER\"));\r\n    }\r\n    \r\n    @action getSeniorTellerById(id: string){\r\n        var teller = this.seniorTellersUserVO.find(t => t.identity == id);\r\n        if(teller != null){\r\n            return teller;\r\n        }\r\n        return teller;\r\n    }\r\n\r\n    @action getTransactionalTellerById(id: string){\r\n        var _teller = this.transactionalTellers.find(t => t.identity == id);\r\n        if(_teller != null){\r\n            return _teller;\r\n        }\r\n        return _teller;\r\n    }\r\n\r\n    @action getTellerById(id: string){\r\n        var _teller = this.tellersUserVO.find(t => t.identity == id);\r\n        if(_teller != null){\r\n            return _teller;\r\n        }\r\n        return _teller;\r\n    }\r\n\r\n    @computed get getAccountsUserVOEquivalent(){\r\n        return this.tellersUserVO;\r\n    }\r\n\r\n    @action turnAccountsToUserVO(accounts: Accounts[]){\r\n        accounts.forEach(account => {\r\n            var userVo = new UserVO();\r\n            userVo.email = account.username;\r\n            userVo.firstname = account.firstname;\r\n            userVo.lastname = account.lastname;\r\n            userVo.roles = account.roles;\r\n            userVo.identity = account.identity;\r\n            this.tellersUserVO.push(userVo);\r\n        });        \r\n    }\r\n    //#endregion\r\n\r\n    //#region Transaction\r\n    @computed get getTransactionList(){\r\n        return this.transactions;\r\n    }\r\n\r\n    @action getTransaction(id: string){\r\n        var transaction  = this.transactions.find( t => t.id == id);\r\n        if(transaction != null){\r\n            return transaction;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateTransaction(transaction: QueueITTransaction){\r\n        this.transactions.forEach(element => {\r\n            if(element.id == transaction.id){\r\n                element.amount = transaction.amount;\r\n                element.platenumber = transaction.platenumber;\r\n                element.status = transaction.status;\r\n                element.transactionType = transaction.transactionType;\r\n                element.rejectedBy = transaction.rejectedBy;\r\n                element.completedBy = transaction.completedBy;\r\n                element.flaggedIssueBy = transaction.flaggedIssueBy;\r\n                element.returnedBy = transaction.returnedBy;\r\n                element.timeCompleted = transaction.timeCompleted;\r\n                element.timeIssueFlagged = transaction.timeIssueFlagged;\r\n                element.timeRejected = transaction.timeRejected;\r\n                element.treatedBy = transaction.treatedBy;\r\n                element.customerName = transaction.customerName;\r\n            }\r\n        });\r\n    }\r\n    \r\n    @computed get getTellerTransactions(){\r\n        return this.tellerTransactions;\r\n    }    \r\n\r\n    @action assignedTransactions(id: string, transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.tellerTransactions = [];\r\n        transactions.forEach(transaction => {\r\n            transaction.treatedBy.forEach(teller => {\r\n                if(teller.identity == id && transaction.status == \"Submitted\"){\r\n                    this.tellerTransactions.push(transaction);\r\n                }\r\n            })            \r\n        });\r\n\r\n        return this.tellerTransactions;\r\n    }\r\n    //#endregion\r\n}","module.exports = \"<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{ cssClass(alert) }} alert-dismissable\\\">\\r\\n     {{alert.message}}\\r\\n     <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\r\\n</div>\"","﻿import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Alert, AlertType } from '../_models/index';\r\nimport { AlertService } from '../_services/index';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'alert',\r\n    templateUrl: 'alert.component.html'\r\n})\r\n\r\nexport class AlertComponent {\r\n    @Input() id: string;\r\n\r\n    alerts: Alert[] = [];\r\n\r\n    constructor(private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        this.alertService.getAlert(this.id).subscribe((alert: Alert) => {\r\n            if (!alert.message) {\r\n                // clear alerts when an empty alert is received\r\n                this.alerts = [];\r\n                return;\r\n            }\r\n\r\n            // add alert to array\r\n            this.alerts.push(alert);\r\n        });\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        this.alerts = this.alerts.filter(x => x !== alert);\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) {\r\n            return;\r\n        }\r\n\r\n        // return css class based on alert type\r\n        switch (alert.type) {\r\n            case AlertType.Success:\r\n                return 'alert alert-success';\r\n            case AlertType.Error:\r\n                return 'alert alert-danger alert-mg-b-0';\r\n            case AlertType.Info:\r\n                return 'alert alert-info';\r\n            case AlertType.Warning:\r\n                return 'alert alert-warning';\r\n        }\r\n    }\r\n}","﻿export * from './alert.component';","export class Alert {\r\n    type: AlertType;\r\n    message: string;\r\n    alertId: string;\r\n    keepAfterRouteChange: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","﻿export * from './alert';","﻿import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n//import { Subject } from 'rxjs/Subject';\r\n\r\nimport { Alert, AlertType } from '../_models/alert';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private keepAfterRouteChange = false;\r\n\r\n    constructor(private router: Router) {\r\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n        router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                if (this.keepAfterRouteChange) {\r\n                    // only keep for a single route change\r\n                    this.keepAfterRouteChange = false;\r\n                } else {\r\n                    // clear alert messages\r\n                    this.clear();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // subscribe to alerts\r\n    getAlert(alertId?: string): Observable<any> {\r\n        return this.subject.asObservable().pipe(filter((x: Alert) => x && x.alertId === alertId));\r\n    }\r\n\r\n    // // subscribe to alerts\r\n    // getAlert(alertId?: string): Observable<any> {\r\n    //     let _subject = null;\r\n    //     this.subject.asObservable().forEach(x => {\r\n    //         if(x.alertId == alertId){\r\n    //                 _subject = x;\r\n    //             }\r\n    //         });\r\n    //     return _subject;\r\n    // }\r\n\r\n    // convenience methods\r\n    success(message: string) {\r\n        this.alert(new Alert({ message, type: AlertType.Success }));\r\n    }\r\n\r\n    error(message: string) {\r\n        this.alert(new Alert({ message, type: AlertType.Error }));\r\n    }\r\n\r\n    info(message: string) {\r\n        this.alert(new Alert({ message, type: AlertType.Info }));\r\n    }\r\n\r\n    warn(message: string) {\r\n        this.alert(new Alert({ message, type: AlertType.Warning }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        this.keepAfterRouteChange = alert.keepAfterRouteChange;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(alertId?: string) {\r\n        this.subject.next(new Alert({ alertId }));\r\n    }\r\n}","﻿export * from './alert.service';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlertService } from './_services';\r\nimport { AlertComponent } from './_directives';\r\nimport { FeatherModule } from 'angular-feather';\r\nimport { Menu, Camera, Heart, Github, \r\n  Calendar, Archive, AtSign, BarChart2 ,\r\n  BookOpen, Check, Cloud, Award,\r\n  Bell, Book, ChevronRight, ChevronLeft,\r\n  Home, Clock, Coffee, Database,\r\n  Download, Edit3, Delete, Activity,\r\n  Filter, File, Folder, User, \r\n  Settings, Server, Save, Search,\r\n  Send, Share2, Star, Sun, Edit, \r\n  MinusCircle, LogOut, LogIn,\r\n  Grid,UserCheck, Map\r\n} from 'angular-feather/icons';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MobxAngularModule } from 'mobx-angular';\r\nimport { OperationsFacade } from '../services/operations/operationsfacade';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nconst icons = {\r\n  Menu,\r\n  MinusCircle,\r\n  Home,\r\n  Edit,\r\n  LogIn,\r\n  Map,\r\n  Camera,\r\n  User,\r\n  LogOut,\r\n  UserCheck,\r\n  Heart,\r\n  ChevronRight,\r\n  Github,\r\n  Book,\r\n  AtSign,\r\n  Award,\r\n  Filter,\r\n  Database,\r\n  Settings,\r\n  Activity,\r\n  BookOpen\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgxSpinnerModule,\r\n    NgbModule,\r\n    RouterModule,\r\n    MobxAngularModule,\r\n    NgxPaginationModule,\r\n    FeatherModule.pick(icons)\r\n  ],\r\n  declarations: [AlertComponent],\r\n  exports:[AlertComponent, FeatherModule, NgxSpinnerModule,\r\n          NgbModule, NgxPaginationModule, MobxAngularModule],\r\n  providers: [AlertService, NgxSpinnerModule, OperationsFacade]\r\n})\r\nexport class SharedModule { }\r\n","import { observable, computed, action } from 'mobx';\r\nimport { UserVO } from 'src/app/valueobjects/userVO';\r\nimport { Injectable } from '@angular/core';\r\nimport { Accounts } from 'src/app/valueobjects/accountvo';\r\n\r\n@Injectable()\r\nexport class TellerStore{\r\n    @observable seniortellers: Accounts[] = [];\r\n    @observable tellers: Accounts[] = [];\r\n    @observable teller: Accounts = new Accounts();\r\n    @observable tellersUserVO: UserVO[] = [];\r\n    @observable seniorTellersUserVO: UserVO[] = [];\r\n\r\n    constructor(){}\r\n\r\n    @computed get getTellerList(){\r\n        return this.tellers;\r\n    }\r\n\r\n    @computed get getSeniorTellerList(){\r\n        return this.seniortellers;\r\n    }\r\n\r\n    @computed get getTellerUserrVOList(){\r\n        return this.tellersUserVO;\r\n    }\r\n\r\n    @computed get getSeniorTellerUserVOList(){\r\n        return this.seniorTellersUserVO;\r\n    }\r\n\r\n    @action getTellerUserVOById(id: string){\r\n        var teller = this.tellersUserVO.find(t => t.identity == id);\r\n        if(teller != null){\r\n            return teller;\r\n        }\r\n        return teller;\r\n    }\r\n\r\n    @action getTellersFromTellerList(tellers: UserVO[]){\r\n        this.tellersUserVO = tellers.filter(teller => teller.roles.find(role => role == \"TELLER\"));\r\n    }\r\n    \r\n    @action getTellerById(id: string){\r\n        var teller = this.tellers.find(t => t.identity == id);\r\n        if(teller != null){\r\n            return teller;\r\n        }\r\n        return teller;\r\n    }\r\n\r\n    @computed get getAccountsUserVOEquivalent(){\r\n        return this.tellersUserVO;\r\n    }\r\n\r\n    @action turnAccountsToUserVO(accounts: Accounts[]){\r\n        accounts.forEach(account => {\r\n            var userVo = new UserVO();\r\n            userVo.email = account.username;\r\n            userVo.firstname = account.firstname;\r\n            userVo.lastname = account.lastname;\r\n            userVo.roles = account.roles;\r\n            userVo.identity = account.identity;\r\n            this.tellersUserVO.push(userVo);\r\n        });        \r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { observable, action, computed } from 'mobx';\r\nimport { QueueITTransaction } from 'src/app/domainmodel/queueittransaction';\r\n\r\n@Injectable()\r\nexport class TransactionStore{\r\n    @observable transactions: QueueITTransaction[] = [];\r\n    @observable transaction: QueueITTransaction = new QueueITTransaction();\r\n    @observable tellerTransactions: QueueITTransaction[] = [];\r\n    \r\n    constructor(){}\r\n\r\n    @computed get getTransactionList(){\r\n        return this.transactions;\r\n    }\r\n\r\n    @action getTransaction(id: string){\r\n        var transaction  = this.transactions.find( t => t.id == id);\r\n        if(transaction != null){\r\n            console.log(transaction);\r\n            return transaction;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @action updateTransaction(transaction: QueueITTransaction){\r\n        this.transactions.forEach(element => {\r\n            if(element.id == transaction.id){\r\n                element.amount = transaction.amount;\r\n                element.platenumber = transaction.platenumber;\r\n                element.status = transaction.status;\r\n                element.transactionType = transaction.transactionType;\r\n                element.rejectedBy = transaction.rejectedBy;\r\n                element.completedBy = transaction.completedBy;\r\n                element.flaggedIssueBy = transaction.flaggedIssueBy;\r\n                element.returnedBy = transaction.returnedBy;\r\n                element.timeCompleted = transaction.timeCompleted;\r\n                element.timeIssueFlagged = transaction.timeIssueFlagged;\r\n                element.timeRejected = transaction.timeRejected;\r\n                element.treatedBy = transaction.treatedBy;\r\n                element.customerName = transaction.customerName;\r\n            }\r\n        });\r\n    }\r\n    \r\n    @computed get getTellerTransactions(){\r\n        return this.tellerTransactions;\r\n    }    \r\n\r\n    @action assignedTransactions(id: string, transactions: QueueITTransaction[]): QueueITTransaction[]{\r\n        this.tellerTransactions = [];\r\n        transactions.forEach(transaction => {\r\n            transaction.treatedBy.forEach(teller => {\r\n                if(teller.identity == id){\r\n                    this.tellerTransactions.push(transaction);\r\n                }\r\n            })            \r\n        });\r\n\r\n        return this.tellerTransactions;\r\n    }\r\n}","export class Accounts{\r\n    identity: string;\r\n    password: string;\r\n    username: string;\r\n    lastname: string;\r\n    firstname: string;\r\n    roles: string[];\r\n\r\n    constructor(){\r\n        this.roles = [];\r\n    }\r\n}","export class CustomerVO{\r\n    firstname: string;\r\n    lastname: string;\r\n}","export class UserVO{\r\n    roles: string[];\r\n    lastname: string;\r\n    firstname: string;\r\n    email: string;\r\n    identity: any;\r\n    userType: string;\r\n    legacyId: string;\r\n    isActive: boolean;\r\n\r\n    constructor(){\r\n        this.roles = [];\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}